{
    "info": {
        "name": "3_1_Stories_Bugs",
        "_postman_id": "cd45c01c-dfec-44f1-89f4-4bb6c5fc316e",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
        {
            "name": "0. Init",
            "item": [
                {
                    "name": "0.1 Login",
                    "item": [
                        {
                            "name": "0.1.1 Local Auth",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "var data = JSON.parse(responseBody);",
                                            "",
                                            "pm.environment.set(\"token\", data.token);",
                                            "",
                                            "pm.environment.set(\"Pack_version1_data\", \"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\");",
                                            "pm.environment.set(\"Pack_version1_fileId\", \"atui_petstore30 - 0000.yaml\");",
                                            "pm.environment.set(\"Pack_version2_data\", \"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\");",
                                            "pm.environment.set(\"Pack_version2_fileId\", \"atui_petstore30 - 0000_SemiBreaking_in_all_operations.yaml\");",
                                            ""
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/auth/local",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "auth",
                                        "local"
                                    ]
                                },
                                "method": "POST",
                                "header": [],
                                "auth": {
                                    "type": "basic",
                                    "basic": [
                                        {
                                            "key": "username",
                                            "value": "{{Username}}",
                                            "type": "string"
                                        },
                                        {
                                            "key": "password",
                                            "value": "{{Password}}",
                                            "type": "string"
                                        }
                                    ]
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "0.1.2 Add role to user",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is OK\", function () {\r",
                                            "    pm.response.to.have.status(204);\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/internal/users/{{Username}}/systemRole",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "internal",
                                        "users",
                                        "{{Username}}",
                                        "systemRole"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{ \r\n    \"role\": \"System administrator\" \r\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        }
                    ]
                }
            ]
        },
        {
            "name": "8. Stories covering",
            "item": [
                {
                    "name": "8.1 APIHUB-5858 [BE] Automatically calculate latest release version",
                    "item": [
                        {
                            "name": "8.1.0 Delete static test-1 data from DB",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 204\", function () {\r",
                                            "    pm.response.to.have.status(204);\r",
                                            "});\r",
                                            ""
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/internal/clear/STATIC-TEST-1",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "internal",
                                        "clear",
                                        "STATIC-TEST-1"
                                    ]
                                },
                                "method": "DELETE",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.1.1 Add static test-1 group",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 201\", function () {\r",
                                            "    pm.response.to.have.status(201);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"static_root_group_2\", data.groupId)"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v1/groups",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v1",
                                        "groups"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\r\n    \"name\": \"Test Workspace\",\r\n    \"Alias\" :\"QS-STATIC-TEST-1\",\r\n    \"parentId\": \"\",\r\n    \"description\": \"Required for to upload hardcoded packages\",\r\n    \"imageUrl\": \"\"\r\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.1.2 Create package 3",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 201\", function () {\r",
                                            "    pm.response.to.have.status(201);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"package_3\", data.packageId)"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\r\n    \"id\": \"QS-STATIC-TEST-3.PKG\",\r\n    \"Alias\" :\"PKG3\",\r\n    \"name\": \"Test static package\",\r\n    \"parentId\": \"QS-STATIC-TEST-1\",\r\n    \"kind\":\"package\",\r\n    \"description\": \"Package to be built\",\r\n    \"serviceName\": \"\",\r\n    \"imageUrl\": \"\"\r\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.1.3 Check 'defaultVersion' for package without versions",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "\r",
                                            "pm.test(\"'defaultVersion' is empty\", function () {\r",
                                            "    pm.expect(data.defaultVersion).to.eq(\"\")\r",
                                            "    ;\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_3}}",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_3}}"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.1.4 Publish draft version for package 3",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 202\", function () {\r",
                                            "    pm.response.to.have.status(202);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"publish_id\", data.publishId)\r",
                                            "setTimeout(function(){}, 20000)"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_3}}/publish",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_3}}",
                                        "publish"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Transfer-Encoding",
                                        "value": "base64",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"clientBuild\"\r\n\r\nfalse\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"config\"\r\n\r\n{\r\n    \"packageId\": \"QS-STATIC-TEST-1.PKG3\",\r\n    \"version\": \"1.0\",\r\n    \"status\": \"draft\",\r\n    \"versionFolder\": \"qwerty\",\r\n    \"refs\": [],\r\n    \"files\": [{\r\n            \"fileId\": \"petstore.yaml\",\r\n            \"publish\": true\r\n        }\r\n    ]\r\n}\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"sources\"; filename=\"petstore_yml.zip\"\r\nContent-Type: application/zip;base64\r\n\r\nUEsDBBQAAAAIABFkaFUQiX2ZpQIAAIkKAAANAAAAcGV0c3RvcmUueWFtbNVWwW7bMAy9F+g/EN2AbofGaTvs4Ns2FFiAbSiw/oBm04k621IpOk0w7N9HyYrtZEmadgOK6hDEIkU+Pj3SNhZrZXUKJ5ej8Wh8cnyk68Kkx0cAcySnTZ3CuVjO/Q5rLjGF7/dqOkWCa2THhtCbSp1h7dAflFWrSvy+Tm6OjxySDxQMZ9BQmcKM2aZJYuPxkWvjjbRJ5pLHKp61/sElhpwi+39huaaqFC1T+KIdgypL8I4rq5REigX5JE+hFI/rgZHVNESM62ztpFUkwDnA7V1CNT5SpVm2u6WFmrsGaTnczNFlpC0H4j6be6hUvQTNWDlgA4TcUA2KwdQofFYIbyq1gPPx+O0gjPjdNZpQCihU6XBoctkMK9UBjGUtLaaCiFGIXDcVhirFwXh5IaYY31kj9zUs9PRiPD5NdxbzQeiZYg6KSC3BFCvmujVDla+o69firMbF6up2hi51/dPzwzME7x9ySZIOaMz0AA09FY5J19OhNTPCTr2JRFkr0g1ySW6dByPr4FyvCQtpnVdJZiqBKeFd0jq7xKtO2qkvuFBNybv5baRuixkLxUhk6AnY/wvuK588ArfGbem6T4SKEZRXwNamy4LDwW33BDF+a8qyO/eiSQ4zLvklv5P8975ZN5G57JtZeHdSgi50tvMC3MzcC/0fl5P8oBvYO/gCtM3B54f09oHF1OBO/m+kv3Uuje073UeOQ5E0zg+dcm1r/4N4rqIEurMehIK5KrXfk5nu+LmEIbf2kodGbwoBojkGu46y7q/S/LgV8O1er6E1Dep8U5GDZ6/qTsPkW4D1mhK0D3bAa3Lwknz/rjO0DdA//q3Arrce8PKzcL329j0at8IHgnc4hOteIoH1x1OamXyNxAqdk9ftPiLDmUdT2X9vQEyym80/UEsBAj8AFAAAAAgAEWRoVRCJfZmlAgAAiQoAAA0AJAAAAAAAAAAgAAAAAAAAAHBldHN0b3JlLnlhbWwKACAAAAAAAAEAGAAKKSMHVfPYARJQIwdV89gBOjCy/c3y2AFQSwUGAAAAAAEAAQBfAAAA0AIAAAAA\r\n----------------------------127308995100818139707097--",
                                    "options": {
                                        "raw": {
                                            "language": "text"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.1.5 Get package_3 versions",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"Package version saved\", function () {\r",
                                            "    pm.expect(data.versions.length).to.greaterThan(0);\r",
                                            "});\r",
                                            "\r",
                                            "pm.environment.set(\"version_1\", data.versions[0].version);\r",
                                            "pm.environment.set(\"version_1_2\", data.versions[0].version.split(\"@\")[0]);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_3}}/versions",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_3}}",
                                        "versions"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.1.6 Check that 'defaultVersion'  filled with 'draft' version",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "\r",
                                            "pm.test(\"'defaultVersion' filled with 'draft' version\", function () {\r",
                                            "    pm.expect(data.defaultVersion).to.eq(pm.variables.replaceIn('{{version_1_2}}'))\r",
                                            "    ;\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_3}}",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_3}}"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.1.7 Publish first 'release' version for package 3",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 202\", function () {\r",
                                            "    pm.response.to.have.status(202);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"publish_id\", data.publishId)\r",
                                            "setTimeout(function(){}, 20000)"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_3}}/publish",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_3}}",
                                        "publish"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Transfer-Encoding",
                                        "value": "base64",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"clientBuild\"\r\n\r\nfalse\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"config\"\r\n\r\n{\r\n    \"packageId\": \"QS-STATIC-TEST-1.PKG3\",\r\n    \"version\": \"2001.1\",\r\n    \"status\": \"release\",\r\n    \"versionFolder\": \"qwerty\",\r\n    \"refs\": [],\r\n    \"files\": [{\r\n            \"fileId\": \"petstore.yaml\",\r\n            \"publish\": true\r\n        },\r\n        {\r\n            \"fileId\": \"iot.yaml\",\r\n            \"publish\": true\r\n        }\r\n    ]\r\n}\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"sources\"; filename=\"documents.zip\"\r\nContent-Type: application/zip;base64\r\n\r\n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\r\n----------------------------127308995100818139707097--",
                                    "options": {
                                        "raw": {
                                            "language": "text"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.1.8 Get package_3 versions",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"New package version saved\", function () {\r",
                                            "    pm.expect(data.versions.length).to.greaterThan(0);\r",
                                            "});\r",
                                            "\r",
                                            "pm.environment.set(\"version_2\", data.versions[0].version);\r",
                                            "pm.environment.set(\"version_2_2\", data.versions[0].version.split(\"@\")[0])"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_3}}/versions",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_3}}",
                                        "versions"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.1.9 Check that 'defaultVersion'  filled with 'release' version",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "\r",
                                            "pm.test(\"'defaultVersion' filled with 'release' version\", function () {\r",
                                            "    pm.expect(data.defaultVersion).to.eq(pm.variables.replaceIn('{{version_2_2}}'))\r",
                                            "    ;\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_3}}",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_3}}"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.1.10 Publish second 'release' version for package 3",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 202\", function () {\r",
                                            "    pm.response.to.have.status(202);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"publish_id\", data.publishId)\r",
                                            "setTimeout(function(){}, 20000)"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_3}}/publish",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_3}}",
                                        "publish"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Transfer-Encoding",
                                        "value": "base64",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"clientBuild\"\r\n\r\nfalse\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"config\"\r\n\r\n{\r\n    \"packageId\": \"QS-STATIC-TEST-1.PKG3\",\r\n    \"version\": \"2001.2\",\r\n    \"status\": \"release\",\r\n    \"versionFolder\": \"qwerty\",\r\n    \"refs\": [],\r\n    \"files\": [{\r\n            \"fileId\": \"petstore.yaml\",\r\n            \"publish\": true\r\n        }\r\n    ]\r\n}\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"sources\"; filename=\"petstore_yml.zip\"\r\nContent-Type: application/zip;base64\r\n\r\nUEsDBBQAAAAIABFkaFUQiX2ZpQIAAIkKAAANAAAAcGV0c3RvcmUueWFtbNVWwW7bMAy9F+g/EN2AbofGaTvs4Ns2FFiAbSiw/oBm04k621IpOk0w7N9HyYrtZEmadgOK6hDEIkU+Pj3SNhZrZXUKJ5ej8Wh8cnyk68Kkx0cAcySnTZ3CuVjO/Q5rLjGF7/dqOkWCa2THhtCbSp1h7dAflFWrSvy+Tm6OjxySDxQMZ9BQmcKM2aZJYuPxkWvjjbRJ5pLHKp61/sElhpwi+39huaaqFC1T+KIdgypL8I4rq5REigX5JE+hFI/rgZHVNESM62ztpFUkwDnA7V1CNT5SpVm2u6WFmrsGaTnczNFlpC0H4j6be6hUvQTNWDlgA4TcUA2KwdQofFYIbyq1gPPx+O0gjPjdNZpQCihU6XBoctkMK9UBjGUtLaaCiFGIXDcVhirFwXh5IaYY31kj9zUs9PRiPD5NdxbzQeiZYg6KSC3BFCvmujVDla+o69firMbF6up2hi51/dPzwzME7x9ySZIOaMz0AA09FY5J19OhNTPCTr2JRFkr0g1ySW6dByPr4FyvCQtpnVdJZiqBKeFd0jq7xKtO2qkvuFBNybv5baRuixkLxUhk6AnY/wvuK588ArfGbem6T4SKEZRXwNamy4LDwW33BDF+a8qyO/eiSQ4zLvklv5P8975ZN5G57JtZeHdSgi50tvMC3MzcC/0fl5P8oBvYO/gCtM3B54f09oHF1OBO/m+kv3Uuje073UeOQ5E0zg+dcm1r/4N4rqIEurMehIK5KrXfk5nu+LmEIbf2kodGbwoBojkGu46y7q/S/LgV8O1er6E1Dep8U5GDZ6/qTsPkW4D1mhK0D3bAa3Lwknz/rjO0DdA//q3Arrce8PKzcL329j0at8IHgnc4hOteIoH1x1OamXyNxAqdk9ftPiLDmUdT2X9vQEyym80/UEsBAj8AFAAAAAgAEWRoVRCJfZmlAgAAiQoAAA0AJAAAAAAAAAAgAAAAAAAAAHBldHN0b3JlLnlhbWwKACAAAAAAAAEAGAAKKSMHVfPYARJQIwdV89gBOjCy/c3y2AFQSwUGAAAAAAEAAQBfAAAA0AIAAAAA\r\n----------------------------127308995100818139707097--",
                                    "options": {
                                        "raw": {
                                            "language": "text"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.1.11 Get package_3 versions",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"New package version saved\", function () {\r",
                                            "    pm.expect(data.versions.length).to.greaterThan(0);\r",
                                            "});\r",
                                            "\r",
                                            "pm.environment.set(\"version_3\", data.versions[0].version);\r",
                                            "pm.environment.set(\"version_3_2\", data.versions[0].version.split(\"@\")[0]);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_3}}/versions",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_3}}",
                                        "versions"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.1.12 Check that 'defaultVersion'  filled with second 'release' version",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "\r",
                                            "pm.test(\"'defaultVersion' filled by second release version\", function () {\r",
                                            "    pm.expect(data.defaultVersion).to.eq(pm.variables.replaceIn('{{version_3_2}}'))\r",
                                            "    ;\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_3}}",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_3}}"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.1.13 Update 'defaultReleaseVersion'",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "\r",
                                            "pm.test(\"'defaultReleaseVersion' filled by first release version\", function () {\r",
                                            "    pm.expect(data.defaultReleaseVersion).to.eq(pm.variables.replaceIn('{{version_2_2}}'))\r",
                                            "    ;\r",
                                            "});\r",
                                            ""
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_3}}",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_3}}"
                                    ]
                                },
                                "method": "PATCH",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\r\n    \"defaultReleaseVersion\": \"{{version_2_2}}\"\r\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.1.14 Check that 'defaultVersion'  has the same version as 'defaultReleaseVersion'",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "\r",
                                            "pm.test(\"'defaultVersion' filled by the same version as 'defaultReleaseVersion'\", function () {\r",
                                            "    pm.expect(data.defaultVersion).to.include(pm.variables.replaceIn('{{version_2_2}}'))\r",
                                            "    ;\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_3}}",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_3}}"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.1.15 Check 'lastReleaseVersionDetails'",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "\r",
                                            "pm.test(\"Check 'lastReleaseVersionDetails'\", function () {\r",
                                            "    pm.expect(data.packages[0].lastReleaseVersionDetails.version).to.include(pm.variables.replaceIn('{{version_2_2}}'))\r",
                                            "    ;\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages?textFilter={{package_3}}&lastReleaseVersionDetails=true&kind=package",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages"
                                    ],
                                    "query": [
                                        {
                                            "key": "textFilter",
                                            "value": "{{package_3}}"
                                        },
                                        {
                                            "key": "lastReleaseVersionDetails",
                                            "value": "true"
                                        },
                                        {
                                            "key": "kind",
                                            "value": "package"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        }
                    ]
                },
                {
                    "name": "8.3 APIHUB-4076 [BE] Add document query parameter to get list of operations",
                    "item": [
                        {
                            "name": "8.3.1 Check documents",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "\r",
                                            "pm.test(\"There are 2 documents\", function () {\r",
                                            "    pm.expect(data.documents.length).to.eql(2);\r",
                                            "});\r",
                                            "\r",
                                            "pm.environment.set(\"document_slug_2\", data.documents[0].slug);\r",
                                            "pm.environment.set(\"document_slug_1\", data.documents[1].slug)"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_3}}/versions/{{version_2}}/documents",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_3}}",
                                        "versions",
                                        "{{version_2}}",
                                        "documents"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.3.2 Check package operations filtered by document 1",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "\r",
                                            "pm.test(\"Operations filtered by 'documentSlug'\", function(){\r",
                                            "    for (var i = 0; i<data.operations.length; i++) {\r",
                                            "        pm.expect(data.operations[i].tags).to.include('Device'),\r",
                                            "        pm.expect(data.operations[i].tags).not.to.include('pet')\r",
                                            "    }\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_3}}/versions/{{version_2}}/rest/operations?documentSlug={{document_slug_1}}",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_3}}",
                                        "versions",
                                        "{{version_2}}",
                                        "rest",
                                        "operations"
                                    ],
                                    "query": [
                                        {
                                            "key": "documentSlug",
                                            "value": "{{document_slug_1}}"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.3.3 Check package operations filtered by document 2",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "\r",
                                            "pm.test(\"Operations filtered by 'documentSlug'\", function(){\r",
                                            "    for (var i = 0; i<data.operations.length; i++) {\r",
                                            "        pm.expect(data.operations[i].tags).to.include('pet'),\r",
                                            "        pm.expect(data.operations[i].tags).not.to.include('Device')\r",
                                            "    }\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_3}}/versions/{{version_2}}/rest/operations?documentSlug={{document_slug_2}}",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_3}}",
                                        "versions",
                                        "{{version_2}}",
                                        "rest",
                                        "operations"
                                    ],
                                    "query": [
                                        {
                                            "key": "documentSlug",
                                            "value": "{{document_slug_2}}"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        }
                    ]
                },
                {
                    "name": "8.4 APIHUB-4253 [BE] New excludeFromSearch package parameter",
                    "item": [
                        {
                            "name": "8.4.0 Delete static test-1 data from DB",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 204\", function () {\r",
                                            "    pm.response.to.have.status(204);\r",
                                            "});\r",
                                            ""
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/internal/clear/STATIC-TEST-1",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "internal",
                                        "clear",
                                        "STATIC-TEST-1"
                                    ]
                                },
                                "method": "DELETE",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.4.1 Delete static test-2 data from DB",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 204\", function () {\r",
                                            "    pm.response.to.have.status(204);\r",
                                            "});\r",
                                            ""
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/internal/clear/STATIC-TEST-2",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "internal",
                                        "clear",
                                        "STATIC-TEST-2"
                                    ]
                                },
                                "method": "DELETE",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.4.2 Add static test-1 group",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 201\", function () {\r",
                                            "    pm.response.to.have.status(201);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"static_root_group_2\", data.groupId)"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v1/groups",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v1",
                                        "groups"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\r\n    \"name\": \"Test Workspace\",\r\n    \"Alias\" :\"QS-STATIC-TEST-1\",\r\n    \"parentId\": \"\",\r\n    \"description\": \"Required for to upload hardcoded packages\",\r\n    \"imageUrl\": \"\"\r\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.4.2-1 Add static test-2 group",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200 or 201\", function () {\r",
                                            "    pm.expect(pm.response.code).to.be.oneOf([201, 400]);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "\r",
                                            "if (pm.response.code === 201) {\r",
                                            "    pm.environment.set(\"static_root_group_3\", data.groupId);\r",
                                            "} else {\r",
                                            "    pm.environment.set(\"static_root_group_3\", \"WKSP-2\");\r",
                                            "}"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v1/groups",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v1",
                                        "groups"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\r\n    \"name\": \"Test Workspace\",\r\n    \"Alias\" :\"WKSP-2\",\r\n    \"parentId\": \"\",\r\n    \"description\": \"Required for to upload hardcoded packages\",\r\n    \"imageUrl\": \"\"\r\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.4.2-2 Make group2 exclude from search = true",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 201\", function () {",
                                            "    pm.response.to.have.status(200);",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{static_root_group_3}}",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{static_root_group_3}}"
                                    ]
                                },
                                "method": "PATCH",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\r\n    \"excludeFromSearch\": true\r\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "auth": {
                                    "type": "noauth"
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.4.3 Create package 1",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 201\", function () {\r",
                                            "    pm.response.to.have.status(201);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"package_1\", data.packageId)\r",
                                            "\r",
                                            "pm.test(\"'excludeFromSearch' enabled\", function(){\r",
                                            "    pm.expect(data.excludeFromSearch).to.eq(true)\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\r\n    \"id\": \"QS-STATIC-TEST-1.PKG\",\r\n    \"Alias\" :\"PKG\",\r\n    \"name\": \"ExcludeSearch\",\r\n    \"parentId\": \"QS-STATIC-TEST-1\",\r\n    \"kind\":\"package\",\r\n    \"description\": \"Package to be built\",\r\n    \"serviceName\": \"\",\r\n    \"imageUrl\": \"\",\r\n    \"releaseVersionPattern\": \"static-test-1\",\r\n    \"excludeFromSearch\": true\r\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.4.5 Republish first version for package 1",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 202\", function () {\r",
                                            "    pm.response.to.have.status(202);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"publish_id\", data.publishId)\r",
                                            "setTimeout(function(){}, 20000)"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/publish",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "publish"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Transfer-Encoding",
                                        "value": "base64",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"clientBuild\"\r\n\r\nfalse\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"config\"\r\n\r\n{\r\n    \"packageId\": \"QS-STATIC-TEST-1.PKG\",\r\n    \"version\": \"1.0\",\r\n    \"status\": \"draft\",\r\n    \"versionFolder\": \"qwerty\",\r\n    \"refs\": [],\r\n    \"files\": [{\r\n            \"fileId\": \"petstore.yaml\",\r\n            \"publish\": true\r\n        }\r\n    ]\r\n}\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"sources\"; filename=\"petstore_yml.zip\"\r\nContent-Type: application/zip;base64\r\n\r\nUEsDBBQAAAAIABFkaFUQiX2ZpQIAAIkKAAANAAAAcGV0c3RvcmUueWFtbNVWwW7bMAy9F+g/EN2AbofGaTvs4Ns2FFiAbSiw/oBm04k621IpOk0w7N9HyYrtZEmadgOK6hDEIkU+Pj3SNhZrZXUKJ5ej8Wh8cnyk68Kkx0cAcySnTZ3CuVjO/Q5rLjGF7/dqOkWCa2THhtCbSp1h7dAflFWrSvy+Tm6OjxySDxQMZ9BQmcKM2aZJYuPxkWvjjbRJ5pLHKp61/sElhpwi+39huaaqFC1T+KIdgypL8I4rq5REigX5JE+hFI/rgZHVNESM62ztpFUkwDnA7V1CNT5SpVm2u6WFmrsGaTnczNFlpC0H4j6be6hUvQTNWDlgA4TcUA2KwdQofFYIbyq1gPPx+O0gjPjdNZpQCihU6XBoctkMK9UBjGUtLaaCiFGIXDcVhirFwXh5IaYY31kj9zUs9PRiPD5NdxbzQeiZYg6KSC3BFCvmujVDla+o69firMbF6up2hi51/dPzwzME7x9ySZIOaMz0AA09FY5J19OhNTPCTr2JRFkr0g1ySW6dByPr4FyvCQtpnVdJZiqBKeFd0jq7xKtO2qkvuFBNybv5baRuixkLxUhk6AnY/wvuK588ArfGbem6T4SKEZRXwNamy4LDwW33BDF+a8qyO/eiSQ4zLvklv5P8975ZN5G57JtZeHdSgi50tvMC3MzcC/0fl5P8oBvYO/gCtM3B54f09oHF1OBO/m+kv3Uuje073UeOQ5E0zg+dcm1r/4N4rqIEurMehIK5KrXfk5nu+LmEIbf2kodGbwoBojkGu46y7q/S/LgV8O1er6E1Dep8U5GDZ6/qTsPkW4D1mhK0D3bAa3Lwknz/rjO0DdA//q3Arrce8PKzcL329j0at8IHgnc4hOteIoH1x1OamXyNxAqdk9ftPiLDmUdT2X9vQEyym80/UEsBAj8AFAAAAAgAEWRoVRCJfZmlAgAAiQoAAA0AJAAAAAAAAAAgAAAAAAAAAHBldHN0b3JlLnlhbWwKACAAAAAAAAEAGAAKKSMHVfPYARJQIwdV89gBOjCy/c3y2AFQSwUGAAAAAAEAAQBfAAAA0AIAAAAA\r\n----------------------------127308995100818139707097--",
                                    "options": {
                                        "raw": {
                                            "language": "text"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.4.4 Publish first version for package 1",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 202\", function () {\r",
                                            "    pm.response.to.have.status(202);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"publish_id\", data.publishId)\r",
                                            "setTimeout(function(){}, 20000)"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/publish",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "publish"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Transfer-Encoding",
                                        "value": "base64",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"clientBuild\"\r\n\r\nfalse\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"config\"\r\n\r\n{\r\n    \"packageId\": \"QS-STATIC-TEST-1.PKG\",\r\n    \"version\": \"1.0\",\r\n    \"status\": \"draft\",\r\n    \"versionFolder\": \"qwerty\",\r\n    \"refs\": [],\r\n    \"files\": [{\r\n            \"fileId\": \"petstore.yaml\",\r\n            \"publish\": true\r\n        }\r\n    ]\r\n}\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"sources\"; filename=\"petstore_yml.zip\"\r\nContent-Type: application/zip;base64\r\n\r\nUEsDBBQAAAAIABFkaFUQiX2ZpQIAAIkKAAANAAAAcGV0c3RvcmUueWFtbNVWwW7bMAy9F+g/EN2AbofGaTvs4Ns2FFiAbSiw/oBm04k621IpOk0w7N9HyYrtZEmadgOK6hDEIkU+Pj3SNhZrZXUKJ5ej8Wh8cnyk68Kkx0cAcySnTZ3CuVjO/Q5rLjGF7/dqOkWCa2THhtCbSp1h7dAflFWrSvy+Tm6OjxySDxQMZ9BQmcKM2aZJYuPxkWvjjbRJ5pLHKp61/sElhpwi+39huaaqFC1T+KIdgypL8I4rq5REigX5JE+hFI/rgZHVNESM62ztpFUkwDnA7V1CNT5SpVm2u6WFmrsGaTnczNFlpC0H4j6be6hUvQTNWDlgA4TcUA2KwdQofFYIbyq1gPPx+O0gjPjdNZpQCihU6XBoctkMK9UBjGUtLaaCiFGIXDcVhirFwXh5IaYY31kj9zUs9PRiPD5NdxbzQeiZYg6KSC3BFCvmujVDla+o69firMbF6up2hi51/dPzwzME7x9ySZIOaMz0AA09FY5J19OhNTPCTr2JRFkr0g1ySW6dByPr4FyvCQtpnVdJZiqBKeFd0jq7xKtO2qkvuFBNybv5baRuixkLxUhk6AnY/wvuK588ArfGbem6T4SKEZRXwNamy4LDwW33BDF+a8qyO/eiSQ4zLvklv5P8975ZN5G57JtZeHdSgi50tvMC3MzcC/0fl5P8oBvYO/gCtM3B54f09oHF1OBO/m+kv3Uuje073UeOQ5E0zg+dcm1r/4N4rqIEurMehIK5KrXfk5nu+LmEIbf2kodGbwoBojkGu46y7q/S/LgV8O1er6E1Dep8U5GDZ6/qTsPkW4D1mhK0D3bAa3Lwknz/rjO0DdA//q3Arrce8PKzcL329j0at8IHgnc4hOteIoH1x1OamXyNxAqdk9ftPiLDmUdT2X9vQEyym80/UEsBAj8AFAAAAAgAEWRoVRCJfZmlAgAAiQoAAA0AJAAAAAAAAAAgAAAAAAAAAHBldHN0b3JlLnlhbWwKACAAAAAAAAEAGAAKKSMHVfPYARJQIwdV89gBOjCy/c3y2AFQSwUGAAAAAAEAAQBfAAAA0AIAAAAA\r\n----------------------------127308995100818139707097--",
                                    "options": {
                                        "raw": {
                                            "language": "text"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.4.6 Search package with '\"excludeFromSearch\"=true' parameter",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "\r",
                                            "pm.test(\"Search has empty result\", function () {\r",
                                            "    pm.expect(data.packages.length).to.eq(0)\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v3/search/packages",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v3",
                                        "search",
                                        "packages"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\r\n    \"searchString\": \"ExcludeSearch\"\r\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.4.7 Create package with '\"excludeFromSearch\"=false' under parent with '\"excludeFromSearch\"=false'",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 400\", function () {\r",
                                            "    pm.response.to.have.status(400);\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\r\n    \"id\": \"QS-STATIC-TEST-2.PKG\",\r\n    \"Alias\" :\"PKG\",\r\n    \"name\": \"Test static package\",\r\n    \"parentId\": \"{{static_root_group_3}}\",\r\n    \"kind\":\"package\",\r\n    \"description\": \"Package to be built\",\r\n    \"serviceName\": \"\",\r\n    \"imageUrl\": \"\",\r\n    \"releaseVersionPattern\": \"static-test-1\",\r\n    \"excludeFromSearch\": false\r\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        }
                    ]
                },
                {
                    "name": "8.5 APIHUB-4356 [BE] Graphql support",
                    "item": [
                        {
                            "name": "8.5.1 Publish version with GraphQL for package 1",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 202\", function () {\r",
                                            "    pm.response.to.have.status(202);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"publish_id\", data.publishId);\r",
                                            "\r",
                                            "setTimeout(function(){}, 30000)"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/publish",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "publish"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Transfer-Encoding",
                                        "value": "base64",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"clientBuild\"\r\n\r\nfalse\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"builderId\"\r\n\r\n5680525d-7c7b-47be-8ede-d502626a79dc\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"config\"\r\n\r\n{\r\n    \"packageId\": \"QS-STATIC-TEST-1.PKG\",\r\n    \"version\": \"5.0\",\r\n    \"status\": \"draft\",\r\n    \"versionFolder\": \"qwerty\",\r\n    \"refs\": [],\r\n    \"files\": [{\r\n            \"fileId\": \"graph.graphql\",\r\n            \"publish\": true\r\n        }\r\n    ]\r\n}\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"sources\"; filename=\"graph.zip\"\r\nContent-Type: application/zip;base64\r\n\r\n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\r\n----------------------------127308995100818139707097--",
                                    "options": {
                                        "raw": {
                                            "language": "text"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.5.2 Get package build status",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "var retry = parseInt(pm.environment.get(\"com_retry_counter\") || 0);\r",
                                            "var delay = parseInt(pm.environment.get(\"com_retry_delay\") || 0);\r",
                                            "\r",
                                            "var respBody = pm.response.json();\r",
                                            "\r",
                                            "if ((respBody.status != \"complete\") && retry < 15) {\r",
                                            "    retry++;\r",
                                            "    delay = 5000 + delay;\r",
                                            "\r",
                                            "\r",
                                            "pm.test(\"Status is ok, response is json\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "    pm.response.to.be.ok;\r",
                                            "});\r",
                                            "\r",
                                            "var respBody = pm.response.json();\r",
                                            "\r",
                                            "    setTimeout(function () { }, delay);\r",
                                            "    postman.setNextRequest(request.name);\r",
                                            "    pm.environment.set(\"com_retry_counter\", retry);\r",
                                            "    pm.environment.set(\"com_retry_delay\", delay);\r",
                                            "}\r",
                                            "else {\r",
                                            "    pm.environment.set(\"com_retry_counter\", null);\r",
                                            "    pm.environment.set(\"com_retry_delay\", null);\r",
                                            "\r",
                                            "    pm.test(\"Status code is 200\", function () {\r",
                                            "        pm.response.to.have.status(200);\r",
                                            "    });\r",
                                            "\r",
                                            "}\r",
                                            "setTimeout(function(){}, [100]);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/publish/{{publish_id}}/status",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "publish",
                                        "{{publish_id}}",
                                        "status"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.5.3 Get package versions",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"Packages has versions\", function () {\r",
                                            "    pm.expect(data.versions.length).to.greaterThan(0);\r",
                                            "});\r",
                                            "\r",
                                            "pm.environment.set(\"version_1\", data.versions[0].version);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "versions"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.5.4 Get package version details",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"'apiType' is 'graphql'\", function () {\r",
                                            "    pm.expect(data.operationTypes[0].apiType).to.eql('graphql');\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_1}}?includeSummary=true",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "versions",
                                        "{{version_1}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "includeSummary",
                                            "value": "true"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.5.5 Get version documents",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"Only 1 document displayed\", function () {\r",
                                            "    pm.expect(data.documents.length).to.eq(1);\r",
                                            "});\r",
                                            "\r",
                                            "pm.environment.set(\"pkg_file_slug\", data.documents[0].slug)"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_1}}/documents?limit=1&page=0",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "versions",
                                        "{{version_1}}",
                                        "documents"
                                    ],
                                    "query": [
                                        {
                                            "key": "limit",
                                            "value": "1"
                                        },
                                        {
                                            "key": "page",
                                            "value": "0"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.5.6 Get document details",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.environment.set(\"file_name\", data.fileId.replace(/^.*[\\\\\\/]/, ''))\r",
                                            "\r",
                                            "pm.test(\"Operation 'apiType' is 'graphql'\", function () {\r",
                                            "    pm.expect(data.type).to.eql('graphql-schema');\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v3/packages/{{package_1}}/versions/{{version_1}}/documents/{{pkg_file_slug}}",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v3",
                                        "packages",
                                        "{{package_1}}",
                                        "versions",
                                        "{{version_1}}",
                                        "documents",
                                        "{{pkg_file_slug}}"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.5.7 Get list of graphql operations",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "\r",
                                            "pm.test(\"List of graphql operations displayed\", () => {\r",
                                            "    pm.expect(data.operations.length).not.to.eql(0);\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_1}}/graphql/operations",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "versions",
                                        "{{version_1}}",
                                        "graphql",
                                        "operations"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        }
                    ]
                },
                {
                    "name": "8.6 APIHUB-3178 [BE] Store Version Deprecated items",
                    "item": [
                        {
                            "name": "8.6.1 Publish version with deprecated items",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 202\", function () {\r",
                                            "    pm.response.to.have.status(202);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"publish_id\", data.publishId);\r",
                                            "\r",
                                            "setTimeout(function(){}, 30000)"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/publish",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "publish"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Transfer-Encoding",
                                        "value": "base64",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"clientBuild\"\r\n\r\nfalse\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"builderId\"\r\n\r\n5680525d-7c7b-47be-8ede-d502626a79dc\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"config\"\r\n\r\n{\r\n    \"packageId\": \"QS-STATIC-TEST-1.PKG\",\r\n    \"version\": \"6.0\",\r\n    \"status\": \"draft\",\r\n    \"versionFolder\": \"qwerty\",\r\n    \"refs\": [],\r\n    \"files\": [{\r\n            \"fileId\": \"deprecated.json\",\r\n            \"publish\": true\r\n        }\r\n    ]\r\n}\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"sources\"; filename=\"deprecated.zip\"\r\nContent-Type: application/zip;base64\r\n\r\\r\n----------------------------127308995100818139707097--",
                                    "options": {
                                        "raw": {
                                            "language": "text"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.6.2 Get package build status",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "var retry = parseInt(pm.environment.get(\"com_retry_counter\") || 0);\r",
                                            "var delay = parseInt(pm.environment.get(\"com_retry_delay\") || 0);\r",
                                            "\r",
                                            "var respBody = pm.response.json();\r",
                                            "\r",
                                            "if ((respBody.status != \"complete\") && retry < 15) {\r",
                                            "    retry++;\r",
                                            "    delay = 5000 + delay;\r",
                                            "\r",
                                            "\r",
                                            "pm.test(\"Status is ok, response is json\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "    pm.response.to.be.ok;\r",
                                            "});\r",
                                            "\r",
                                            "var respBody = pm.response.json();\r",
                                            "\r",
                                            "    setTimeout(function () { }, delay);\r",
                                            "    postman.setNextRequest(request.name);\r",
                                            "    pm.environment.set(\"com_retry_counter\", retry);\r",
                                            "    pm.environment.set(\"com_retry_delay\", delay);\r",
                                            "}\r",
                                            "else {\r",
                                            "    pm.environment.set(\"com_retry_counter\", null);\r",
                                            "    pm.environment.set(\"com_retry_delay\", null);\r",
                                            "\r",
                                            "    pm.test(\"Status code is 200\", function () {\r",
                                            "        pm.response.to.have.status(200);\r",
                                            "    });\r",
                                            "\r",
                                            "}\r",
                                            "setTimeout(function(){}, [100]);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/publish/{{publish_id}}/status",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "publish",
                                        "{{publish_id}}",
                                        "status"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.6.3 Get package version",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"Packages has versions\", function () {\r",
                                            "    pm.expect(data.versions.length).to.greaterThan(0);\r",
                                            "});\r",
                                            "\r",
                                            "pm.environment.set(\"version_1\", data.versions[0].version);\r",
                                            "pm.environment.set(\"version_1_2\", data.versions[0].version.split(\"@\")[0]);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "versions"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.6.4 Get deprecated operations summary",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status is complete\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "\r",
                                            "pm.test(\"'apiType' is displayed\", function () {\r",
                                            "    pm.expect(data.operationTypes[0].apiType).to.eql(\"rest\");\r",
                                            "    pm.environment.set(\"apiType\", data.operationTypes[0].apiType);\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_1}}/deprecated/summary",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "versions",
                                        "{{version_1}}",
                                        "deprecated",
                                        "summary"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.6.5 Get list of deprecated operation",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status is complete\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "\r",
                                            "pm.test(\"Operation marked as deprecated\", function () {\r",
                                            "    pm.expect(data.operations[0].deprecated).to.eql(true);\r",
                                            "    pm.environment.set(\"operationId\", data.operations[0].operationId);\r",
                                            "});\r",
                                            "\r",
                                            "pm.test(\"'deprecatedItems' are displayed\", function () {\r",
                                            "    pm.expect(data.operations[0].deprecatedItems.length).to.greaterThan(0);\r",
                                            "});\r",
                                            "\r",
                                            "pm.test(\"Tags = 'Bills'\", function(){\r",
                                            "    for (var i = 0; i<data.operations.length; i++) {\r",
                                            "        pm.expect(data.operations[i].tags).to.include('Bills')\r",
                                            "    }\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_1}}/{{apiType}}/deprecated?apiKind=bwc&includeDeprecatedItems=true&tag=Bills",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "versions",
                                        "{{version_1}}",
                                        "{{apiType}}",
                                        "deprecated"
                                    ],
                                    "query": [
                                        {
                                            "key": "apiKind",
                                            "value": "bwc"
                                        },
                                        {
                                            "key": "includeDeprecatedItems",
                                            "value": "true"
                                        },
                                        {
                                            "key": "tag",
                                            "value": "Bills"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.6.6 Deprecated items of single operation",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status is complete\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "\r",
                                            "pm.test(\"'deprecatedItems' are displayed\", function () {\r",
                                            "    pm.expect(data.deprecatedItems.length).to.greaterThan(0);\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_1}}/{{apiType}}/operations/{{operationId}}/deprecatedItems",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "versions",
                                        "{{version_1}}",
                                        "{{apiType}}",
                                        "operations",
                                        "{{operationId}}",
                                        "deprecatedItems"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        }
                    ]
                },
                {
                    "name": "8.8 APIHUB-4933 [BE] Portal: Export list of deprecated operations in xlsx from package version",
                    "item": [
                        {
                            "name": "8.8.1 Export deprecated operations to xlsx file",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "pm.test(\"Content-type is application\", function () {\r",
                                            "    pm.response.to.have.header('Content-Type');\r",
                                            "    pm.expect(pm.response.headers.get('Content-Type')).to.include('application');\r",
                                            "    pm.response.to.have.header('Content-Disposition');\r",
                                            "    pm.expect(pm.response.headers.get('Content-Disposition')).to.include('attachment');\r",
                                            "    pm.expect(pm.response.headers.get('Content-Disposition')).to.include(\"filename=DeprecatedOperations_\" + pm.variables.replaceIn('{{package_1}}') + \"_\" + pm.variables.replaceIn('{{version_1_2}}' + \".xlsx\"));\r",
                                            "});\r",
                                            "\r",
                                            "pm.test(\"File isn't empty\", () => {\r",
                                            "    pm.expect(responseBody.length).to.greaterThan(0)\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_1}}/rest/export/operations/deprecated?tag=Bills&kind=bwc&textFilter=Account",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "versions",
                                        "{{version_1}}",
                                        "rest",
                                        "export",
                                        "operations",
                                        "deprecated"
                                    ],
                                    "query": [
                                        {
                                            "key": "tag",
                                            "value": "Bills"
                                        },
                                        {
                                            "key": "kind",
                                            "value": "bwc"
                                        },
                                        {
                                            "key": "textFilter",
                                            "value": "Account"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        }
                    ]
                },
                {
                    "name": "8.9 APIHUB-4183 [BE] Validate refs conflicts",
                    "item": [
                        {
                            "name": "8.9.1 Get package version",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"Packages has versions\", function () {\r",
                                            "    pm.expect(data.versions.length).to.greaterThan(0);\r",
                                            "});\r",
                                            "\r",
                                            "pm.environment.set(\"version_1\", data.versions[1].version);\r",
                                            "pm.environment.set(\"version_1_2\", data.versions[1].version.split(\"@\")[0]);\r",
                                            "pm.environment.set(\"version_2\", data.versions[0].version);\r",
                                            "pm.environment.set(\"version_2_2\", data.versions[0].version.split(\"@\")[0]);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "versions"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.9.2 Create dashboard_1",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 201\", function () {\r",
                                            "    pm.response.to.have.status(201);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"dashboard_1\", data.packageId)"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\r\n    \"id\": \"QS-STATIC-TEST-1.DSHB-1\",\r\n    \"Alias\" :\"DSHB1\",\r\n    \"name\": \"Test static dashboard\",\r\n    \"parentId\": \"QS-STATIC-TEST-1\",\r\n    \"kind\":\"dashboard\",\r\n    \"description\": \"Dashboard to be built\",\r\n    \"serviceName\": \"\",\r\n    \"imageUrl\": \"\"\r\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.9.3 Publish dashboard_1 version_1",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 202\", function () {\r",
                                            "    pm.response.to.have.status(202);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"publish_id\", data.publishId)\r",
                                            "\r",
                                            "setTimeout(() => { },20000);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/publish",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{dashboard_1}}",
                                        "publish"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Transfer-Encoding",
                                        "value": "base64",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"clientBuild\"\r\n\r\nfalse\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"builderId\"\r\n\r\n5680525d-7c7b-47be-8ede-d502626a79dc\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"config\"\r\n\r\n{\r\n    \"packageId\": \"{{dashboard_1}}\",\r\n    \"version\": \"2023.2\",\r\n    \"status\": \"release\",\r\n    \"versionFolder\": \"qwerty\",\r\n    \"refs\": [{\r\n            \"refId\": \"{{package_1}}\",\r\n            \"version\": \"{{version_1}}\"\r\n        }\r\n    ],\r\n    \"files\": []\r\n}\r\n----------------------------127308995100818139707097--",
                                    "options": {
                                        "raw": {
                                            "language": "text"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.9.3-1 Get publish status",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "var retry = parseInt(pm.environment.get(\"com_retry_counter\") || 0);\r",
                                            "var delay = parseInt(pm.environment.get(\"com_retry_delay\") || 0);\r",
                                            "\r",
                                            "var respBody = pm.response.json();\r",
                                            "\r",
                                            "if ((respBody.status != \"complete\") && retry < 15) {\r",
                                            "    retry++;\r",
                                            "    delay = 5000 + delay;\r",
                                            "\r",
                                            "\r",
                                            "pm.test(\"Status is ok, response is json\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "    pm.response.to.be.ok;\r",
                                            "});\r",
                                            "\r",
                                            "var respBody = pm.response.json();\r",
                                            "\r",
                                            "    setTimeout(function () { }, delay);\r",
                                            "    postman.setNextRequest(request.name);\r",
                                            "    pm.environment.set(\"com_retry_counter\", retry);\r",
                                            "    pm.environment.set(\"com_retry_delay\", delay);\r",
                                            "}\r",
                                            "else {\r",
                                            "    pm.environment.set(\"com_retry_counter\", null);\r",
                                            "    pm.environment.set(\"com_retry_delay\", null);\r",
                                            "\r",
                                            "    pm.test(\"Status code is 200\", function () {\r",
                                            "        pm.response.to.have.status(200);\r",
                                            "    });\r",
                                            "\r",
                                            "}\r",
                                            "setTimeout(function(){}, [100]);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/publish/{{publish_id}}/status",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{dashboard_1}}",
                                        "publish",
                                        "{{publish_id}}",
                                        "status"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.9.4 Create dashboard_2",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 201\", function () {\r",
                                            "    pm.response.to.have.status(201);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"dashboard_2\", data.packageId)"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\r\n    \"id\": \"QS-STATIC-TEST-1.DSHB-2\",\r\n    \"Alias\" :\"DSHB2\",\r\n    \"name\": \"Test static dashboard\",\r\n    \"parentId\": \"QS-STATIC-TEST-1\",\r\n    \"kind\":\"dashboard\",\r\n    \"description\": \"Dashboard to be built\",\r\n    \"serviceName\": \"\",\r\n    \"imageUrl\": \"\"\r\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.9.5 Publish dashboard_2 version_1",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 202\", function () {\r",
                                            "    pm.response.to.have.status(202);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"publish_id\", data.publishId)"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_2}}/publish?resolveRefs=true&resolveConflicts=true",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{dashboard_2}}",
                                        "publish"
                                    ],
                                    "query": [
                                        {
                                            "key": "resolveRefs",
                                            "value": "true"
                                        },
                                        {
                                            "key": "resolveConflicts",
                                            "value": "true"
                                        }
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Transfer-Encoding",
                                        "value": "base64",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"clientBuild\"\r\n\r\nfalse\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"builderId\"\r\n\r\n5680525d-7c7b-47be-8ede-d502626a79dc\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"config\"\r\n\r\n{\r\n    \"packageId\": \"{{dashboard_2}}\",\r\n    \"version\": \"2000.1\",\r\n    \"status\": \"release\",\r\n    \"versionFolder\": \"qwerty\",\r\n    \"refs\": [{\r\n            \"refId\": \"{{dashboard_1}}\",\r\n            \"version\": \"2023.2\"\r\n        },\r\n        {\r\n            \"refId\": \"{{package_1}}\",\r\n            \"version\": \"{{version_2_2}}\"\r\n        }\r\n    ],\r\n    \"files\": []\r\n}\r\n----------------------------127308995100818139707097--",
                                    "options": {
                                        "raw": {
                                            "language": "text"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.9.6 Publish dashboard_2 version_2",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 202\", function () {\r",
                                            "    pm.response.to.have.status(202);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"publish_id\", data.publishId)"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_2}}/publish?resolveRefs=false&resolveConflicts=true",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{dashboard_2}}",
                                        "publish"
                                    ],
                                    "query": [
                                        {
                                            "key": "resolveRefs",
                                            "value": "false"
                                        },
                                        {
                                            "key": "resolveConflicts",
                                            "value": "true"
                                        }
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Transfer-Encoding",
                                        "value": "base64",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"clientBuild\"\r\n\r\nfalse\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"builderId\"\r\n\r\n5680525d-7c7b-47be-8ede-d502626a79dc\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"config\"\r\n\r\n{\r\n    \"packageId\": \"{{dashboard_2}}\",\r\n    \"version\": \"2000.2\",\r\n    \"status\": \"release\",\r\n    \"versionFolder\": \"qwerty\",\r\n    \"refs\": [{\r\n            \"refId\": \"{{dashboard_1}}\",\r\n            \"version\": \"2023.2\"\r\n        },\r\n        {\r\n            \"refId\": \"{{package_1}}\",\r\n            \"version\": \"{{version_2_2}}\"\r\n        }\r\n    ],\r\n    \"files\": []\r\n}\r\n----------------------------127308995100818139707097--",
                                    "options": {
                                        "raw": {
                                            "language": "text"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.9.7 Publish dashboard_2 version_3",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 400\", function () {\r",
                                            "    pm.response.to.have.status(400);\r",
                                            "});\r",
                                            "setTimeout(() => { },20000);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_2}}/publish?resolveRefs=true&resolveConflicts=false",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{dashboard_2}}",
                                        "publish"
                                    ],
                                    "query": [
                                        {
                                            "key": "resolveRefs",
                                            "value": "true"
                                        },
                                        {
                                            "key": "resolveConflicts",
                                            "value": "false"
                                        }
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Transfer-Encoding",
                                        "value": "base64",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"clientBuild\"\r\n\r\nfalse\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"builderId\"\r\n\r\n5680525d-7c7b-47be-8ede-d502626a79dc\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"config\"\r\n\r\n{\r\n    \"packageId\": \"{{dashboard_2}}\",\r\n    \"version\": \"2000.3\",\r\n    \"status\": \"release\",\r\n    \"versionFolder\": \"qwerty\",\r\n    \"refs\": [{\r\n            \"refId\": \"{{dashboard_1}}\",\r\n            \"version\": \"2023.2\"\r\n        },\r\n        {\r\n            \"refId\": \"{{package_1}}\",\r\n            \"version\": \"{{version_2_2}}\"\r\n        }\r\n    ],\r\n    \"files\": []\r\n}\r\n----------------------------127308995100818139707097--",
                                    "options": {
                                        "raw": {
                                            "language": "text"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.9.7-1 Get publish status",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "var retry = parseInt(pm.environment.get(\"com_retry_counter\") || 0);\r",
                                            "var delay = parseInt(pm.environment.get(\"com_retry_delay\") || 0);\r",
                                            "\r",
                                            "var respBody = pm.response.json();\r",
                                            "\r",
                                            "if ((respBody.status != \"complete\") && retry < 15) {\r",
                                            "    retry++;\r",
                                            "    delay = 5000 + delay;\r",
                                            "\r",
                                            "\r",
                                            "pm.test(\"Status is ok, response is json\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "    pm.response.to.be.ok;\r",
                                            "});\r",
                                            "\r",
                                            "var respBody = pm.response.json();\r",
                                            "\r",
                                            "    setTimeout(function () { }, delay);\r",
                                            "    postman.setNextRequest(request.name);\r",
                                            "    pm.environment.set(\"com_retry_counter\", retry);\r",
                                            "    pm.environment.set(\"com_retry_delay\", delay);\r",
                                            "}\r",
                                            "else {\r",
                                            "    pm.environment.set(\"com_retry_counter\", null);\r",
                                            "    pm.environment.set(\"com_retry_delay\", null);\r",
                                            "\r",
                                            "    pm.test(\"Status code is 200\", function () {\r",
                                            "        pm.response.to.have.status(200);\r",
                                            "    });\r",
                                            "\r",
                                            "}\r",
                                            "setTimeout(function(){}, [100]);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_2}}/publish/{{publish_id}}/status",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{dashboard_2}}",
                                        "publish",
                                        "{{publish_id}}",
                                        "status"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.9.8 Get dashboard_2 versions",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"Packages has versions\", function () {\r",
                                            "    pm.expect(data.versions.length).to.greaterThan(0);\r",
                                            "});\r",
                                            "\r",
                                            "pm.environment.set(\"dash_1_version_1\", data.versions[1].version);\r",
                                            "pm.environment.set(\"dash_1_version_2\", data.versions[0].version);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_2}}/versions",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{dashboard_2}}",
                                        "versions"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.9.9 Check dashboard_2 version_1 references",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"There are 3 references\", function () {\r",
                                            "    pm.expect(data.references.length).to.eql(3);\r",
                                            "});\r",
                                            "\r",
                                            "pm.test(\"Package version_1 marked as excluded\", function () {\r",
                                            "    pm.expect(data.references[1].excluded).to.eql(true);\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v3/packages/{{dashboard_2}}/versions/{{dash_1_version_1}}/references",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v3",
                                        "packages",
                                        "{{dashboard_2}}",
                                        "versions",
                                        "{{dash_1_version_1}}",
                                        "references"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.9.10 Check dashboard_2 version_2 references",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"There are 2 references\", function () {\r",
                                            "    pm.expect(data.references.length).to.eql(2);\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v3/packages/{{dashboard_2}}/versions/{{dash_1_version_2}}/references",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v3",
                                        "packages",
                                        "{{dashboard_2}}",
                                        "versions",
                                        "{{dash_1_version_2}}",
                                        "references"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.9.11 Create dashboard_3",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 201\", function () {\r",
                                            "    pm.response.to.have.status(201);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"dashboard_3\", data.packageId)"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\r\n    \"id\": \"QS-STATIC-TEST-1.DSHB-3\",\r\n    \"Alias\" :\"DSHB3\",\r\n    \"name\": \"Test static dashboard 3\",\r\n    \"parentId\": \"QS-STATIC-TEST-1\",\r\n    \"kind\":\"dashboard\",\r\n    \"description\": \"Dashboard to be built\",\r\n    \"serviceName\": \"\",\r\n    \"imageUrl\": \"\"\r\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.9.12 Publish dashboard_3 version_1",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 400\", function () {\r",
                                            "    pm.response.to.have.status(400);\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_3}}/publish?resolveRefs=true&resolveConflicts=true",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{dashboard_3}}",
                                        "publish"
                                    ],
                                    "query": [
                                        {
                                            "key": "resolveRefs",
                                            "value": "true"
                                        },
                                        {
                                            "key": "resolveConflicts",
                                            "value": "true"
                                        }
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Transfer-Encoding",
                                        "value": "base64",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"clientBuild\"\r\n\r\nfalse\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"builderId\"\r\n\r\n5680525d-7c7b-47be-8ede-d502626a79dc\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"config\"\r\n\r\n{\r\n    \"version\": \"2001.1\",\r\n    \"status\": \"release\",\r\n    \"versionFolder\": \"qwerty\",\r\n    \"refs\": [{\r\n            \"refId\": \"{{dashboard_1}}\",\r\n            \"version\": \"2023.2\"\r\n        },\r\n        {\r\n            \"refId\": \"{{package_1}}\",\r\n            \"version\": \"{{version_1_2}}\",\r\n            \"parentRefId\": \"{{dashboard_1}}\",\r\n            \"parentVersion\": \"2023.2\"\r\n        },\r\n        {\r\n            \"refId\": \"{{package_1}}\",\r\n            \"version\": \"{{version_2_2}}\",\r\n            \"excluded\": true\r\n        }\r\n    ],\r\n    \"files\": []\r\n}\r\n----------------------------127308995100818139707097--",
                                    "options": {
                                        "raw": {
                                            "language": "text"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.9.13 Publish dashboard_3 version_2",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 202\", function () {\r",
                                            "    pm.response.to.have.status(202);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"publish_id\", data.publishId)"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_3}}/publish?resolveRefs=false&resolveConflicts=true",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{dashboard_3}}",
                                        "publish"
                                    ],
                                    "query": [
                                        {
                                            "key": "resolveRefs",
                                            "value": "false"
                                        },
                                        {
                                            "key": "resolveConflicts",
                                            "value": "true"
                                        }
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Transfer-Encoding",
                                        "value": "base64",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"clientBuild\"\r\n\r\nfalse\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"builderId\"\r\n\r\n5680525d-7c7b-47be-8ede-d502626a79dc\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"config\"\r\n\r\n{\r\n    \"version\": \"2001.2\",\r\n    \"status\": \"release\",\r\n    \"versionFolder\": \"qwerty\",\r\n    \"refs\": [{\r\n            \"refId\": \"{{dashboard_1}}\",\r\n            \"version\": \"2023.2\"\r\n        },\r\n        {\r\n            \"refId\": \"{{package_1}}\",\r\n            \"version\": \"{{version_1_2}}\",\r\n            \"parentRefId\": \"{{dashboard_1}}\",\r\n            \"parentVersion\": \"2023.2\"\r\n        },\r\n        {\r\n            \"refId\": \"{{package_1}}\",\r\n            \"version\": \"{{version_2_2}}\",\r\n            \"excluded\": true\r\n        }\r\n    ],\r\n    \"files\": []\r\n}\r\n----------------------------127308995100818139707097--",
                                    "options": {
                                        "raw": {
                                            "language": "text"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.9.14 Publish dashboard_3 version_3",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 202\", function () {\r",
                                            "    pm.response.to.have.status(202);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"publish_id\", data.publishId)\r",
                                            "\r",
                                            "setTimeout(() => { },40000);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_3}}/publish?resolveRefs=false&resolveConflicts=false",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{dashboard_3}}",
                                        "publish"
                                    ],
                                    "query": [
                                        {
                                            "key": "resolveRefs",
                                            "value": "false"
                                        },
                                        {
                                            "key": "resolveConflicts",
                                            "value": "false"
                                        }
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Transfer-Encoding",
                                        "value": "base64",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"clientBuild\"\r\n\r\nfalse\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"builderId\"\r\n\r\n5680525d-7c7b-47be-8ede-d502626a79dc\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"config\"\r\n\r\n{\r\n    \"version\": \"2001.3\",\r\n    \"status\": \"release\",\r\n    \"versionFolder\": \"qwerty\",\r\n    \"refs\": [{\r\n            \"refId\": \"{{dashboard_1}}\",\r\n            \"version\": \"2023.2\"\r\n        },\r\n        {\r\n            \"refId\": \"{{package_1}}\",\r\n            \"version\": \"{{version_1_2}}\",\r\n            \"parentRefId\": \"{{dashboard_1}}\",\r\n            \"parentVersion\": \"2023.2\"\r\n        },\r\n        {\r\n            \"refId\": \"{{package_1}}\",\r\n            \"version\": \"{{version_2_2}}\",\r\n            \"excluded\": true\r\n        }\r\n    ],\r\n    \"files\": []\r\n}\r\n----------------------------127308995100818139707097--",
                                    "options": {
                                        "raw": {
                                            "language": "text"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.9.14-1 Get publish status",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "var retry = parseInt(pm.environment.get(\"com_retry_counter\") || 0);\r",
                                            "var delay = parseInt(pm.environment.get(\"com_retry_delay\") || 0);\r",
                                            "\r",
                                            "var respBody = pm.response.json();\r",
                                            "\r",
                                            "if ((respBody.status != \"complete\") && retry < 15) {\r",
                                            "    retry++;\r",
                                            "    delay = 5000 + delay;\r",
                                            "\r",
                                            "\r",
                                            "pm.test(\"Status is ok, response is json\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "    pm.response.to.be.ok;\r",
                                            "});\r",
                                            "\r",
                                            "var respBody = pm.response.json();\r",
                                            "\r",
                                            "    setTimeout(function () { }, delay);\r",
                                            "    postman.setNextRequest(request.name);\r",
                                            "    pm.environment.set(\"com_retry_counter\", retry);\r",
                                            "    pm.environment.set(\"com_retry_delay\", delay);\r",
                                            "}\r",
                                            "else {\r",
                                            "    pm.environment.set(\"com_retry_counter\", null);\r",
                                            "    pm.environment.set(\"com_retry_delay\", null);\r",
                                            "\r",
                                            "    pm.test(\"Status code is 200\", function () {\r",
                                            "        pm.response.to.have.status(200);\r",
                                            "    });\r",
                                            "\r",
                                            "}\r",
                                            "setTimeout(function(){}, [100]);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_3}}/publish/{{publish_id}}/status",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{dashboard_3}}",
                                        "publish",
                                        "{{publish_id}}",
                                        "status"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.9.15 Get dashboard_3 versions",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"Packages has versions\", function () {\r",
                                            "    pm.expect(data.versions.length).to.greaterThan(0);\r",
                                            "});\r",
                                            "\r",
                                            "pm.environment.set(\"dash_2_version_1\", data.versions[1].version);\r",
                                            "pm.environment.set(\"dash_2_version_2\", data.versions[0].version);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_3}}/versions",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{dashboard_3}}",
                                        "versions"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.9.16 Check dashboard_3 version_2 references",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"There are 3 references\", function () {\r",
                                            "    pm.expect(data.references.length).to.eql(3);\r",
                                            "});\r",
                                            "\r",
                                            "pm.test(\"Package version_2 marked as excluded\", function () {\r",
                                            "    pm.expect(data.references[2].excluded).to.eql(true);\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v3/packages/{{dashboard_3}}/versions/{{dash_2_version_1}}/references",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v3",
                                        "packages",
                                        "{{dashboard_3}}",
                                        "versions",
                                        "{{dash_2_version_1}}",
                                        "references"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.9.17 Check dashboard_3 version_3 references",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"There are 3 references\", function () {\r",
                                            "    pm.expect(data.references.length).to.eql(3);\r",
                                            "});\r",
                                            "\r",
                                            "pm.test(\"For 2 reference 'parentPackageRef'=dashboard_1\", function () {\r",
                                            "    pm.expect(data.references[1].parentPackageRef).to.include(pm.variables.replaceIn('{{dashboard_1}}'));\r",
                                            "});\r",
                                            "\r",
                                            "pm.test(\"Package version_2 marked as excluded\", function () {\r",
                                            "    pm.expect(data.references[2].excluded).to.eql(true);\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v3/packages/{{dashboard_3}}/versions/{{dash_2_version_2}}/references",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v3",
                                        "packages",
                                        "{{dashboard_3}}",
                                        "versions",
                                        "{{dash_2_version_2}}",
                                        "references"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        }
                    ]
                },
                {
                    "name": "8.10 APIHUB-4998 [BE] Operation groups",
                    "item": [
                        {
                            "name": "8.10.1 Create operation group 1",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 201\", function () {\r",
                                            "    pm.response.to.have.status(201);\r",
                                            "});\r",
                                            "\r",
                                            "pm.environment.set(\"operation_group_1\", 'test_1');"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v3/packages/{{package_1}}/versions/{{version_2}}/rest/groups",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v3",
                                        "packages",
                                        "{{package_1}}",
                                        "versions",
                                        "{{version_2}}",
                                        "rest",
                                        "groups"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "key": "groupName",
                                            "type": "default",
                                            "value": "test_1"
                                        },
                                        {
                                            "key": "description",
                                            "type": "default",
                                            "value": "Test group"
                                        }
                                    ]
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.10.2 Check that list of operations for operation group 1 is empty",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"Operation group is empty\", function () {\r",
                                            "    pm.expect(data.operations.length).to.eql(0);\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_2}}/rest/groups/{{operation_group_1}}",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "versions",
                                        "{{version_2}}",
                                        "rest",
                                        "groups",
                                        "{{operation_group_1}}"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.10.3 Get list of operations",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.environment.set(\"operation_id_1\", 'api-v1-billingmanagement-billhandlingcodes-get');\r",
                                            "pm.environment.set(\"operation_id_2\", 'api-v1-billingmanagement-bill-id-get');"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_2}}/rest/operations",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "versions",
                                        "{{version_2}}",
                                        "rest",
                                        "operations"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.10.4 Update parameters of operation group",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 204\", function () {\r",
                                            "    pm.response.to.have.status(204);\r",
                                            "});\r",
                                            "\r",
                                            "pm.environment.set(\"operation_group_1\", 'test_2');"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v3/packages/{{package_1}}/versions/{{version_2}}/rest/groups/{{operation_group_1}}",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v3",
                                        "packages",
                                        "{{package_1}}",
                                        "versions",
                                        "{{version_2}}",
                                        "rest",
                                        "groups",
                                        "{{operation_group_1}}"
                                    ]
                                },
                                "method": "PATCH",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "key": "groupName",
                                            "type": "default",
                                            "value": "test_2"
                                        },
                                        {
                                            "key": "description",
                                            "type": "default",
                                            "value": "Updated test group"
                                        }
                                    ]
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.10.5 Update operation group",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 204\", function () {\r",
                                            "    pm.response.to.have.status(204);\r",
                                            "});\r",
                                            "\r",
                                            "pm.environment.set(\"operation_group_1\", 'test_2');"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v3/packages/{{package_1}}/versions/{{version_2}}/rest/groups/{{operation_group_1}}",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v3",
                                        "packages",
                                        "{{package_1}}",
                                        "versions",
                                        "{{version_2}}",
                                        "rest",
                                        "groups",
                                        "{{operation_group_1}}"
                                    ]
                                },
                                "method": "PATCH",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "key": "groupName",
                                            "type": "default",
                                            "value": "test_2"
                                        },
                                        {
                                            "key": "operations",
                                            "type": "default",
                                            "value": "[{\n        \"operationId\": \"{{operation_id_1}}\"\n    },\n    {\n        \"operationId\": \"{{operation_id_2}}\"\n    }]"
                                        }
                                    ]
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.10.6 Get list of operations for operation group",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"Operation group has 2 operations\", function () {\r",
                                            "    pm.expect(data.operations.length).to.eql(2);\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_2}}/rest/groups/{{operation_group_1}}",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "versions",
                                        "{{version_2}}",
                                        "rest",
                                        "groups",
                                        "{{operation_group_1}}"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.10.7 Create operation group 2",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 201\", function () {\r",
                                            "    pm.response.to.have.status(201);\r",
                                            "});\r",
                                            "\r",
                                            "pm.environment.set(\"operation_group_2\", 'test_del');"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v3/packages/{{package_1}}/versions/{{version_2}}/rest/groups",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v3",
                                        "packages",
                                        "{{package_1}}",
                                        "versions",
                                        "{{version_2}}",
                                        "rest",
                                        "groups"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "key": "groupName",
                                            "type": "default",
                                            "value": "test_del"
                                        },
                                        {
                                            "key": "description",
                                            "type": "default",
                                            "value": "Test group"
                                        }
                                    ]
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.10.8 Delete operation group",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 204\", function () {\r",
                                            "    pm.response.to.have.status(204);\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_2}}/rest/groups/{{operation_group_2}}",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "versions",
                                        "{{version_2}}",
                                        "rest",
                                        "groups",
                                        "{{operation_group_2}}"
                                    ]
                                },
                                "method": "DELETE",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.10.9 Update 'restGroupingPrefix' package's parameters",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "\r",
                                            "pm.test(\"'restGroupingPrefix' parameter updated\", function () {\r",
                                            "    pm.expect(data.restGroupingPrefix).to.eql('/{group}/');\r",
                                            "});\r",
                                            "\r",
                                            "setTimeout(() => { }, 300);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}"
                                    ]
                                },
                                "method": "PATCH",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\r\n    \"restGroupingPrefix\":\"/{group}/\"\r\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.10.10 Calculate groups by restGroupingPrefix",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/calculateGroups",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "calculateGroups"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.10.11 Republish version without some operations",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 202\", function () {\r",
                                            "    pm.response.to.have.status(202);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"publish_id\", data.publishId);\r",
                                            "\r",
                                            "setTimeout(function(){}, 20000)"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/publish",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "publish"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Transfer-Encoding",
                                        "value": "base64",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"clientBuild\"\r\n\r\nfalse\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"builderId\"\r\n\r\n5680525d-7c7b-47be-8ede-d502626a79dc\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"config\"\r\n\r\n{\r\n    \"packageId\": \"QS-STATIC-TEST-1.PKG\",\r\n    \"version\": \"6.0\",\r\n    \"status\": \"draft\",\r\n    \"versionFolder\": \"qwerty\",\r\n    \"refs\": [],\r\n    \"files\": [{\r\n            \"fileId\": \"deprecated.json\",\r\n            \"publish\": true\r\n        }\r\n    ]\r\n}\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"sources\"; filename=\"deprecated.zip\"\r\nContent-Type: application/zip;base64\r\n\r\\r\n----------------------------127308995100818139707097--",
                                    "options": {
                                        "raw": {
                                            "language": "text"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.10.12 Get list of package versions",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.environment.set(\"version_2\", data.versions[0].version);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "versions"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.10.14 Recalculate package version groups",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/recalculateGroups",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "recalculateGroups"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.10.15 Get list of operations",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"There is no operations with 'empty group'\", function () {\r",
                                            "    pm.expect(data.operations.length).to.eql(0);\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_2}}/rest/operations?emptyGroup=true",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "versions",
                                        "{{version_2}}",
                                        "rest",
                                        "operations"
                                    ],
                                    "query": [
                                        {
                                            "key": "emptyGroup",
                                            "value": "true"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.10.16 Update 'restGroupingPrefix' package's parameters",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "\r",
                                            "pm.test(\"'restGroupingPrefix' parameter updated\", function () {\r",
                                            "    pm.expect(data.restGroupingPrefix).to.eql('/api/v1/{group}/');\r",
                                            "});\r",
                                            "\r",
                                            "setTimeout(() => { }, 300);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}"
                                    ]
                                },
                                "method": "PATCH",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\r\n    \"restGroupingPrefix\":\"/api/v1/{group}/\"\r\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.10.17 Recalculate package version groups",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/recalculateGroups",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "recalculateGroups"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.10.18 Get list of operations",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"There are 4 operation with 'empty group'\", function () {\r",
                                            "    pm.expect(data.operations.length).to.eql(4);\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_2}}/rest/operations?emptyGroup=true",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "versions",
                                        "{{version_2}}",
                                        "rest",
                                        "operations"
                                    ],
                                    "query": [
                                        {
                                            "key": "emptyGroup",
                                            "value": "true"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.10.19 Get list of addable operations for operation group",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"37 operations can be added to operation group\", function () {\r",
                                            "    pm.expect(data.operations.length).to.eql(37);\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_2}}/rest/groups/{{operation_group_1}}?onlyAddable=true",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "versions",
                                        "{{version_2}}",
                                        "rest",
                                        "groups",
                                        "{{operation_group_1}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "onlyAddable",
                                            "value": "true"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        }
                    ]
                },
                {
                    "name": "8.11 APIHUB-4739 [BE] Api groups for dashboard",
                    "item": [
                        {
                            "name": "8.11.0 Get package version",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"Packages has versions\", function () {\r",
                                            "    pm.expect(data.versions.length).to.greaterThan(0);\r",
                                            "});\r",
                                            "\r",
                                            "pm.environment.set(\"version_1\", data.versions[1].version);\r",
                                            "pm.environment.set(\"version_1_2\", data.versions[1].version.split(\"@\")[0]);\r",
                                            "pm.environment.set(\"version_2\", data.versions[0].version);\r",
                                            "pm.environment.set(\"version_2_2\", data.versions[0].version.split(\"@\")[0]);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "versions"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.11.1 Publish dashboard_3 new version",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 202\", function () {\r",
                                            "    pm.response.to.have.status(202);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"publish_id\", data.publishId)\r",
                                            "\r",
                                            "setTimeout(() => { },10000);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_3}}/publish",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{dashboard_3}}",
                                        "publish"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Transfer-Encoding",
                                        "value": "base64",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"clientBuild\"\r\n\r\nfalse\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"builderId\"\r\n\r\n5680525d-7c7b-47be-8ede-d502626a79dc\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"config\"\r\n\r\n{\r\n    \"version\": \"2001.4\",\r\n    \"status\": \"release\",\r\n    \"versionFolder\": \"qwerty\",\r\n    \"refs\": [\r\n        {\r\n            \"refId\": \"{{package_1}}\",\r\n            \"version\": \"{{version_2_2}}\"\r\n        }\r\n    ],\r\n    \"files\": []\r\n}\r\n----------------------------127308995100818139707097--",
                                    "options": {
                                        "raw": {
                                            "language": "text"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.11.1-1 Get publish status",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "var retry = parseInt(pm.environment.get(\"com_retry_counter\") || 0);\r",
                                            "var delay = parseInt(pm.environment.get(\"com_retry_delay\") || 0);\r",
                                            "\r",
                                            "var respBody = pm.response.json();\r",
                                            "\r",
                                            "if ((respBody.status != \"complete\") && retry < 15) {\r",
                                            "    retry++;\r",
                                            "    delay = 5000 + delay;\r",
                                            "\r",
                                            "\r",
                                            "pm.test(\"Status is ok, response is json\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "    pm.response.to.be.ok;\r",
                                            "});\r",
                                            "\r",
                                            "var respBody = pm.response.json();\r",
                                            "\r",
                                            "    setTimeout(function () { }, delay);\r",
                                            "    postman.setNextRequest(request.name);\r",
                                            "    pm.environment.set(\"com_retry_counter\", retry);\r",
                                            "    pm.environment.set(\"com_retry_delay\", delay);\r",
                                            "}\r",
                                            "else {\r",
                                            "    pm.environment.set(\"com_retry_counter\", null);\r",
                                            "    pm.environment.set(\"com_retry_delay\", null);\r",
                                            "\r",
                                            "    pm.test(\"Status code is 200\", function () {\r",
                                            "        pm.response.to.have.status(200);\r",
                                            "    });\r",
                                            "\r",
                                            "}\r",
                                            "setTimeout(function(){}, [100]);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_3}}/publish/{{publish_id}}/status",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{dashboard_3}}",
                                        "publish",
                                        "{{publish_id}}",
                                        "status"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.11.2 Get that list of dashboard_3 versions",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.environment.set(\"dash_1_version_1\", data.versions[0].version.split(\"@\")[0]);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_3}}/versions",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{dashboard_3}}",
                                        "versions"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.11.3 Create operation group 1",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 201\", function () {\r",
                                            "    pm.response.to.have.status(201);\r",
                                            "});\r",
                                            "\r",
                                            "pm.environment.set(\"dash_operation_group_1\", 'test_1');"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_3}}/versions/{{dash_1_version_1}}/rest/groups",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{dashboard_3}}",
                                        "versions",
                                        "{{dash_1_version_1}}",
                                        "rest",
                                        "groups"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\r\n    \"groupName\": \"test_1\",\r\n    \"description\": \"Test group\"\r\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.11.4 Get that list of operations under dashboard_3",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.environment.set(\"operation_id_1\", data.operations[0].operationId);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_3}}/versions/{{dash_1_version_1}}/rest/operations",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{dashboard_3}}",
                                        "versions",
                                        "{{dash_1_version_1}}",
                                        "rest",
                                        "operations"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.11.5 Get that list of operations for operation group 1 is empty",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"Operation group is empty\", function () {\r",
                                            "    pm.expect(data.operations.length).to.eql(0);\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_3}}/versions/{{dash_1_version_1}}/rest/groups/{{dash_operation_group_1}}",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{dashboard_3}}",
                                        "versions",
                                        "{{dash_1_version_1}}",
                                        "rest",
                                        "groups",
                                        "{{dash_operation_group_1}}"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.11.6 Update operation group 1",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 204\", function () {\r",
                                            "    pm.response.to.have.status(204);\r",
                                            "});\r",
                                            "\r",
                                            "pm.environment.set(\"dash_operation_group_1\", 'test_2');"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v3/packages/{{dashboard_3}}/versions/{{dash_1_version_1}}/rest/groups/test_1",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v3",
                                        "packages",
                                        "{{dashboard_3}}",
                                        "versions",
                                        "{{dash_1_version_1}}",
                                        "rest",
                                        "groups",
                                        "test_1"
                                    ]
                                },
                                "method": "PATCH",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "key": "groupName",
                                            "type": "default",
                                            "value": "test_2"
                                        },
                                        {
                                            "key": "operations",
                                            "type": "default",
                                            "value": "[{\n        \"packageId\": \"{{package_1}}\",\n        \"version\": \"{{version_2}}\",\n        \"operationId\": \"{{operation_id_1}}\"\n    }]"
                                        }
                                    ]
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.11.7 Get list of operations for operation group 1-",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"Operation group isn't empty\", function () {\r",
                                            "    pm.expect(data.operations.length).to.eql(1);\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_3}}/versions/{{dash_1_version_1}}/rest/groups/{{dash_operation_group_1}}",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{dashboard_3}}",
                                        "versions",
                                        "{{dash_1_version_1}}",
                                        "rest",
                                        "groups",
                                        "{{dash_operation_group_1}}"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.11.8 Publish dashboard_3 new version",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 202\", function () {\r",
                                            "    pm.response.to.have.status(202);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"publish_id\", data.publishId)\r",
                                            "\r",
                                            "setTimeout(() => { },10000);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_3}}/publish",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{dashboard_3}}",
                                        "publish"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Transfer-Encoding",
                                        "value": "base64",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"clientBuild\"\r\n\r\nfalse\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"builderId\"\r\n\r\n5680525d-7c7b-47be-8ede-d502626a79dc\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"config\"\r\n\r\n{\r\n    \"version\": \"2001.4\",\r\n    \"status\": \"release\",\r\n    \"versionFolder\": \"qwerty\",\r\n    \"refs\": [\r\n        {\r\n            \"refId\": \"{{package_1}}\",\r\n            \"version\": \"{{version_2_2}}\"\r\n        }\r\n    ],\r\n    \"files\": []\r\n}\r\n----------------------------127308995100818139707097--",
                                    "options": {
                                        "raw": {
                                            "language": "text"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.11.9 Get dashboard_3 versions",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"Packages has versions\", function () {\r",
                                            "    pm.expect(data.versions.length).to.greaterThan(0);\r",
                                            "});\r",
                                            "\r",
                                            "pm.environment.set(\"dash_2_version_1\", data.versions[0].version);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_3}}/versions",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{dashboard_3}}",
                                        "versions"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.11.10 Check that list of operations for operation group 1 the same",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"There is 1 operation in group under republished version\", function () {\r",
                                            "    pm.expect(data.operations.length).not.to.eql(0);\r",
                                            "    //pm.expect(data.operations.length).to.eql(1);\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_3}}/versions/{{dash_2_version_1}}/rest/groups/{{dash_operation_group_1}}",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{dashboard_3}}",
                                        "versions",
                                        "{{dash_2_version_1}}",
                                        "rest",
                                        "groups",
                                        "{{dash_operation_group_1}}"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        }
                    ]
                },
                {
                    "name": "8.12 APIHUB-5574 [BE] Package move productization",
                    "item": [
                        {
                            "name": "8.12.1 Add static test-2",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 201\", function () {\r",
                                            "    pm.response.to.have.status(201);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"static_root_group_2\", data.groupId)"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v1/groups",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v1",
                                        "groups"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\r\n    \"name\": \"Test Workspace\",\r\n    \"Alias\" :\"QS-STATIC-TEST-2\",\r\n    \"parentId\": \"\",\r\n    \"description\": \"Required for to upload hardcoded packages\",\r\n    \"imageUrl\": \"\"\r\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.12.2 Create package",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 201\", function () {\r",
                                            "    pm.response.to.have.status(201);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"alias_1\", data.alias)"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\r\n    \"Alias\" :\"{{$randomPhoneNumber}}-PKG\",\r\n    \"name\": \"Test static package\",\r\n    \"parentId\": \"QS-STATIC-TEST-1\",\r\n    \"kind\":\"package\",\r\n    \"description\": \"Package to be built\",\r\n    \"serviceName\": \"\",\r\n    \"imageUrl\": \"\",\r\n    \"releaseVersionPattern\": \"static-test-1\"\r\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.12.3 Move package to new group",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"move_id\", data.id)\r",
                                            "\r",
                                            "setTimeout(() => { },20000);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/admin/transition/move",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "admin",
                                        "transition",
                                        "move"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Transfer-Encoding",
                                        "value": "base64",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\r\n    \"from\": \"QS-STATIC-TEST-1.{{alias_1}}\",\r\n    \"to\": \"QS-STATIC-TEST-2.{{alias_1}}\"\r\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.12.4 Get move status",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "var retry = parseInt(pm.environment.get(\"com_retry_counter\") || 0);\r",
                                            "var delay = parseInt(pm.environment.get(\"com_retry_delay\") || 0);\r",
                                            "\r",
                                            "var respBody = pm.response.json();\r",
                                            "\r",
                                            "if ((respBody.status != \"complete\") && retry < 15) {\r",
                                            "    retry++;\r",
                                            "    delay = 5000 + delay;\r",
                                            "\r",
                                            "\r",
                                            "pm.test(\"Status is ok, response is json\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "    pm.response.to.be.ok;\r",
                                            "});\r",
                                            "\r",
                                            "var respBody = pm.response.json();\r",
                                            "\r",
                                            "    setTimeout(function () { }, delay);\r",
                                            "    postman.setNextRequest(request.name);\r",
                                            "    pm.environment.set(\"com_retry_counter\", retry);\r",
                                            "    pm.environment.set(\"com_retry_delay\", delay);\r",
                                            "}\r",
                                            "else {\r",
                                            "    pm.environment.set(\"com_retry_counter\", null);\r",
                                            "    pm.environment.set(\"com_retry_delay\", null);\r",
                                            "\r",
                                            "    pm.test(\"Status code is 200\", function () {\r",
                                            "        pm.response.to.have.status(200);\r",
                                            "    });\r",
                                            "\r",
                                            "    pm.test(\"'trType' = 'move_package'\", function () {\r",
                                            "    pm.expect(respBody.trType).to.eql('move_package');\r",
                                            "    });\r",
                                            "\r",
                                            "    pm.test(\"Status 'complete'\", function () {\r",
                                            "    pm.expect(respBody.status).to.eql('complete');\r",
                                            "    });\r",
                                            "\r",
                                            "}\r",
                                            "setTimeout(function(){}, [100]);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/admin/transition/move/{{move_id}}",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "admin",
                                        "transition",
                                        "move",
                                        "{{move_id}}"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.12.5 Move package to old group",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"move_id\", data.id)\r",
                                            "\r",
                                            "setTimeout(() => { },10000);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/admin/transition/move",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "admin",
                                        "transition",
                                        "move"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Transfer-Encoding",
                                        "value": "base64",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\r\n    \"from\": \"QS-STATIC-TEST-2.{{alias_1}}\",\r\n    \"to\": \"QS-STATIC-TEST-1.{{alias_1}}\"\r\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.12.6 Get move status",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "var retry = parseInt(pm.environment.get(\"com_retry_counter\") || 0);\r",
                                            "var delay = parseInt(pm.environment.get(\"com_retry_delay\") || 0);\r",
                                            "\r",
                                            "var respBody = pm.response.json();\r",
                                            "\r",
                                            "if ((respBody.status != \"complete\") && retry < 15) {\r",
                                            "    retry++;\r",
                                            "    delay = 5000 + delay;\r",
                                            "\r",
                                            "\r",
                                            "pm.test(\"Status is ok, response is json\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "    pm.response.to.be.ok;\r",
                                            "});\r",
                                            "\r",
                                            "var respBody = pm.response.json();\r",
                                            "\r",
                                            "    setTimeout(function () { }, delay);\r",
                                            "    postman.setNextRequest(request.name);\r",
                                            "    pm.environment.set(\"com_retry_counter\", retry);\r",
                                            "    pm.environment.set(\"com_retry_delay\", delay);\r",
                                            "}\r",
                                            "else {\r",
                                            "    pm.environment.set(\"com_retry_counter\", null);\r",
                                            "    pm.environment.set(\"com_retry_delay\", null);\r",
                                            "\r",
                                            "    pm.test(\"Status code is 200\", function () {\r",
                                            "        pm.response.to.have.status(200);\r",
                                            "    });\r",
                                            "\r",
                                            "    pm.test(\"'trType' = 'move_package'\", function () {\r",
                                            "    pm.expect(respBody.trType).to.eql('move_package');\r",
                                            "    });\r",
                                            "\r",
                                            "    pm.test(\"Status 'complete'\", function () {\r",
                                            "    pm.expect(respBody.status).to.eql('complete');\r",
                                            "    });\r",
                                            "\r",
                                            "}\r",
                                            "setTimeout(function(){}, [100]);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/admin/transition/move/{{move_id}}",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "admin",
                                        "transition",
                                        "move",
                                        "{{move_id}}"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.12.7 Move package to new ID",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"move_id\", data.id)\r",
                                            "\r",
                                            "setTimeout(() => { },10000);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/admin/transition/move",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "admin",
                                        "transition",
                                        "move"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Transfer-Encoding",
                                        "value": "base64",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\r\n    \"from\": \"QS-STATIC-TEST-1.{{alias_1}}\",\r\n    \"to\": \"QS-STATIC-TEST-1.{{alias_1}}-1\"\r\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.12.8 Get move status",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "var retry = parseInt(pm.environment.get(\"com_retry_counter\") || 0);\r",
                                            "var delay = parseInt(pm.environment.get(\"com_retry_delay\") || 0);\r",
                                            "\r",
                                            "var respBody = pm.response.json();\r",
                                            "\r",
                                            "if ((respBody.status != \"complete\") && retry < 15) {\r",
                                            "    retry++;\r",
                                            "    delay = 5000 + delay;\r",
                                            "\r",
                                            "\r",
                                            "pm.test(\"Status is ok, response is json\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "    pm.response.to.be.ok;\r",
                                            "});\r",
                                            "\r",
                                            "var respBody = pm.response.json();\r",
                                            "\r",
                                            "    setTimeout(function () { }, delay);\r",
                                            "    postman.setNextRequest(request.name);\r",
                                            "    pm.environment.set(\"com_retry_counter\", retry);\r",
                                            "    pm.environment.set(\"com_retry_delay\", delay);\r",
                                            "}\r",
                                            "else {\r",
                                            "    pm.environment.set(\"com_retry_counter\", null);\r",
                                            "    pm.environment.set(\"com_retry_delay\", null);\r",
                                            "\r",
                                            "    pm.test(\"Status code is 200\", function () {\r",
                                            "        pm.response.to.have.status(200);\r",
                                            "    });\r",
                                            "\r",
                                            "    pm.test(\"'trType' = 'move_package'\", function () {\r",
                                            "    pm.expect(respBody.trType).to.eql('rename_package');\r",
                                            "    });\r",
                                            "\r",
                                            "    pm.test(\"Status 'complete'\", function () {\r",
                                            "    pm.expect(respBody.status).to.eql('complete');\r",
                                            "    });\r",
                                            "\r",
                                            "}\r",
                                            "setTimeout(function(){}, [100]);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/admin/transition/move/{{move_id}}",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "admin",
                                        "transition",
                                        "move",
                                        "{{move_id}}"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        }
                    ]
                },
                {
                    "name": "8.13 APIHUB-4578 [BE] Private workspace",
                    "item": [
                        {
                            "name": "8.13.1 Create user",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 201\", function () {\r",
                                            "    pm.response.to.have.status(201);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"user_A_login\", data.email)\r",
                                            "pm.environment.set(\"user_A_password\", \"password\")\r",
                                            "pm.environment.set(\"user_A_id\", data.id)"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/internal/users",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "internal",
                                        "users"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\r\n    \"email\": \"{{$randomPhoneNumber}}@openmail.com\",\r\n    \"password\": \"password\",\r\n    \"name\": \"{{$randomPhoneNumber}}\"\r\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.13.1-1 Local Auth as user",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "var data = JSON.parse(responseBody);",
                                            "",
                                            "pm.environment.set(\"TOKEN\", data.token)"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/auth/local",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "auth",
                                        "local"
                                    ]
                                },
                                "method": "POST",
                                "header": [],
                                "auth": {
                                    "type": "basic",
                                    "basic": [
                                        {
                                            "key": "username",
                                            "value": "{{user_A_login}}",
                                            "type": "string"
                                        },
                                        {
                                            "key": "password",
                                            "value": "{{user_A_password}}",
                                            "type": "string"
                                        }
                                    ]
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.13.2 Create personal workspace for new user",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 201\", function () {\r",
                                            "    pm.response.to.have.status(201);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "\r",
                                            "pm.test(\"Personal workspace created\", function () {\r",
                                            "    pm.expect(data.kind).to.eql('workspace');\r",
                                            "});\r",
                                            "\r",
                                            "pm.test(\"'excludeFromSearch' = true\", function () {\r",
                                            "    pm.expect(data.excludeFromSearch).to.eql(true);\r",
                                            "});\r",
                                            "\r",
                                            "pm.environment.set(\"pr_workspace\", data.packageId)"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/users/{{user_A_id}}/space",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "users",
                                        "{{user_A_id}}",
                                        "space"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Authorization",
                                        "value": "Bearer {{TOKEN}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.13.3 Recreate personal workspace for new user",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 400\", function () {\r",
                                            "    pm.response.to.have.status(400);\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/users/{{user_A_id}}/space",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "users",
                                        "{{user_A_id}}",
                                        "space"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Authorization",
                                        "value": "Bearer {{TOKEN}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.13.4 Delete user",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 204\", function () {\r",
                                            "    pm.response.to.have.status(204);\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/internal/clear/{{user_A_id}}",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "internal",
                                        "clear",
                                        "{{user_A_id}}"
                                    ]
                                },
                                "method": "DELETE",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ],
                                "auth": {
                                    "type": "noauth"
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.13.5 Delete workspace",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 204\", function () {\r",
                                            "    pm.response.to.have.status(204);\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{pr_workspace}}",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{pr_workspace}}"
                                    ]
                                },
                                "method": "DELETE",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ],
                                "auth": {
                                    "type": "noauth"
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        }
                    ]
                },
                {
                    "name": "8.15 APIHUB-5051 [BE] Support operation models",
                    "item": [
                        {
                            "name": "8.15.1 Delete static test data from DB",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 204\", function () {\r",
                                            "    pm.response.to.have.status(204);\r",
                                            "});\r",
                                            ""
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/internal/clear/STATIC-TEST-2",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "internal",
                                        "clear",
                                        "STATIC-TEST-2"
                                    ]
                                },
                                "method": "DELETE",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.15.2 Add static test group",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 201\", function () {\r",
                                            "    pm.response.to.have.status(201);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"static_root_group_1\", data.groupId)"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v1/groups",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v1",
                                        "groups"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\r\n    \"name\": \"Test Workspace\",\r\n    \"Alias\" :\"QS-STATIC-TEST-2\",\r\n    \"parentId\": \"\",\r\n    \"description\": \"Required for to upload hardcoded packages\",\r\n    \"imageUrl\": \"\"\r\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.15.3 Add static package",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 201\", function () {\r",
                                            "    pm.response.to.have.status(201);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"static_root_pkg_1\", data.id)\r",
                                            "pm.environment.set(\"package_1\", data.packageId)"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\r\n    \"id\": \"QS-STATIC-TEST-2.PKG5\",\r\n    \"Alias\" :\"PKG5\",\r\n    \"name\": \"Test static package 1\",\r\n    \"parentId\": \"QS-STATIC-TEST-2\",\r\n    \"kind\":\"package\",\r\n    \"description\": \"Package to be built\",\r\n    \"serviceName\": \"\",\r\n    \"imageUrl\": \"\",\r\n    \"restGroupingPrefix\": \"/api/{group}/\"\r\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.15.4 Package version publish",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 202\", function () {\r",
                                            "    pm.response.to.have.status(202);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"publish_id\", data.publishId)\r",
                                            "\r",
                                            "setTimeout(() => { },20000);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/publish",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "publish"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Transfer-Encoding",
                                        "value": "base64",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"clientBuild\"\r\n\r\nfalse\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"config\"\r\n\r\n{\r\n    \"version\": \"1.0\",\r\n    \"status\": \"draft\",\r\n    \"versionFolder\": \"qwerty\",\r\n    \"refs\": [],\r\n    \"files\": [{\r\n            \"fileId\": \"petstore.yaml\",\r\n            \"publish\": true\r\n        }\r\n    ]\r\n}\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"sources\"; filename=\"petstore_yml.zip\"\r\nContent-Type: application/zip;base64\r\n\r\nUEsDBBQAAAAIABFkaFUQiX2ZpQIAAIkKAAANAAAAcGV0c3RvcmUueWFtbNVWwW7bMAy9F+g/EN2AbofGaTvs4Ns2FFiAbSiw/oBm04k621IpOk0w7N9HyYrtZEmadgOK6hDEIkU+Pj3SNhZrZXUKJ5ej8Wh8cnyk68Kkx0cAcySnTZ3CuVjO/Q5rLjGF7/dqOkWCa2THhtCbSp1h7dAflFWrSvy+Tm6OjxySDxQMZ9BQmcKM2aZJYuPxkWvjjbRJ5pLHKp61/sElhpwi+39huaaqFC1T+KIdgypL8I4rq5REigX5JE+hFI/rgZHVNESM62ztpFUkwDnA7V1CNT5SpVm2u6WFmrsGaTnczNFlpC0H4j6be6hUvQTNWDlgA4TcUA2KwdQofFYIbyq1gPPx+O0gjPjdNZpQCihU6XBoctkMK9UBjGUtLaaCiFGIXDcVhirFwXh5IaYY31kj9zUs9PRiPD5NdxbzQeiZYg6KSC3BFCvmujVDla+o69firMbF6up2hi51/dPzwzME7x9ySZIOaMz0AA09FY5J19OhNTPCTr2JRFkr0g1ySW6dByPr4FyvCQtpnVdJZiqBKeFd0jq7xKtO2qkvuFBNybv5baRuixkLxUhk6AnY/wvuK588ArfGbem6T4SKEZRXwNamy4LDwW33BDF+a8qyO/eiSQ4zLvklv5P8975ZN5G57JtZeHdSgi50tvMC3MzcC/0fl5P8oBvYO/gCtM3B54f09oHF1OBO/m+kv3Uuje073UeOQ5E0zg+dcm1r/4N4rqIEurMehIK5KrXfk5nu+LmEIbf2kodGbwoBojkGu46y7q/S/LgV8O1er6E1Dep8U5GDZ6/qTsPkW4D1mhK0D3bAa3Lwknz/rjO0DdA//q3Arrce8PKzcL329j0at8IHgnc4hOteIoH1x1OamXyNxAqdk9ftPiLDmUdT2X9vQEyym80/UEsBAj8AFAAAAAgAEWRoVRCJfZmlAgAAiQoAAA0AJAAAAAAAAAAgAAAAAAAAAHBldHN0b3JlLnlhbWwKACAAAAAAAAEAGAAKKSMHVfPYARJQIwdV89gBOjCy/c3y2AFQSwUGAAAAAAEAAQBfAAAA0AIAAAAA\r\n----------------------------127308995100818139707097--",
                                    "options": {
                                        "raw": {
                                            "language": "text"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.15.5 Get package build status",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.test(\"Status is complete\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "    pm.expect(data.status).to.eql(\"complete\");\r",
                                            "});\r",
                                            ""
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/QS-STATIC-TEST-2.PKG1/publish/{{publish_id}}/status",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "QS-STATIC-TEST-2.PKG1",
                                        "publish",
                                        "{{publish_id}}",
                                        "status"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.15.6 Get package versions",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"Packages has versions\", function () {\r",
                                            "    pm.expect(data.versions.length).to.greaterThan(0);\r",
                                            "});\r",
                                            "\r",
                                            "\r",
                                            "pm.environment.set(\"version_1\", data.versions[0].version);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "versions"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.15.7 Get list post operations",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "\r",
                                            "pm.environment.set(\"operation_id_1\", data.operations[0].operationId)"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_1}}/rest/operations",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "versions",
                                        "{{version_1}}",
                                        "rest",
                                        "operations"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.15.8 List of operations with the same model",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "\r",
                                            "pm.test(\"Operations with the same 'model' found\", () => {\r",
                                            "    pm.expect(data.modelUsages[0].modelNames).to.include('Pet')\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_1}}/rest/operations/{{operation_id_1}}/models/Pet/usages",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "versions",
                                        "{{version_1}}",
                                        "rest",
                                        "operations",
                                        "{{operation_id_1}}",
                                        "models",
                                        "Pet",
                                        "usages"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.15.9 List of operations by non-existing model",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 404\", function () {\r",
                                            "    pm.response.to.have.status(404);\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_1}}/rest/operations/{{operation_id_1}}/models/nothing123/usages",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "versions",
                                        "{{version_1}}",
                                        "rest",
                                        "operations",
                                        "{{operation_id_1}}",
                                        "models",
                                        "nothing123",
                                        "usages"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.15.10 Package version republish",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 202\", function () {\r",
                                            "    pm.response.to.have.status(202);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"publish_id\", data.publishId)\r",
                                            "\r",
                                            "setTimeout(() => { },20000);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/publish",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "publish"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Transfer-Encoding",
                                        "value": "base64",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"clientBuild\"\r\n\r\nfalse\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"config\"\r\n\r\n{\r\n    \"version\": \"1.0\",\r\n    \"status\": \"draft\",\r\n    \"versionFolder\": \"qwerty\",\r\n    \"refs\": [],\r\n    \"files\": [{\r\n            \"fileId\": \"petstore.yaml\",\r\n            \"publish\": true\r\n        }\r\n    ]\r\n}\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"sources\"; filename=\"petstore_yml.zip\"\r\nContent-Type: application/zip;base64\r\n\r\nUEsDBBQAAAAIAAVajlciSCeRsAIAAKIKAAANAAAAcGV0c3RvcmUueWFtbNVWX2/TMBB/n7TvcBpIg4c13YZ4yBugSVQCNIl+AZNcUo849uxL/wjx3Tk7bpKWtusG0jQ/VK3v/+9+d642WAsjUzi7Ho1H47PTE1kXOj09AZijdVLXKVyy5NLfkKQKU/i+EGWJFm6RHGmLXlTJDGuH3pBPLRTrfZ1MT08cWu8oCC6gsVUKMyKTJomJ5iPX+htJncw5jhE0a/WDSnRZIvlv4bhGKWFXKXyRjkBUFXjFtXR5Qegohaxh92oqyrWAa7WCuKRJnkLFprcDKxJlCBXPxYZLIyxXRKGOXiWU6T0pSXzdHcmY3TdoV8PLHF1mpaGA6Ge9ACXqFUhC5YA0WKTG1iAIdI0MtEJ4o8QSLsfjtwM3rHffSItcQCEqh0ORy2aoRJdgLGtlMOWMCBnhTVGhrRIUhNdXLIr+ndHcyGGh51fj8Xm6t5gPDE+JOQhrxQp0sUauOzMU+RC6dZtqXK57utd1JeufHh+aIXj9EIuDdInGSA/A0EPhyMq6HEozzejU25kIY5jTgS7JnfPJ8Dk61muLBc/UqyTTitNk9y5plV3iWcdz1hdciKai/fg2XLfBjBhitFbbJ+T+X/K+8cFj4ka7HeP4yaIgBOEZsHPosqBw9Ng9gYzfmqrq7F40yGH5Jb/4c5L/PrQEJ7yw/TAz7o5LkIXM9jbAzfSC4f+4muRHdeDg4gupbS8+v713LyyyDe7Ff8rzLXMebD/p3nNcilbi/Ngt1472P5DnJlKgs/VJCJiLSuahEH5XnosY3LWXvDR6UXAQxdHZbaR130r9446Tb+96Dm1wUObbjBz+pv7ZN9aPAMkNJkjv7IhncvBIvn/XCdoB6H/+zcButh7Q8rtws/b2HY1X4Q+CVzgG654iAfXHQ5rpfANEhc7xc3sIyGDzaCj7/xsQg+xH8w9QSwECPwAUAAAACAAFWo5XIkgnkbACAACiCgAADQAkAAAAAAAAACAAAAAAAAAAcGV0c3RvcmUueWFtbAoAIAAAAAAAAQAYAOV7/ituLtoBSAgCLG4u2gE6MLL9zfLYAVBLBQYAAAAAAQABAF8AAADbAgAAAAA=\r\n----------------------------127308995100818139707097--",
                                    "options": {
                                        "raw": {
                                            "language": "text"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        }
                    ]
                },
                {
                    "name": "8.17 APIHUB-5840 [BE] Get user's private workspace (packageId)",
                    "item": [
                        {
                            "name": "8.17.1 Get user's private workspace",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200 or 404\", function () {\r",
                                            "    pm.expect(pm.response.code).to.be.oneOf([200, 404]);\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/space",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "space"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "Authorization",
                                        "value": "Bearer {{token}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.17.2 Get user's private workspace without auth",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 401\", function () {\r",
                                            "    pm.response.to.have.status(401);\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/space",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "space"
                                    ]
                                },
                                "method": "GET",
                                "header": []
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.17.3 Create user",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 201\", function () {\r",
                                            "    pm.response.to.have.status(201);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"user_A_login\", data.email)\r",
                                            "pm.environment.set(\"user_A_password\", \"password\")\r",
                                            "pm.environment.set(\"user_A_id\", data.id)"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/internal/users",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "internal",
                                        "users"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\r\n    \"email\": \"{{$randomPhoneNumber}}@openmail.com\",\r\n    \"password\": \"password\",\r\n    \"name\": \"{{$randomPhoneNumber}}\"\r\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.17.4 Login as User_A",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"TOKEN_1\", data.token)"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/auth/local",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "auth",
                                        "local"
                                    ]
                                },
                                "method": "POST",
                                "header": [],
                                "auth": {
                                    "type": "basic",
                                    "basic": [
                                        {
                                            "key": "username",
                                            "value": "{{user_A_login}}",
                                            "type": "string"
                                        },
                                        {
                                            "key": "password",
                                            "value": "{{user_A_password}}",
                                            "type": "string"
                                        }
                                    ]
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.17.5 Get non existing user's private workspace",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 404\", function () {\r",
                                            "    pm.response.to.have.status(404);\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/space",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "space"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "Authorization",
                                        "value": "Bearer {{TOKEN_1}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.17.6 Create own personal private package",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 201\", function () {\r",
                                            "    pm.response.to.have.status(201);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"package_private\", data.packageId)"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/space",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "space"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Authorization",
                                        "value": "Bearer {{TOKEN_1}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.17.7 Recreate own personal private package",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 400\", function () {\r",
                                            "    pm.response.to.have.status(400);\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/space",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "space"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Authorization",
                                        "value": "Bearer {{TOKEN_1}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.17.8 Delete user",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 204\", function () {\r",
                                            "    pm.response.to.have.status(204);\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/internal/clear/{{user_A_id}}",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "internal",
                                        "clear",
                                        "{{user_A_id}}"
                                    ]
                                },
                                "method": "DELETE",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ],
                                "auth": {
                                    "type": "noauth"
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.17.9 Create own personal private package for removed user",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 404\", function () {\r",
                                            "    pm.response.to.have.status(404);\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/space",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "space"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Authorization",
                                        "value": "Bearer {{TOKEN_1}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.17.10 Create own personal private package without auth",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 401\", function () {\r",
                                            "    pm.response.to.have.status(401);\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/space",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "space"
                                    ]
                                },
                                "method": "POST",
                                "header": []
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.17.11  Delete private package",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 204\", function () {\r",
                                            "    pm.response.to.have.status(204);\r",
                                            "});\r",
                                            "\r",
                                            "setTimeout(() => { }, 200);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_private}}",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_private}}"
                                    ]
                                },
                                "method": "DELETE",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        }
                    ]
                },
                {
                    "name": "8.18 APIHUB-4272 [BE] Store custom tag for operations",
                    "item": [
                        {
                            "name": "8.18.1 Get package versions",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"Packages has versions\", function () {\r",
                                            "    pm.expect(data.versions.length).to.greaterThan(0);\r",
                                            "});\r",
                                            "\r",
                                            "\r",
                                            "pm.environment.set(\"version_1\", data.versions[0].version);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "versions"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.18.2 Get list operations",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "\r",
                                            "pm.test(\"'customTags' is displayed\", function () {\r",
                                            "    pm.expect(data.operations[0].operationId.customTags).to.not.eq(null);\r",
                                            "});\r",
                                            "\r",
                                            "pm.environment.set(\"operation_id_1\", data.operations[0].operationId)"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_1}}/rest/operations",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "versions",
                                        "{{version_1}}",
                                        "rest",
                                        "operations"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.18.3 Check operation details",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "pm.test(\"'customTag' is displayed\", function () {\r",
                                            "  pm.expect(responseBody).to.include('x-test');\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_1}}/rest/operations/{{operation_id_1}}",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "versions",
                                        "{{version_1}}",
                                        "rest",
                                        "operations",
                                        "{{operation_id_1}}"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        }
                    ]
                },
                {
                    "name": "8.19 APIHUB-6082 [BE] Expose Metrics for accounts via REST",
                    "item": [
                        {
                            "name": "8.19.1 Check business metrics",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "\r",
                                            "pm.test(\"Only 'NC metrics' are displayed\", function(){\r",
                                            "    for (var i = 0; i<data.length; i++) {\r",
                                            "        pm.expect(data[i].packageId).to.eq('NC')\r",
                                            "    }\r",
                                            "});\r",
                                            "\r",
                                            "pm.test(\"'username' parameter displayed\", function(){\r",
                                            "    for (var i = 0; i<data.length; i++) {\r",
                                            "        pm.expect(data[i].username).not.to.eq(null)\r",
                                            "    }\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/businessMetrics?parentPackageId=NC&hierarchyLevel=1",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "businessMetrics"
                                    ],
                                    "query": [
                                        {
                                            "key": "parentPackageId",
                                            "value": "NC"
                                        },
                                        {
                                            "key": "hierarchyLevel",
                                            "value": "1"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.19.2 Check business metrics in 'xlsx' format",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "pm.test(\"Content-type is application\", function () {\r",
                                            "    pm.response.to.have.header('Content-Type');\r",
                                            "    pm.expect(pm.response.headers.get('Content-Type')).to.include('application');\r",
                                            "    pm.response.to.have.header('Content-Disposition');\r",
                                            "    pm.expect(pm.response.headers.get('Content-Disposition')).to.include('attachment');\r",
                                            "    pm.expect(pm.response.headers.get('Content-Disposition')).to.include(\".xlsx\");\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/businessMetrics?format=xlsx",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "businessMetrics"
                                    ],
                                    "query": [
                                        {
                                            "key": "format",
                                            "value": "xlsx"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        }
                    ]
                },
                {
                    "name": "8.20 APIHUB-9173 [BE] Copy package version to another package",
                    "item": [
                        {
                            "name": "8.20.1 Delete static test data from DB",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 204\", function () {\r",
                                            "    pm.response.to.have.status(204);\r",
                                            "});\r",
                                            ""
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/internal/clear/STATIC-TEST-2",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "internal",
                                        "clear",
                                        "STATIC-TEST-2"
                                    ]
                                },
                                "method": "DELETE",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.20.2 Add static test group",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 201\", function () {\r",
                                            "    pm.response.to.have.status(201);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"static_root_group_1\", data.groupId)"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v1/groups",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v1",
                                        "groups"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\r\n    \"name\": \"Test Workspace\",\r\n    \"Alias\" :\"QS-STATIC-TEST-2\",\r\n    \"parentId\": \"\",\r\n    \"description\": \"Required for to upload hardcoded packages\",\r\n    \"imageUrl\": \"\"\r\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.20.3 Add static package 1",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 201\", function () {\r",
                                            "    pm.response.to.have.status(201);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"package_1\", data.packageId)"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\r\n    \"id\": \"QS-STATIC-TEST-2.PKG5-1\",\r\n    \"Alias\" :\"PKG5-1\",\r\n    \"name\": \"Test static package 1\",\r\n    \"parentId\": \"QS-STATIC-TEST-2\",\r\n    \"kind\":\"package\",\r\n    \"description\": \"Package to be built\",\r\n    \"serviceName\": \"\",\r\n    \"imageUrl\": \"\",\r\n    \"restGroupingPrefix\": \"/api/{group}/\"\r\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.20.4 Package version publish",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 202\", function () {\r",
                                            "    pm.response.to.have.status(202);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"publish_id\", data.publishId)\r",
                                            "\r",
                                            "setTimeout(() => { },20000);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/publish",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "publish"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Transfer-Encoding",
                                        "value": "base64",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"clientBuild\"\r\n\r\nfalse\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"config\"\r\n\r\n{\r\n    \"version\": \"1.0\",\r\n    \"status\": \"draft\",\r\n    \"versionFolder\": \"qwerty\",\r\n    \"refs\": [],\r\n    \"files\": [{\r\n            \"fileId\": \"petstore.yaml\",\r\n            \"publish\": true\r\n        }\r\n    ]\r\n}\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"sources\"; filename=\"petstore_yml.zip\"\r\nContent-Type: application/zip;base64\r\n\r\nUEsDBBQAAAAIABFkaFUQiX2ZpQIAAIkKAAANAAAAcGV0c3RvcmUueWFtbNVWwW7bMAy9F+g/EN2AbofGaTvs4Ns2FFiAbSiw/oBm04k621IpOk0w7N9HyYrtZEmadgOK6hDEIkU+Pj3SNhZrZXUKJ5ej8Wh8cnyk68Kkx0cAcySnTZ3CuVjO/Q5rLjGF7/dqOkWCa2THhtCbSp1h7dAflFWrSvy+Tm6OjxySDxQMZ9BQmcKM2aZJYuPxkWvjjbRJ5pLHKp61/sElhpwi+39huaaqFC1T+KIdgypL8I4rq5REigX5JE+hFI/rgZHVNESM62ztpFUkwDnA7V1CNT5SpVm2u6WFmrsGaTnczNFlpC0H4j6be6hUvQTNWDlgA4TcUA2KwdQofFYIbyq1gPPx+O0gjPjdNZpQCihU6XBoctkMK9UBjGUtLaaCiFGIXDcVhirFwXh5IaYY31kj9zUs9PRiPD5NdxbzQeiZYg6KSC3BFCvmujVDla+o69firMbF6up2hi51/dPzwzME7x9ySZIOaMz0AA09FY5J19OhNTPCTr2JRFkr0g1ySW6dByPr4FyvCQtpnVdJZiqBKeFd0jq7xKtO2qkvuFBNybv5baRuixkLxUhk6AnY/wvuK588ArfGbem6T4SKEZRXwNamy4LDwW33BDF+a8qyO/eiSQ4zLvklv5P8975ZN5G57JtZeHdSgi50tvMC3MzcC/0fl5P8oBvYO/gCtM3B54f09oHF1OBO/m+kv3Uuje073UeOQ5E0zg+dcm1r/4N4rqIEurMehIK5KrXfk5nu+LmEIbf2kodGbwoBojkGu46y7q/S/LgV8O1er6E1Dep8U5GDZ6/qTsPkW4D1mhK0D3bAa3Lwknz/rjO0DdA//q3Arrce8PKzcL329j0at8IHgnc4hOteIoH1x1OamXyNxAqdk9ftPiLDmUdT2X9vQEyym80/UEsBAj8AFAAAAAgAEWRoVRCJfZmlAgAAiQoAAA0AJAAAAAAAAAAgAAAAAAAAAHBldHN0b3JlLnlhbWwKACAAAAAAAAEAGAAKKSMHVfPYARJQIwdV89gBOjCy/c3y2AFQSwUGAAAAAAEAAQBfAAAA0AIAAAAA\r\n----------------------------127308995100818139707097--",
                                    "options": {
                                        "raw": {
                                            "language": "text"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.20.5 Get package 1 versions",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"Packages has versions\", function () {\r",
                                            "    pm.expect(data.versions.length).to.greaterThan(0);\r",
                                            "});\r",
                                            "\r",
                                            "pm.environment.set(\"version_1\", data.versions[0].version.split(\"@\")[0]);\r",
                                            "pm.environment.set(\"version_1_1\", data.versions[0].version);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "versions"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.20.6 Add static package 2",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 201\", function () {\r",
                                            "    pm.response.to.have.status(201);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"package_2\", data.packageId)"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\r\n    \"id\": \"QS-STATIC-TEST-2.PKG5-2\",\r\n    \"Alias\" :\"PKG5-2\",\r\n    \"name\": \"Test static package 2\",\r\n    \"parentId\": \"QS-STATIC-TEST-2\",\r\n    \"kind\":\"package\",\r\n    \"description\": \"Package to be built\",\r\n    \"serviceName\": \"\",\r\n    \"imageUrl\": \"\",\r\n    \"restGroupingPrefix\": \"/api/{group}/\"\r\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.20.7 Copy package 1 version 1",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 202\", function () {\r",
                                            "    pm.response.to.have.status(202);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"publish_id\", data.publishId)\r",
                                            "\r",
                                            "setTimeout(() => { },5000);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_1}}/copy",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "versions",
                                        "{{version_1}}",
                                        "copy"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\r\n    \"targetPackageId\": \"{{package_2}}\",\r\n    \"targetVersion\" :\"20.2\",\r\n    \"targetStatus\": \"draft\",\r\n     \"targetVersionLabels\": [\r\n         \"copy_test\"\r\n        ]\r\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.20.7-1 Get publish status",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "var retry = parseInt(pm.environment.get(\"com_retry_counter\") || 0);\r",
                                            "var delay = parseInt(pm.environment.get(\"com_retry_delay\") || 0);\r",
                                            "\r",
                                            "var respBody = pm.response.json();\r",
                                            "\r",
                                            "if ((respBody.status != \"complete\") && retry < 15) {\r",
                                            "    retry++;\r",
                                            "    delay = 5000 + delay;\r",
                                            "\r",
                                            "\r",
                                            "pm.test(\"Status is ok, response is json\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "    pm.response.to.be.ok;\r",
                                            "});\r",
                                            "\r",
                                            "var respBody = pm.response.json();\r",
                                            "\r",
                                            "    setTimeout(function () { }, delay);\r",
                                            "    postman.setNextRequest(request.name);\r",
                                            "    pm.environment.set(\"com_retry_counter\", retry);\r",
                                            "    pm.environment.set(\"com_retry_delay\", delay);\r",
                                            "}\r",
                                            "else {\r",
                                            "    pm.environment.set(\"com_retry_counter\", null);\r",
                                            "    pm.environment.set(\"com_retry_delay\", null);\r",
                                            "\r",
                                            "    pm.test(\"Status code is 200\", function () {\r",
                                            "        pm.response.to.have.status(200);\r",
                                            "    });\r",
                                            "\r",
                                            "}\r",
                                            "setTimeout(function(){}, [100]);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/publish/{{publish_id}}/status",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "publish",
                                        "{{publish_id}}",
                                        "status"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.20.8 Get package 2 versions",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"Packages has versions\", function () {\r",
                                            "    pm.expect(data.versions.length).to.greaterThan(0);\r",
                                            "});\r",
                                            "\r",
                                            "pm.test(\"Version has label\", function () {\r",
                                            "    pm.expect(data.versions[0].versionLabels).to.include('copy_test');\r",
                                            "});\r",
                                            "\r",
                                            "pm.environment.set(\"version_2\", data.versions[0].version);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_2}}/versions",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_2}}",
                                        "versions"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.20.9 Copy package 2 version 1",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 202\", function () {\r",
                                            "    pm.response.to.have.status(202);\r",
                                            "});\r",
                                            "\r",
                                            "setTimeout(() => { },10000);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_2}}/versions/{{version_2}}/copy",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_2}}",
                                        "versions",
                                        "{{version_2}}",
                                        "copy"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\r\n    \"targetPackageId\": \"{{package_2}}\",\r\n    \"targetVersion\" :\"20.2\",\r\n    \"targetStatus\": \"draft\",\r\n    \"targetPreviousVersion\" :\"{{version_1}}\",\r\n    \"targetPreviousVersionPackageId\": \"{{package_1}}\"\r\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.20.10 Get package 2 versions",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"Packages has versions\", function () {\r",
                                            "    pm.expect(data.versions.length).to.greaterThan(0);\r",
                                            "});\r",
                                            "\r",
                                            "pm.test(\"previousVersion = version from package 1\", function () {\r",
                                            "    pm.expect(data.versions[0].previousVersion).to.eql(pm.variables.replaceIn(\"{{version_1_1}}\"));\r",
                                            "});\r",
                                            "\r",
                                            "pm.test(\"previousVersionPackageId = package 1\", function () {\r",
                                            "    pm.expect(data.versions[0].previousVersionPackageId).to.eql(pm.variables.replaceIn(\"{{package_1}}\"));\r",
                                            "});\r",
                                            "\r",
                                            "pm.environment.set(\"version_2\", data.versions[0].version);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_2}}/versions",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_2}}",
                                        "versions"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.20.11 Get package 2 version 2",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"revisionsCount = 2\", function () {\r",
                                            "    pm.expect(data.revisionsCount).to.eql(2);\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_2}}/versions/{{version_2}}",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_2}}",
                                        "versions",
                                        "{{version_2}}"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.20.12 Copy package 2 version 1 with wrong release name",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 400\", function () {\r",
                                            "    pm.response.to.have.status(400);\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_2}}/versions/{{version_2}}/copy",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_2}}",
                                        "versions",
                                        "{{version_2}}",
                                        "copy"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\r\n    \"targetPackageId\": \"{{package_2}}\",\r\n    \"targetVersion\" :\"20.2\",\r\n    \"targetStatus\": \"release\",\r\n    \"targetPreviousVersion\" :\"{{version_1}}\",\r\n    \"targetPreviousVersionPackageId\": \"{{package_1}}\"\r\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.20.13 Copy package 2 version 1 without necessary paramter",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 400\", function () {\r",
                                            "    pm.response.to.have.status(400);\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_2}}/versions/{{version_2}}/copy",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_2}}",
                                        "versions",
                                        "{{version_2}}",
                                        "copy"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\r\n    \"targetPackageId\": \"{{package_2}}\",\r\n    \"targetVersion\" :\"20.2\"\r\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.20.14 Copy non-existing version",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 404\", function () {\r",
                                            "    pm.response.to.have.status(404);\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_2}}/versions/nothing555/copy",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_2}}",
                                        "versions",
                                        "nothing555",
                                        "copy"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\r\n    \"targetPackageId\": \"{{package_2}}\",\r\n    \"targetVersion\" :\"20.2\",\r\n    \"targetStatus\": \"draft\",\r\n    \"targetPreviousVersion\" :\"{{version_1}}\",\r\n    \"targetPreviousVersionPackageId\": \"{{package_1}}\"\r\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.20.15 Copy package version to non-existing package",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 404\", function () {\r",
                                            "    pm.response.to.have.status(404);\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_2}}/versions/{{version_2}}/copy",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_2}}",
                                        "versions",
                                        "{{version_2}}",
                                        "copy"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\r\n    \"targetPackageId\": \"nothing1233321\",\r\n    \"targetVersion\" :\"20.2\",\r\n    \"targetStatus\": \"draft\",\r\n    \"targetPreviousVersion\" :\"{{version_1}}\",\r\n    \"targetPreviousVersionPackageId\": \"{{package_1}}\"\r\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.20.16 Add static dashboard 1",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 201\", function () {\r",
                                            "    pm.response.to.have.status(201);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"dashboard_1\", data.packageId)"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\r\n    \"id\": \"QS-STATIC-TEST-2.DASH5-1\",\r\n    \"Alias\" :\"DASH5-1\",\r\n    \"name\": \"Test static dashboard 1\",\r\n    \"parentId\": \"QS-STATIC-TEST-2\",\r\n    \"kind\":\"dashboard\",\r\n    \"description\": \"Dashboard to be built\",\r\n    \"serviceName\": \"\",\r\n    \"imageUrl\": \"\"\r\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.20.17 Dashboard version publish",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 202\", function () {\r",
                                            "    pm.response.to.have.status(202);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"publish_id\", data.publishId)\r",
                                            "\r",
                                            "setTimeout(() => { },20000);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/publish",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{dashboard_1}}",
                                        "publish"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Transfer-Encoding",
                                        "value": "base64",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"clientBuild\"\r\n\r\nfalse\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"builderId\"\r\n\r\n5680525d-7c7b-47be-8ede-d502626a79dc\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"config\"\r\n\r\n{\r\n    \"version\": \"20.2\",\r\n    \"status\": \"draft\",\r\n    \"versionFolder\": \"qwerty\",\r\n    \"refs\": [{\r\n            \"refId\": \"QS-STATIC-TEST-2.PKG5-2\",\r\n            \"version\": \"20.2\"\r\n        }\r\n    ],\r\n    \"files\": []\r\n}\r\n----------------------------127308995100818139707097--",
                                    "options": {
                                        "raw": {
                                            "language": "text"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.20.17-1 Get publish status",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "var retry = parseInt(pm.environment.get(\"com_retry_counter\") || 0);\r",
                                            "var delay = parseInt(pm.environment.get(\"com_retry_delay\") || 0);\r",
                                            "\r",
                                            "var respBody = pm.response.json();\r",
                                            "\r",
                                            "if ((respBody.status != \"complete\") && retry < 15) {\r",
                                            "    retry++;\r",
                                            "    delay = 5000 + delay;\r",
                                            "\r",
                                            "\r",
                                            "pm.test(\"Status is ok, response is json\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "    pm.response.to.be.ok;\r",
                                            "});\r",
                                            "\r",
                                            "var respBody = pm.response.json();\r",
                                            "\r",
                                            "    setTimeout(function () { }, delay);\r",
                                            "    postman.setNextRequest(request.name);\r",
                                            "    pm.environment.set(\"com_retry_counter\", retry);\r",
                                            "    pm.environment.set(\"com_retry_delay\", delay);\r",
                                            "}\r",
                                            "else {\r",
                                            "    pm.environment.set(\"com_retry_counter\", null);\r",
                                            "    pm.environment.set(\"com_retry_delay\", null);\r",
                                            "\r",
                                            "    pm.test(\"Status code is 200\", function () {\r",
                                            "        pm.response.to.have.status(200);\r",
                                            "    });\r",
                                            "\r",
                                            "}\r",
                                            "setTimeout(function(){}, [100]);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/publish/{{publish_id}}/status",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{dashboard_1}}",
                                        "publish",
                                        "{{publish_id}}",
                                        "status"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.20.18 Get dashboard 1 versions",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"Dashboard has versions\", function () {\r",
                                            "    pm.expect(data.versions.length).to.greaterThan(0);\r",
                                            "});\r",
                                            "\r",
                                            "pm.environment.set(\"dash_version_1\", data.versions[0].version);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/versions",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{dashboard_1}}",
                                        "versions"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.20.19 Check dashboard version operations",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"Dashboard version has 3 operations\", function () {\r",
                                            "    pm.expect(data.operations.length).to.eql(3);\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/versions/{{dash_version_1}}/rest/operations",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{dashboard_1}}",
                                        "versions",
                                        "{{dash_version_1}}",
                                        "rest",
                                        "operations"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.20.20 Add static dashboard 2",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 201\", function () {\r",
                                            "    pm.response.to.have.status(201);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"dashboard_2\", data.packageId)"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\r\n    \"id\": \"QS-STATIC-TEST-2.DASH5-2\",\r\n    \"Alias\" :\"DASH5-2\",\r\n    \"name\": \"Test static dashboard 2\",\r\n    \"parentId\": \"QS-STATIC-TEST-2\",\r\n    \"kind\":\"dashboard\",\r\n    \"description\": \"Dashboard to be built\",\r\n    \"serviceName\": \"\",\r\n    \"imageUrl\": \"\"\r\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.20.21 Copy dashboard 1 version 1",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 202\", function () {\r",
                                            "    pm.response.to.have.status(202);\r",
                                            "});\r",
                                            "\r",
                                            "setTimeout(() => { },10000);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/versions/{{dash_version_1}}/copy",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{dashboard_1}}",
                                        "versions",
                                        "{{dash_version_1}}",
                                        "copy"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\r\n    \"targetPackageId\": \"{{dashboard_2}}\",\r\n    \"targetVersion\" :\"20.2\",\r\n    \"targetStatus\": \"draft\",\r\n     \"targetVersionLabels\": [\r\n         \"copy_test\"\r\n        ]\r\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.20.22 Get dashboard 2 versions",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"Dashboard has version\", function () {\r",
                                            "    pm.expect(data.versions.length).to.eql(1);\r",
                                            "});\r",
                                            "\r",
                                            "pm.environment.set(\"dash_2_version_1\", data.versions[0].version);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_2}}/versions",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{dashboard_2}}",
                                        "versions"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.20.23 Check dashboard 2 version operations",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"Dashboard version has 3 operations\", function () {\r",
                                            "    pm.expect(data.operations.length).to.eql(3);\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_2}}/versions/{{dash_2_version_1}}/rest/operations",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{dashboard_2}}",
                                        "versions",
                                        "{{dash_2_version_1}}",
                                        "rest",
                                        "operations"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        }
                    ]
                },
                {
                    "name": "8.21 APIHUB-9397 [BE] Export single specification for the operations group",
                    "item": [
                        {
                            "name": "8.21.1 Create operation group with template",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 201\", function () {\r",
                                            "    pm.response.to.have.status(201);\r",
                                            "});\r",
                                            "\r",
                                            "pm.environment.set(\"operation_group_1\", 'testgroup');\r",
                                            "\r",
                                            "setTimeout(() => { },5000);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v3/packages/{{package_2}}/versions/{{version_2}}/rest/groups",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v3",
                                        "packages",
                                        "{{package_2}}",
                                        "versions",
                                        "{{version_2}}",
                                        "rest",
                                        "groups"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Transfer-Encoding",
                                        "value": "base64",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"groupName\"\r\n\r\ntestgroup\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"description\"\r\n\r\ntest_description\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"template\"; filename=\"Petstore_v1.zip\"\r\nContent-Type: application/json;base64\r\n\r\newogICJvcGVuYXBpIjogIjMuMC4wIiwKICAiaW5mbyI6IHsKICAgICJkZXNjcmlwdGlvbiI6ICJUaGlzIGlzIGEgc2FtcGxlIFBldHN0b3JlIHNlcnZlci4gWW91IGNhbiBmaW5kXG5vdXQgbW9yZSBhYm91dCBTd2FnZ2VyIGF0XG5baHR0cDovL3N3YWdnZXIuaW9dKGh0dHA6Ly9zd2FnZ2VyLmlvKSBvciBvblxuW2lyYy5mcmVlbm9kZS5uZXQsICNzd2FnZ2VyXShodHRwOi8vc3dhZ2dlci5pby9pcmMvKS5cbiIsCiAgICAidmVyc2lvbiI6ICIxLjAuMCIsCiAgICAidGl0bGUiOiAiU3dhZ2dlciBQZXRzdG9yZSIsCiAgICAidGVybXNPZlNlcnZpY2UiOiAiaHR0cDovL3N3YWdnZXIuaW8vdGVybXMvIiwKICAgICJjb250YWN0IjogewogICAgICAiZW1haWwiOiAiYXBpdGVhbUBzd2FnZ2VyLmlvIgogICAgfSwKICAgICJsaWNlbnNlIjogewogICAgICAibmFtZSI6ICJBcGFjaGUgMi4wIiwKICAgICAgInVybCI6ICJodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAuaHRtbCIKICAgIH0KICB9LAogICJzZXJ2ZXJzIjogWwogICAgewogICAgICAiZGVzY3JpcHRpb24iOiAiU3dhZ2dlckh1YiBBUEkgQXV0byBNb2NraW5nIiwKICAgICAgInVybCI6ICJodHRwczovL3ZpcnRzZXJ2ZXIuc3dhZ2dlcmh1Yi5jb20vTEFDT05JQ0NBQ1RVUzBQLzIxMy8xLjAuMCIKICAgIH0sCiAgICB7CiAgICAgICJ1cmwiOiAiaHR0cHM6Ly9wZXRzdG9yZS5zd2FnZ2VyLmlvL3YyIgogICAgfQogIF0KfQ==\r\n----------------------------127308995100818139707097--",
                                    "options": {
                                        "raw": {
                                            "language": "text"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.21.2 Check operation group template",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "pm.test(\"Content-type is application/octet-stream\", function () {\r",
                                            "    pm.response.to.have.header('Content-Type');\r",
                                            "    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/octet-stream');\r",
                                            "});\r",
                                            "\r",
                                            "pm.test(\"Content-Disposition is attachment\", function () {\r",
                                            "    pm.response.to.have.header('Content-Disposition');\r",
                                            "    pm.expect(pm.response.headers.get('Content-Disposition')).to.include('attachment; filename=');\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v1/packages/{{package_2}}/versions/{{version_2}}/rest/groups/{{operation_group_1}}/template",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v1",
                                        "packages",
                                        "{{package_2}}",
                                        "versions",
                                        "{{version_2}}",
                                        "rest",
                                        "groups",
                                        "{{operation_group_1}}",
                                        "template"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.21.3 Update operation group with template",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 204\", function () {\r",
                                            "    pm.response.to.have.status(204);\r",
                                            "});\r",
                                            "\r",
                                            "pm.environment.set(\"operation_group_1\", 'testgroup_updated');\r",
                                            "\r",
                                            "setTimeout(() => { },5000);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v3/packages/{{package_2}}/versions/{{version_2}}/rest/groups/{{operation_group_1}}",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v3",
                                        "packages",
                                        "{{package_2}}",
                                        "versions",
                                        "{{version_2}}",
                                        "rest",
                                        "groups",
                                        "{{operation_group_1}}"
                                    ]
                                },
                                "method": "PATCH",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Transfer-Encoding",
                                        "value": "base64",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"groupName\"\r\n\r\ntestgroup_updated\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"description\"\r\n\r\ntest_description_updated\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"template\"; filename=\"Petstore_v1.zip\"\r\nContent-Type: application/json;base64\r\n\r\newogICJvcGVuYXBpIjogIjMuMC4wIiwKICAiaW5mbyI6IHsKICAgICJkZXNjcmlwdGlvbiI6ICJUaGlzIGlzIGEgc2FtcGxlIFBldHN0b3JlIHNlcnZlci4gWW91IGNhbiBmaW5kXG5vdXQgbW9yZSBhYm91dCBTd2FnZ2VyIGF0XG5baHR0cDovL3N3YWdnZXIuaW9dKGh0dHA6Ly9zd2FnZ2VyLmlvKSBvciBvblxuW2lyYy5mcmVlbm9kZS5uZXQsICNzd2FnZ2VyXShodHRwOi8vc3dhZ2dlci5pby9pcmMvKS5cbiIsCiAgICAidmVyc2lvbiI6ICIxLjAuMCIsCiAgICAidGl0bGUiOiAiU3dhZ2dlciBQZXRzdG9yZSIsCiAgICAidGVybXNPZlNlcnZpY2UiOiAiaHR0cDovL3N3YWdnZXIuaW8vdGVybXMvIiwKICAgICJjb250YWN0IjogewogICAgICAiZW1haWwiOiAiYXBpdGVhbUBzd2FnZ2VyLmlvIgogICAgfSwKICAgICJsaWNlbnNlIjogewogICAgICAibmFtZSI6ICJBcGFjaGUgMi4wIiwKICAgICAgInVybCI6ICJodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAuaHRtbCIKICAgIH0KICB9LAogICJzZXJ2ZXJzIjogWwogICAgewogICAgICAiZGVzY3JpcHRpb24iOiAiU3dhZ2dlckh1YiBBUEkgQXV0byBNb2NraW5nIiwKICAgICAgInVybCI6ICJodHRwczovL3ZpcnRzZXJ2ZXIuc3dhZ2dlcmh1Yi5jb20vTEFDT05JQ0NBQ1RVUzBQLzIxMy8xLjAuMCIKICAgIH0sCiAgICB7CiAgICAgICJ1cmwiOiAiaHR0cHM6Ly9wZXRzdG9yZS5zd2FnZ2VyLmlvL3YyIgogICAgfQogIF0KfQ==\r\n----------------------------127308995100818139707097--",
                                    "options": {
                                        "raw": {
                                            "language": "text"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.21.4 Check operation group template",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "pm.test(\"Content-type is application/octet-stream\", function () {\r",
                                            "    pm.response.to.have.header('Content-Type');\r",
                                            "    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/octet-stream');\r",
                                            "});\r",
                                            "\r",
                                            "pm.test(\"Content-Disposition is attachment\", function () {\r",
                                            "    pm.response.to.have.header('Content-Disposition');\r",
                                            "    pm.expect(pm.response.headers.get('Content-Disposition')).to.include('attachment; filename=');\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v1/packages/{{package_2}}/versions/{{version_2}}/rest/groups/{{operation_group_1}}/template",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v1",
                                        "packages",
                                        "{{package_2}}",
                                        "versions",
                                        "{{version_2}}",
                                        "rest",
                                        "groups",
                                        "{{operation_group_1}}",
                                        "template"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.21.5 Get operations list",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.environment.set(\"operationId\", data.operations[0].operationId);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_2}}/versions/{{version_2}}/rest/operations",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_2}}",
                                        "versions",
                                        "{{version_2}}",
                                        "rest",
                                        "operations"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.21.6 Update operation group with new operation ",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 204\", function () {\r",
                                            "    pm.response.to.have.status(204);\r",
                                            "});\r",
                                            "\r",
                                            "setTimeout(() => { },5000);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v3/packages/{{package_2}}/versions/{{version_2}}/rest/groups/{{operation_group_1}}",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v3",
                                        "packages",
                                        "{{package_2}}",
                                        "versions",
                                        "{{version_2}}",
                                        "rest",
                                        "groups",
                                        "{{operation_group_1}}"
                                    ]
                                },
                                "method": "PATCH",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Transfer-Encoding",
                                        "value": "base64",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"groupName\"\r\n\r\ntestgroup_updated\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"description\"\r\n\r\ntest_description_updated\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"template\"; filename=\"Petstore_v1.zip\"\r\nContent-Type: application/json;base64\r\n\r\newogICJvcGVuYXBpIjogIjMuMC4wIiwKICAiaW5mbyI6IHsKICAgICJkZXNjcmlwdGlvbiI6ICJUaGlzIGlzIGEgc2FtcGxlIFBldHN0b3JlIHNlcnZlci4gWW91IGNhbiBmaW5kXG5vdXQgbW9yZSBhYm91dCBTd2FnZ2VyIGF0XG5baHR0cDovL3N3YWdnZXIuaW9dKGh0dHA6Ly9zd2FnZ2VyLmlvKSBvciBvblxuW2lyYy5mcmVlbm9kZS5uZXQsICNzd2FnZ2VyXShodHRwOi8vc3dhZ2dlci5pby9pcmMvKS5cbiIsCiAgICAidmVyc2lvbiI6ICIxLjAuMCIsCiAgICAidGl0bGUiOiAiU3dhZ2dlciBQZXRzdG9yZSIsCiAgICAidGVybXNPZlNlcnZpY2UiOiAiaHR0cDovL3N3YWdnZXIuaW8vdGVybXMvIiwKICAgICJjb250YWN0IjogewogICAgICAiZW1haWwiOiAiYXBpdGVhbUBzd2FnZ2VyLmlvIgogICAgfSwKICAgICJsaWNlbnNlIjogewogICAgICAibmFtZSI6ICJBcGFjaGUgMi4wIiwKICAgICAgInVybCI6ICJodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAuaHRtbCIKICAgIH0KICB9LAogICJzZXJ2ZXJzIjogWwogICAgewogICAgICAiZGVzY3JpcHRpb24iOiAiU3dhZ2dlckh1YiBBUEkgQXV0byBNb2NraW5nIiwKICAgICAgInVybCI6ICJodHRwczovL3ZpcnRzZXJ2ZXIuc3dhZ2dlcmh1Yi5jb20vTEFDT05JQ0NBQ1RVUzBQLzIxMy8xLjAuMCIKICAgIH0sCiAgICB7CiAgICAgICJ1cmwiOiAiaHR0cHM6Ly9wZXRzdG9yZS5zd2FnZ2VyLmlvL3YyIgogICAgfQogIF0KfQ==\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"operations\"\r\n\r\n[{        \"operationId\": \"{{operationId}}\"    }]\r\n----------------------------127308995100818139707097--",
                                    "options": {
                                        "raw": {
                                            "language": "text"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.21.7 Check operation group template",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "pm.test(\"Content-type is application/octet-stream\", function () {\r",
                                            "    pm.response.to.have.header('Content-Type');\r",
                                            "    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/octet-stream');\r",
                                            "});\r",
                                            "\r",
                                            "pm.test(\"Content-Disposition is attachment\", function () {\r",
                                            "    pm.response.to.have.header('Content-Disposition');\r",
                                            "    pm.expect(pm.response.headers.get('Content-Disposition')).to.include('attachment; filename=');\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v1/packages/{{package_2}}/versions/{{version_2}}/rest/groups/{{operation_group_1}}/template",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v1",
                                        "packages",
                                        "{{package_2}}",
                                        "versions",
                                        "{{version_2}}",
                                        "rest",
                                        "groups",
                                        "{{operation_group_1}}",
                                        "template"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.21.8 Update operation group without template",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 204\", function () {\r",
                                            "    pm.response.to.have.status(204);\r",
                                            "});\r",
                                            "\r",
                                            "pm.environment.set(\"operation_group_1\", 'testgroup_update');"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v3/packages/{{package_2}}/versions/{{version_2}}/rest/groups/{{operation_group_1}}",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v3",
                                        "packages",
                                        "{{package_2}}",
                                        "versions",
                                        "{{version_2}}",
                                        "rest",
                                        "groups",
                                        "{{operation_group_1}}"
                                    ]
                                },
                                "method": "PATCH",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "key": "groupName",
                                            "type": "default",
                                            "value": "testgroup_update"
                                        },
                                        {
                                            "key": "description",
                                            "type": "default",
                                            "value": "update"
                                        },
                                        {
                                            "key": "template",
                                            "type": "file"
                                        }
                                    ]
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.21.9 Run async documents transformation",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 201\", function () {\r",
                                            "    pm.response.to.have.status(201);\r",
                                            "});\r",
                                            "\r",
                                            "setTimeout(() => { },5000);\r",
                                            "\r",
                                            "pm.test(\"Verify buildId exists and is not null\", function () {\r",
                                            "    let jsonData = pm.response.json();\r",
                                            "    \r",
                                            "    pm.expect(jsonData).to.have.property(\"buildId\");\r",
                                            "    pm.expect(jsonData.buildId).to.not.be.null;\r",
                                            "    pm.expect(jsonData.buildId).to.be.a(\"string\").and.to.have.length.above(0);\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v3/packages/{{package_2}}/versions/{{version_2}}/rest/build/groups/{{operation_group_1}}/buildType/mergedSpecification?format=yaml",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v3",
                                        "packages",
                                        "{{package_2}}",
                                        "versions",
                                        "{{version_2}}",
                                        "rest",
                                        "build",
                                        "groups",
                                        "{{operation_group_1}}",
                                        "buildType",
                                        "mergedSpecification"
                                    ],
                                    "query": [
                                        {
                                            "key": "format",
                                            "value": "yaml"
                                        }
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.21.10 Export merged specification",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "pm.test(\"Content is yaml\", function () {\r",
                                            "pm.expect(pm.response.headers.get(\"Content-Type\")).to.equal(\"application/yaml\");\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v3/packages/{{package_2}}/versions/{{version_2}}/rest/export/groups/{{operation_group_1}}/buildType/mergedSpecification?format=yaml",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v3",
                                        "packages",
                                        "{{package_2}}",
                                        "versions",
                                        "{{version_2}}",
                                        "rest",
                                        "export",
                                        "groups",
                                        "{{operation_group_1}}",
                                        "buildType",
                                        "mergedSpecification"
                                    ],
                                    "query": [
                                        {
                                            "key": "format",
                                            "value": "yaml"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        }
                    ]
                },
                {
                    "name": "8.22 APIHUB-9069 [BE] return info about action made via api key",
                    "item": [
                        {
                            "name": "8.22.1 Create admin API Key",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"Api key is not empty\", function () {\r",
                                            "    pm.expect(data.apiKey).to.not.eql(undefined)\r",
                                            "    pm.expect(data.apiKey).to.not.eql(\"\")\r",
                                            "});\r",
                                            "\r",
                                            "pm.environment.set(\"apihub_api_key\", data.apiKey)\r",
                                            "pm.environment.set(\"apihub_api_key_id\", data.id)\r",
                                            "pm.environment.set(\"apihub_api_key_name\", data.name)"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v4/packages/*/apiKeys",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v4",
                                        "packages",
                                        "*",
                                        "apiKeys"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\r\n    \"name\":\"Admin_Smoke\"\r\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.22.2 Create package via api-key",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 201\", function () {\r",
                                            "    pm.response.to.have.status(201);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"package_3\", data.packageId)"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{apihub_api_key}}",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\r\n    \"id\": \"QS-STATIC-TEST-2.PKG5-7\",\r\n    \"Alias\" :\"PKG5-7\",\r\n    \"name\": \"Test static package 7\",\r\n    \"parentId\": \"QS-STATIC-TEST-2\",\r\n    \"kind\":\"package\",\r\n    \"description\": \"Package to be built\",\r\n    \"serviceName\": \"\",\r\n    \"imageUrl\": \"\",\r\n    \"restGroupingPrefix\": \"/api/{group}/\"\r\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.22.3 Check 'create_package' event for new package",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "\r",
                                            "pm.test(\"'create_package' event displayed\", function(){\r",
                                            "    pm.expect(data.events[0].eventType).to.eql('create_package')\r",
                                            "});\r",
                                            "\r",
                                            "pm.test(\"Api-key is correct\", function () {\r",
                                            "    pm.expect(data.events[0].principal.name).to.eql(pm.variables.replaceIn(\"{{apihub_api_key_name}}\"));\r",
                                            "    pm.expect(data.events[0].principal.id).to.eql(pm.variables.replaceIn(\"{{apihub_api_key_id}}\"));\r",
                                            "    pm.expect(data.events[0].principal.type).to.eql('apiKey');\r",
                                            "});\r",
                                            "\r",
                                            "\r",
                                            "pm.test(\"'userId' is correct\", function () {\r",
                                            "    pm.expect(data.events[0].userId).to.eql(pm.variables.replaceIn('{{apihub_api_key_id}}'));\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v3/packages/{{package_3}}/activity",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v3",
                                        "packages",
                                        "{{package_3}}",
                                        "activity"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.22.4 Package version publish via api-key",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 202\", function () {\r",
                                            "    pm.response.to.have.status(202);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"publish_id\", data.publishId)\r",
                                            "\r",
                                            "setTimeout(() => { },5000);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_3}}/publish",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_3}}",
                                        "publish"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{apihub_api_key}}",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Transfer-Encoding",
                                        "value": "base64",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"clientBuild\"\r\n\r\nfalse\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"config\"\r\n\r\n{\r\n    \"version\": \"1.0\",\r\n    \"status\": \"draft\",\r\n    \"versionFolder\": \"qwerty\",\r\n    \"refs\": [],\r\n    \"files\": [{\r\n            \"fileId\": \"petstore.yaml\",\r\n            \"publish\": true\r\n        }\r\n    ]\r\n}\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"sources\"; filename=\"petstore_yml.zip\"\r\nContent-Type: application/zip;base64\r\n\r\nUEsDBBQAAAAIABFkaFUQiX2ZpQIAAIkKAAANAAAAcGV0c3RvcmUueWFtbNVWwW7bMAy9F+g/EN2AbofGaTvs4Ns2FFiAbSiw/oBm04k621IpOk0w7N9HyYrtZEmadgOK6hDEIkU+Pj3SNhZrZXUKJ5ej8Wh8cnyk68Kkx0cAcySnTZ3CuVjO/Q5rLjGF7/dqOkWCa2THhtCbSp1h7dAflFWrSvy+Tm6OjxySDxQMZ9BQmcKM2aZJYuPxkWvjjbRJ5pLHKp61/sElhpwi+39huaaqFC1T+KIdgypL8I4rq5REigX5JE+hFI/rgZHVNESM62ztpFUkwDnA7V1CNT5SpVm2u6WFmrsGaTnczNFlpC0H4j6be6hUvQTNWDlgA4TcUA2KwdQofFYIbyq1gPPx+O0gjPjdNZpQCihU6XBoctkMK9UBjGUtLaaCiFGIXDcVhirFwXh5IaYY31kj9zUs9PRiPD5NdxbzQeiZYg6KSC3BFCvmujVDla+o69firMbF6up2hi51/dPzwzME7x9ySZIOaMz0AA09FY5J19OhNTPCTr2JRFkr0g1ySW6dByPr4FyvCQtpnVdJZiqBKeFd0jq7xKtO2qkvuFBNybv5baRuixkLxUhk6AnY/wvuK588ArfGbem6T4SKEZRXwNamy4LDwW33BDF+a8qyO/eiSQ4zLvklv5P8975ZN5G57JtZeHdSgi50tvMC3MzcC/0fl5P8oBvYO/gCtM3B54f09oHF1OBO/m+kv3Uuje073UeOQ5E0zg+dcm1r/4N4rqIEurMehIK5KrXfk5nu+LmEIbf2kodGbwoBojkGu46y7q/S/LgV8O1er6E1Dep8U5GDZ6/qTsPkW4D1mhK0D3bAa3Lwknz/rjO0DdA//q3Arrce8PKzcL329j0at8IHgnc4hOteIoH1x1OamXyNxAqdk9ftPiLDmUdT2X9vQEyym80/UEsBAj8AFAAAAAgAEWRoVRCJfZmlAgAAiQoAAA0AJAAAAAAAAAAgAAAAAAAAAHBldHN0b3JlLnlhbWwKACAAAAAAAAEAGAAKKSMHVfPYARJQIwdV89gBOjCy/c3y2AFQSwUGAAAAAAEAAQBfAAAA0AIAAAAA\r\n----------------------------127308995100818139707097--",
                                    "options": {
                                        "raw": {
                                            "language": "text"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.22.5 Get publish status",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "var retry = parseInt(pm.environment.get(\"com_retry_counter\") || 0);\r",
                                            "var delay = parseInt(pm.environment.get(\"com_retry_delay\") || 0);\r",
                                            "\r",
                                            "var respBody = pm.response.json();\r",
                                            "\r",
                                            "if ((respBody.status != \"complete\") && retry < 15) {\r",
                                            "    retry++;\r",
                                            "    delay = 5000 + delay;\r",
                                            "\r",
                                            "\r",
                                            "pm.test(\"Status is ok, response is json\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "    pm.response.to.be.ok;\r",
                                            "});\r",
                                            "\r",
                                            "var respBody = pm.response.json();\r",
                                            "\r",
                                            "    setTimeout(function () { }, delay);\r",
                                            "    postman.setNextRequest(request.name);\r",
                                            "    pm.environment.set(\"com_retry_counter\", retry);\r",
                                            "    pm.environment.set(\"com_retry_delay\", delay);\r",
                                            "}\r",
                                            "else {\r",
                                            "    pm.environment.set(\"com_retry_counter\", null);\r",
                                            "    pm.environment.set(\"com_retry_delay\", null);\r",
                                            "\r",
                                            "    pm.test(\"Status code is 200\", function () {\r",
                                            "        pm.response.to.have.status(200);\r",
                                            "    });\r",
                                            "\r",
                                            "}\r",
                                            "setTimeout(function(){}, [100]);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_3}}/publish/{{publish_id}}/status",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_3}}",
                                        "publish",
                                        "{{publish_id}}",
                                        "status"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.22.6 Check 'publish_new_version' event for new package version",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "\r",
                                            "pm.test(\"'publish_new_version' event displayed\", function(){\r",
                                            "    pm.expect(data.events[0].eventType).to.eql('publish_new_version')\r",
                                            "});\r",
                                            "\r",
                                            "pm.test(\"Api-key is correct\", function () {\r",
                                            "    pm.expect(data.events[0].principal.name).to.eql(pm.variables.replaceIn(\"{{apihub_api_key_name}}\"));\r",
                                            "    pm.expect(data.events[0].principal.id).to.eql(pm.variables.replaceIn(\"{{apihub_api_key_id}}\"));\r",
                                            "    pm.expect(data.events[0].principal.type).to.eql('apiKey');\r",
                                            "});\r",
                                            "\r",
                                            "\r",
                                            "pm.test(\"'userId' is correct\", function () {\r",
                                            "    pm.expect(data.events[0].userId).to.eql(pm.variables.replaceIn('{{apihub_api_key_id}}'));\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v3/packages/{{package_3}}/activity",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v3",
                                        "packages",
                                        "{{package_3}}",
                                        "activity"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.22.7 Package version publish via api-key",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 202\", function () {\r",
                                            "    pm.response.to.have.status(202);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"publish_id\", data.publishId)\r",
                                            "\r",
                                            "setTimeout(() => { },5000);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_3}}/publish",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_3}}",
                                        "publish"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{apihub_api_key}}",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Transfer-Encoding",
                                        "value": "base64",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"clientBuild\"\r\n\r\nfalse\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"config\"\r\n\r\n{\r\n    \"version\": \"1.0\",\r\n    \"status\": \"draft\",\r\n    \"versionFolder\": \"qwerty\",\r\n    \"refs\": [],\r\n    \"files\": [{\r\n            \"fileId\": \"petstore.yaml\",\r\n            \"publish\": true\r\n        }\r\n    ]\r\n}\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"sources\"; filename=\"petstore_yml.zip\"\r\nContent-Type: application/zip;base64\r\n\r\nUEsDBBQAAAAIABFkaFUQiX2ZpQIAAIkKAAANAAAAcGV0c3RvcmUueWFtbNVWwW7bMAy9F+g/EN2AbofGaTvs4Ns2FFiAbSiw/oBm04k621IpOk0w7N9HyYrtZEmadgOK6hDEIkU+Pj3SNhZrZXUKJ5ej8Wh8cnyk68Kkx0cAcySnTZ3CuVjO/Q5rLjGF7/dqOkWCa2THhtCbSp1h7dAflFWrSvy+Tm6OjxySDxQMZ9BQmcKM2aZJYuPxkWvjjbRJ5pLHKp61/sElhpwi+39huaaqFC1T+KIdgypL8I4rq5REigX5JE+hFI/rgZHVNESM62ztpFUkwDnA7V1CNT5SpVm2u6WFmrsGaTnczNFlpC0H4j6be6hUvQTNWDlgA4TcUA2KwdQofFYIbyq1gPPx+O0gjPjdNZpQCihU6XBoctkMK9UBjGUtLaaCiFGIXDcVhirFwXh5IaYY31kj9zUs9PRiPD5NdxbzQeiZYg6KSC3BFCvmujVDla+o69firMbF6up2hi51/dPzwzME7x9ySZIOaMz0AA09FY5J19OhNTPCTr2JRFkr0g1ySW6dByPr4FyvCQtpnVdJZiqBKeFd0jq7xKtO2qkvuFBNybv5baRuixkLxUhk6AnY/wvuK588ArfGbem6T4SKEZRXwNamy4LDwW33BDF+a8qyO/eiSQ4zLvklv5P8975ZN5G57JtZeHdSgi50tvMC3MzcC/0fl5P8oBvYO/gCtM3B54f09oHF1OBO/m+kv3Uuje073UeOQ5E0zg+dcm1r/4N4rqIEurMehIK5KrXfk5nu+LmEIbf2kodGbwoBojkGu46y7q/S/LgV8O1er6E1Dep8U5GDZ6/qTsPkW4D1mhK0D3bAa3Lwknz/rjO0DdA//q3Arrce8PKzcL329j0at8IHgnc4hOteIoH1x1OamXyNxAqdk9ftPiLDmUdT2X9vQEyym80/UEsBAj8AFAAAAAgAEWRoVRCJfZmlAgAAiQoAAA0AJAAAAAAAAAAgAAAAAAAAAHBldHN0b3JlLnlhbWwKACAAAAAAAAEAGAAKKSMHVfPYARJQIwdV89gBOjCy/c3y2AFQSwUGAAAAAAEAAQBfAAAA0AIAAAAA\r\n----------------------------127308995100818139707097--",
                                    "options": {
                                        "raw": {
                                            "language": "text"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.22.8 Get publish status",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "var retry = parseInt(pm.environment.get(\"com_retry_counter\") || 0);\r",
                                            "var delay = parseInt(pm.environment.get(\"com_retry_delay\") || 0);\r",
                                            "\r",
                                            "var respBody = pm.response.json();\r",
                                            "\r",
                                            "if ((respBody.status != \"complete\") && retry < 15) {\r",
                                            "    retry++;\r",
                                            "    delay = 5000 + delay;\r",
                                            "\r",
                                            "\r",
                                            "pm.test(\"Status is ok, response is json\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "    pm.response.to.be.ok;\r",
                                            "});\r",
                                            "\r",
                                            "var respBody = pm.response.json();\r",
                                            "\r",
                                            "    setTimeout(function () { }, delay);\r",
                                            "    postman.setNextRequest(request.name);\r",
                                            "    pm.environment.set(\"com_retry_counter\", retry);\r",
                                            "    pm.environment.set(\"com_retry_delay\", delay);\r",
                                            "}\r",
                                            "else {\r",
                                            "    pm.environment.set(\"com_retry_counter\", null);\r",
                                            "    pm.environment.set(\"com_retry_delay\", null);\r",
                                            "\r",
                                            "    pm.test(\"Status code is 200\", function () {\r",
                                            "        pm.response.to.have.status(200);\r",
                                            "    });\r",
                                            "\r",
                                            "}\r",
                                            "setTimeout(function(){}, [100]);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_3}}/publish/{{publish_id}}/status",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_3}}",
                                        "publish",
                                        "{{publish_id}}",
                                        "status"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.22.9 Check 'publish_new_revision' event for new version reversion",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "\r",
                                            "pm.test(\"'publish_new_revision' event displayed\", function(){\r",
                                            "    pm.expect(data.events[0].eventType).to.eql('publish_new_revision')\r",
                                            "});\r",
                                            "\r",
                                            "pm.test(\"Api-key is correct\", function () {\r",
                                            "    pm.expect(data.events[0].principal.name).to.eql(pm.variables.replaceIn(\"{{apihub_api_key_name}}\"));\r",
                                            "    pm.expect(data.events[0].principal.id).to.eql(pm.variables.replaceIn(\"{{apihub_api_key_id}}\"));\r",
                                            "    pm.expect(data.events[0].principal.type).to.eql('apiKey');\r",
                                            "});\r",
                                            "\r",
                                            "\r",
                                            "pm.test(\"'userId' is correct\", function () {\r",
                                            "    pm.expect(data.events[0].userId).to.eql(pm.variables.replaceIn('{{apihub_api_key_id}}'));\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v3/packages/{{package_3}}/activity",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v3",
                                        "packages",
                                        "{{package_3}}",
                                        "activity"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.22.10 Update package",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "\r",
                                            "pm.test(\"Check new description\", function () {\r",
                                            "    pm.expect(data.description).to.eql('Test package new description');\r",
                                            "});\r",
                                            "\r",
                                            "setTimeout(() => { }, 300);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_3}}",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_3}}"
                                    ]
                                },
                                "method": "PATCH",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{apihub_api_key}}",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\r\n    \"description\": \"Test package new description\"\r\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.22.11 Check 'patch_package_meta' event for package",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "\r",
                                            "pm.test(\"'patch_package_meta' event displayed\", function(){\r",
                                            "    pm.expect(data.events[0].eventType).to.eql('patch_package_meta')\r",
                                            "});\r",
                                            "\r",
                                            "pm.test(\"Api-key is correct\", function () {\r",
                                            "    pm.expect(data.events[0].principal.name).to.eql(pm.variables.replaceIn(\"{{apihub_api_key_name}}\"));\r",
                                            "    pm.expect(data.events[0].principal.id).to.eql(pm.variables.replaceIn(\"{{apihub_api_key_id}}\"));\r",
                                            "    pm.expect(data.events[0].principal.type).to.eql('apiKey');\r",
                                            "});\r",
                                            "\r",
                                            "\r",
                                            "pm.test(\"'userId' is correct\", function () {\r",
                                            "    pm.expect(data.events[0].userId).to.eql(pm.variables.replaceIn('{{apihub_api_key_id}}'));\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v3/packages/{{package_3}}/activity",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v3",
                                        "packages",
                                        "{{package_3}}",
                                        "activity"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.22.12 Check events generated via api-key",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "\r",
                                            "pm.test(\"Actions made via api key displayed\", function(){\r",
                                            "    for (var i = 0; i<data.events.length; i++) {\r",
                                            "        if (data.events[i].packageId === pm.variables.replaceIn(\"{{package_3}}\")){\r",
                                            "            pm.expect(data.events[i].principal.id).to.include(pm.variables.replaceIn('{{apihub_api_key_id}}'));\r",
                                            "            pm.expect(data.events[i].principal.name).to.eql(pm.variables.replaceIn('{{apihub_api_key_name}}'));\r",
                                            "            pm.expect(data.events[i].principal.type).to.eql(\"apiKey\");\r",
                                            "            pm.expect(data.events[i].userId).to.eql(pm.variables.replaceIn('{{apihub_api_key_id}}'));\r",
                                            "        }\r",
                                            "    }\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v3/activity?onlyFavorite=false",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v3",
                                        "activity"
                                    ],
                                    "query": [
                                        {
                                            "key": "onlyFavorite",
                                            "value": "false"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.22.13 Delete admin API Key",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 204\", function () {\r",
                                            "    pm.response.to.have.status(204);\r",
                                            "});\r",
                                            ""
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/*/apiKeys/{{apihub_api_key_id}}",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "*",
                                        "apiKeys",
                                        "{{apihub_api_key_id}}"
                                    ]
                                },
                                "method": "DELETE",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.22.14 Get admin API Keys list",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "var ids = []\r",
                                            "for (var i = 0; i<data.apiKeys.length; i++) {\r",
                                            "    ids.push(data.apiKeys[i].id)\r",
                                            "}\r",
                                            "\r",
                                            "pm.test(\"Revoked ApiKey is not present\", function () {\r",
                                            "    pm.expect(ids).to.not.include.members([pm.variables.replaceIn('{{apihub_api_key_id}}')])\r",
                                            "});\r",
                                            ""
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v4/packages/*/apiKeys",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v4",
                                        "packages",
                                        "*",
                                        "apiKeys"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\r\n    \"name\":\"M2M\"\r\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {
                                "disableBodyPruning": true
                            }
                        }
                    ]
                },
                {
                    "name": "8.23 APIHUB-9794 [BE] API for activity history of manual groups",
                    "item": [
                        {
                            "name": "8.23.1 Get package versions",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"Packages has versions\", function () {\r",
                                            "    pm.expect(data.versions.length).to.greaterThan(0);\r",
                                            "});\r",
                                            "\r",
                                            "pm.environment.set(\"version_1\", data.versions[0].version);\r",
                                            "pm.environment.set(\"version_1_1\", data.versions[0].version.split(\"@\")[0]);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "versions"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.23.2 Create operation group",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 201\", function () {\r",
                                            "    pm.response.to.have.status(201);\r",
                                            "});\r",
                                            "\r",
                                            "pm.environment.set(\"operation_group_1\", 'test_group_1');",
                                            "\r",
                                            "setTimeout(() => { },2000);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v3/packages/{{package_1}}/versions/{{version_1}}/rest/groups",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v3",
                                        "packages",
                                        "{{package_1}}",
                                        "versions",
                                        "{{version_1}}",
                                        "rest",
                                        "groups"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "key": "groupName",
                                            "type": "default",
                                            "value": "test_group_1"
                                        },
                                        {
                                            "key": "description",
                                            "type": "default",
                                            "value": "Test group 1"
                                        }
                                    ]
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.23.3 Check 'create_manual_group' package event",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"'create_manual_group' event exists\", function () {\r",
                                            "    pm.expect(data.events[0].eventType).to.eql('create_manual_group');\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v4/packages/{{package_1}}/activity",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v4",
                                        "packages",
                                        "{{package_1}}",
                                        "activity"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.23.4 Check activities filtered by 'operations_group' type",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "\r",
                                            "pm.test(\"'create_manual_group' event exists for package\", function () {\r",
                                            "    pm.expect(data.events[0].packageId).to.eql(pm.variables.replaceIn('{{package_1}}'));\r",
                                            "    pm.expect(data.events[0].eventType).to.eql('create_manual_group');\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v4/activity?types=operations_group",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v4",
                                        "activity"
                                    ],
                                    "query": [
                                        {
                                            "key": "types",
                                            "value": "operations_group"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.23.5 Update parameters of operation group",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 204\", function () {\r",
                                            "    pm.response.to.have.status(204);\r",
                                            "});\r",
                                            "\r",
                                            "pm.environment.set(\"operation_group_1\", 'test_group_2');",
                                            "\r",
                                            "setTimeout(() => { },2000);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v3/packages/{{package_1}}/versions/{{version_1}}/rest/groups/{{operation_group_1}}",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v3",
                                        "packages",
                                        "{{package_1}}",
                                        "versions",
                                        "{{version_1}}",
                                        "rest",
                                        "groups",
                                        "{{operation_group_1}}"
                                    ]
                                },
                                "method": "PATCH",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "key": "groupName",
                                            "type": "default",
                                            "value": "test_group_2"
                                        },
                                        {
                                            "key": "description",
                                            "type": "default",
                                            "value": "Updated test group"
                                        }
                                    ]
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.23.6 Check 'update_operations_group_parameters' package event",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"'update_operations_group_parameters' event exists\", function () {\r",
                                            "    pm.expect(data.events[0].eventType).to.eql('update_operations_group_parameters');\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v4/packages/{{package_1}}/activity",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v4",
                                        "packages",
                                        "{{package_1}}",
                                        "activity"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.23.7 Check activities filtered by 'operations_group' type",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "\r",
                                            "pm.test(\"'update_operations_group_parameters' event exists for package\", function () {\r",
                                            "    pm.expect(data.events[0].packageId).to.eql(pm.variables.replaceIn('{{package_1}}'));\r",
                                            "    pm.expect(data.events[0].eventType).to.eql('update_operations_group_parameters');\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v4/activity?types=operations_group",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v4",
                                        "activity"
                                    ],
                                    "query": [
                                        {
                                            "key": "types",
                                            "value": "operations_group"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.23.8 Delete operation group",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 204\", function () {\r",
                                            "    pm.response.to.have.status(204);\r",
                                            "});",
                                            "setTimeout(function(){}, 5000)"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_1}}/rest/groups/{{operation_group_1}}",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "versions",
                                        "{{version_1}}",
                                        "rest",
                                        "groups",
                                        "{{operation_group_1}}"
                                    ]
                                },
                                "method": "DELETE",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.23.9 Check 'delete_manual_group' package event",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"'delete_manual_group' event exists\", function () {\r",
                                            "    pm.expect(data.events[0].eventType).to.eql('delete_manual_group');\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v4/packages/{{package_1}}/activity",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v4",
                                        "packages",
                                        "{{package_1}}",
                                        "activity"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.23.10 Check activities filtered by 'operations_group' type",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "\r",
                                            "pm.test(\"'delete_manual_group' event exists for package\", function () {\r",
                                            "    pm.expect(data.events[0].packageId).to.eql(pm.variables.replaceIn('{{package_1}}'));\r",
                                            "    pm.expect(data.events[0].eventType).to.eql('delete_manual_group');\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v4/activity?types=operations_group",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v4",
                                        "activity"
                                    ],
                                    "query": [
                                        {
                                            "key": "types",
                                            "value": "operations_group"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        }
                    ]
                },
                {
                    "name": "8.24 APIHUB-9398 [BE] Propagate manual groups between versions",
                    "item": [
                        {
                            "name": "8.24.1 Create operation group",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 201\", function () {\r",
                                            "    pm.response.to.have.status(201);\r",
                                            "});\r",
                                            "\r",
                                            "pm.environment.set(\"operation_group_1\", 'test_group_1');"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v3/packages/{{package_1}}/versions/{{version_1}}/rest/groups",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v3",
                                        "packages",
                                        "{{package_1}}",
                                        "versions",
                                        "{{version_1}}",
                                        "rest",
                                        "groups"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "key": "groupName",
                                            "type": "default",
                                            "value": "test_group_1"
                                        },
                                        {
                                            "key": "description",
                                            "type": "default",
                                            "value": "Test group 1"
                                        }
                                    ]
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.24.2 Check package version operation groups",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"Version has operation group\", function () {\r",
                                            "    pm.expect(data.operationGroups[0].groupName).to.eql(pm.variables.replaceIn('{{operation_group_1}}'));\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v3/packages/{{package_1}}/versions/{{version_1}}?includeGroups=true",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v3",
                                        "packages",
                                        "{{package_1}}",
                                        "versions",
                                        "{{version_1}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "includeGroups",
                                            "value": "true"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.24.3 Get package version operations",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.environment.set(\"operation_id_1\", data.operations[0].operationId);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_1}}/rest/operations",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "versions",
                                        "{{version_1}}",
                                        "rest",
                                        "operations"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.24.4 Add operation to operation group",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_1}}/rest/groups/{{operation_group_1}}",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "versions",
                                        "{{version_1}}",
                                        "rest",
                                        "groups",
                                        "{{operation_group_1}}"
                                    ]
                                },
                                "method": "PUT",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\r\n    \"groupName\": \"test_group_1\",\r\n    \"operations\": [{\r\n        \"operationId\": \"{{operation_id_1}}\"\r\n    }]\r\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.24.5 Check operation list of operation group",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"Version has operation\", function () {\r",
                                            "    pm.expect(data.operations[0].operationId).to.eql(pm.variables.replaceIn('{{operation_id_1}}'));\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_1}}/rest/groups/{{operation_group_1}}",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "versions",
                                        "{{version_1}}",
                                        "rest",
                                        "groups",
                                        "{{operation_group_1}}"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.24.6 Publish new revision",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 202\", function () {\r",
                                            "    pm.response.to.have.status(202);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"publish_id\", data.publishId)\r",
                                            "\r",
                                            "setTimeout(() => { },5000);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/publish",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "publish"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Transfer-Encoding",
                                        "value": "base64",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"clientBuild\"\r\n\r\nfalse\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"config\"\r\n\r\n{\r\n    \"version\": \"1.0\",\r\n    \"status\": \"draft\",\r\n    \"versionFolder\": \"qwerty\",\r\n    \"refs\": [],\r\n    \"files\": [{\r\n            \"fileId\": \"petstore.yaml\",\r\n            \"publish\": true\r\n        }\r\n    ]\r\n}\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"sources\"; filename=\"petstore_yml.zip\"\r\nContent-Type: application/zip;base64\r\n\r\nUEsDBBQAAAAIABFkaFUQiX2ZpQIAAIkKAAANAAAAcGV0c3RvcmUueWFtbNVWwW7bMAy9F+g/EN2AbofGaTvs4Ns2FFiAbSiw/oBm04k621IpOk0w7N9HyYrtZEmadgOK6hDEIkU+Pj3SNhZrZXUKJ5ej8Wh8cnyk68Kkx0cAcySnTZ3CuVjO/Q5rLjGF7/dqOkWCa2THhtCbSp1h7dAflFWrSvy+Tm6OjxySDxQMZ9BQmcKM2aZJYuPxkWvjjbRJ5pLHKp61/sElhpwi+39huaaqFC1T+KIdgypL8I4rq5REigX5JE+hFI/rgZHVNESM62ztpFUkwDnA7V1CNT5SpVm2u6WFmrsGaTnczNFlpC0H4j6be6hUvQTNWDlgA4TcUA2KwdQofFYIbyq1gPPx+O0gjPjdNZpQCihU6XBoctkMK9UBjGUtLaaCiFGIXDcVhirFwXh5IaYY31kj9zUs9PRiPD5NdxbzQeiZYg6KSC3BFCvmujVDla+o69firMbF6up2hi51/dPzwzME7x9ySZIOaMz0AA09FY5J19OhNTPCTr2JRFkr0g1ySW6dByPr4FyvCQtpnVdJZiqBKeFd0jq7xKtO2qkvuFBNybv5baRuixkLxUhk6AnY/wvuK588ArfGbem6T4SKEZRXwNamy4LDwW33BDF+a8qyO/eiSQ4zLvklv5P8975ZN5G57JtZeHdSgi50tvMC3MzcC/0fl5P8oBvYO/gCtM3B54f09oHF1OBO/m+kv3Uuje073UeOQ5E0zg+dcm1r/4N4rqIEurMehIK5KrXfk5nu+LmEIbf2kodGbwoBojkGu46y7q/S/LgV8O1er6E1Dep8U5GDZ6/qTsPkW4D1mhK0D3bAa3Lwknz/rjO0DdA//q3Arrce8PKzcL329j0at8IHgnc4hOteIoH1x1OamXyNxAqdk9ftPiLDmUdT2X9vQEyym80/UEsBAj8AFAAAAAgAEWRoVRCJfZmlAgAAiQoAAA0AJAAAAAAAAAAgAAAAAAAAAHBldHN0b3JlLnlhbWwKACAAAAAAAAEAGAAKKSMHVfPYARJQIwdV89gBOjCy/c3y2AFQSwUGAAAAAAEAAQBfAAAA0AIAAAAA\r\n----------------------------127308995100818139707097--",
                                    "options": {
                                        "raw": {
                                            "language": "text"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.24.7 Get publish status",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "var retry = parseInt(pm.environment.get(\"com_retry_counter\") || 0);\r",
                                            "var delay = parseInt(pm.environment.get(\"com_retry_delay\") || 0);\r",
                                            "\r",
                                            "var respBody = pm.response.json();\r",
                                            "\r",
                                            "if ((respBody.status != \"complete\") && retry < 15) {\r",
                                            "    retry++;\r",
                                            "    delay = 5000 + delay;\r",
                                            "\r",
                                            "\r",
                                            "pm.test(\"Status is ok, response is json\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "    pm.response.to.be.ok;\r",
                                            "});\r",
                                            "\r",
                                            "var respBody = pm.response.json();\r",
                                            "\r",
                                            "    setTimeout(function () { }, delay);\r",
                                            "    postman.setNextRequest(request.name);\r",
                                            "    pm.environment.set(\"com_retry_counter\", retry);\r",
                                            "    pm.environment.set(\"com_retry_delay\", delay);\r",
                                            "}\r",
                                            "else {\r",
                                            "    pm.environment.set(\"com_retry_counter\", null);\r",
                                            "    pm.environment.set(\"com_retry_delay\", null);\r",
                                            "\r",
                                            "    pm.test(\"Status code is 200\", function () {\r",
                                            "        pm.response.to.have.status(200);\r",
                                            "    });\r",
                                            "\r",
                                            "}\r",
                                            "setTimeout(function(){}, [100]);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/publish/{{publish_id}}/status",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "publish",
                                        "{{publish_id}}",
                                        "status"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.24.8 Get package versions",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"Packages has versions\", function () {\r",
                                            "    pm.expect(data.versions.length).to.greaterThan(0);\r",
                                            "});\r",
                                            "\r",
                                            "pm.environment.set(\"version_1\", data.versions[0].version);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v3/packages/{{package_1}}/versions",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v3",
                                        "packages",
                                        "{{package_1}}",
                                        "versions"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.24.9 Check operation groups in new revision",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"Version has operation group\", function () {\r",
                                            "    pm.expect(data.operationGroups[0].groupName).to.eql(pm.variables.replaceIn('{{operation_group_1}}'));\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v3/packages/{{package_1}}/versions/{{version_1}}?includeGroups=true",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v3",
                                        "packages",
                                        "{{package_1}}",
                                        "versions",
                                        "{{version_1}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "includeGroups",
                                            "value": "true"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.24.10 Check list of operations in operation group under new revision",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"Version has operation\", function () {\r",
                                            "    pm.expect(data.operations[0].operationId).to.eql(pm.variables.replaceIn('{{operation_id_1}}'));\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_1}}/rest/groups/{{operation_group_1}}",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "versions",
                                        "{{version_1}}",
                                        "rest",
                                        "groups",
                                        "{{operation_group_1}}"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.24.11 Publish new version (with specified previousVersion)",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 202\", function () {\r",
                                            "    pm.response.to.have.status(202);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"publish_id\", data.publishId)\r",
                                            "\r",
                                            "setTimeout(() => { },5000);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/publish",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "publish"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Transfer-Encoding",
                                        "value": "base64",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"clientBuild\"\r\n\r\nfalse\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"config\"\r\n\r\n{\r\n    \"version\": \"2.0\",\r\n    \"previousVersion\": \"1.0\",\r\n    \"status\": \"draft\",\r\n    \"versionFolder\": \"qwerty\",\r\n    \"refs\": [],\r\n    \"files\": [{\r\n            \"fileId\": \"petstore.yaml\",\r\n            \"publish\": true\r\n        }\r\n    ]\r\n}\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"sources\"; filename=\"petstore_yml.zip\"\r\nContent-Type: application/zip;base64\r\n\r\nUEsDBBQAAAAIABFkaFUQiX2ZpQIAAIkKAAANAAAAcGV0c3RvcmUueWFtbNVWwW7bMAy9F+g/EN2AbofGaTvs4Ns2FFiAbSiw/oBm04k621IpOk0w7N9HyYrtZEmadgOK6hDEIkU+Pj3SNhZrZXUKJ5ej8Wh8cnyk68Kkx0cAcySnTZ3CuVjO/Q5rLjGF7/dqOkWCa2THhtCbSp1h7dAflFWrSvy+Tm6OjxySDxQMZ9BQmcKM2aZJYuPxkWvjjbRJ5pLHKp61/sElhpwi+39huaaqFC1T+KIdgypL8I4rq5REigX5JE+hFI/rgZHVNESM62ztpFUkwDnA7V1CNT5SpVm2u6WFmrsGaTnczNFlpC0H4j6be6hUvQTNWDlgA4TcUA2KwdQofFYIbyq1gPPx+O0gjPjdNZpQCihU6XBoctkMK9UBjGUtLaaCiFGIXDcVhirFwXh5IaYY31kj9zUs9PRiPD5NdxbzQeiZYg6KSC3BFCvmujVDla+o69firMbF6up2hi51/dPzwzME7x9ySZIOaMz0AA09FY5J19OhNTPCTr2JRFkr0g1ySW6dByPr4FyvCQtpnVdJZiqBKeFd0jq7xKtO2qkvuFBNybv5baRuixkLxUhk6AnY/wvuK588ArfGbem6T4SKEZRXwNamy4LDwW33BDF+a8qyO/eiSQ4zLvklv5P8975ZN5G57JtZeHdSgi50tvMC3MzcC/0fl5P8oBvYO/gCtM3B54f09oHF1OBO/m+kv3Uuje073UeOQ5E0zg+dcm1r/4N4rqIEurMehIK5KrXfk5nu+LmEIbf2kodGbwoBojkGu46y7q/S/LgV8O1er6E1Dep8U5GDZ6/qTsPkW4D1mhK0D3bAa3Lwknz/rjO0DdA//q3Arrce8PKzcL329j0at8IHgnc4hOteIoH1x1OamXyNxAqdk9ftPiLDmUdT2X9vQEyym80/UEsBAj8AFAAAAAgAEWRoVRCJfZmlAgAAiQoAAA0AJAAAAAAAAAAgAAAAAAAAAHBldHN0b3JlLnlhbWwKACAAAAAAAAEAGAAKKSMHVfPYARJQIwdV89gBOjCy/c3y2AFQSwUGAAAAAAEAAQBfAAAA0AIAAAAA\r\n----------------------------127308995100818139707097--",
                                    "options": {
                                        "raw": {
                                            "language": "text"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.24.12 Get publish status",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "var retry = parseInt(pm.environment.get(\"com_retry_counter\") || 0);\r",
                                            "var delay = parseInt(pm.environment.get(\"com_retry_delay\") || 0);\r",
                                            "\r",
                                            "var respBody = pm.response.json();\r",
                                            "\r",
                                            "if ((respBody.status != \"complete\") && retry < 15) {\r",
                                            "    retry++;\r",
                                            "    delay = 5000 + delay;\r",
                                            "\r",
                                            "\r",
                                            "pm.test(\"Status is ok, response is json\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "    pm.response.to.be.ok;\r",
                                            "});\r",
                                            "\r",
                                            "var respBody = pm.response.json();\r",
                                            "\r",
                                            "    setTimeout(function () { }, delay);\r",
                                            "    postman.setNextRequest(request.name);\r",
                                            "    pm.environment.set(\"com_retry_counter\", retry);\r",
                                            "    pm.environment.set(\"com_retry_delay\", delay);\r",
                                            "}\r",
                                            "else {\r",
                                            "    pm.environment.set(\"com_retry_counter\", null);\r",
                                            "    pm.environment.set(\"com_retry_delay\", null);\r",
                                            "\r",
                                            "    pm.test(\"Status code is 200\", function () {\r",
                                            "        pm.response.to.have.status(200);\r",
                                            "    });\r",
                                            "\r",
                                            "}\r",
                                            "setTimeout(function(){}, [100]);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/publish/{{publish_id}}/status",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "publish",
                                        "{{publish_id}}",
                                        "status"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.24.13 Get package versions",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"Packages has versions\", function () {\r",
                                            "    pm.expect(data.versions.length).to.greaterThan(0);\r",
                                            "});\r",
                                            "\r",
                                            "pm.environment.set(\"version_1\", data.versions[0].version);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v3/packages/{{package_1}}/versions",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v3",
                                        "packages",
                                        "{{package_1}}",
                                        "versions"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.24.14 Get operation groups under new version",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"Version has operation group\", function () {\r",
                                            "    pm.expect(data.operationGroups[0].groupName).to.eql(pm.variables.replaceIn('{{operation_group_1}}'));\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v3/packages/{{package_1}}/versions/{{version_1}}?includeGroups=true",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v3",
                                        "packages",
                                        "{{package_1}}",
                                        "versions",
                                        "{{version_1}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "includeGroups",
                                            "value": "true"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.24.15 Check operations list of operation group under new version",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"Version has operation\", function () {\r",
                                            "    pm.expect(data.operations[0].operationId).to.eql(pm.variables.replaceIn('{{operation_id_1}}'));\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_1}}/rest/groups/{{operation_group_1}}",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "versions",
                                        "{{version_1}}",
                                        "rest",
                                        "groups",
                                        "{{operation_group_1}}"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        }
                    ]
                },
                {
                    "name": "8.25 [BE] API: Support Protobuf",
                    "item": [
                        {
                            "name": "8.25.1 Delete static test data from DB",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 204\", function () {\r",
                                            "    pm.response.to.have.status(204);\r",
                                            "});\r",
                                            ""
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/internal/clear/STATIC-TEST-2",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "internal",
                                        "clear",
                                        "STATIC-TEST-2"
                                    ]
                                },
                                "method": "DELETE",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.25.2 Add static test group",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 201\", function () {\r",
                                            "    pm.response.to.have.status(201);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"static_root_group_1\", data.groupId)"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v1/groups",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v1",
                                        "groups"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\r\n    \"name\": \"Test Workspace\",\r\n    \"Alias\" :\"QS-STATIC-TEST-2\",\r\n    \"parentId\": \"\",\r\n    \"description\": \"Required for to upload hardcoded packages\",\r\n    \"imageUrl\": \"\"\r\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.25.3 Add static package 1",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 201\", function () {\r",
                                            "    pm.response.to.have.status(201);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"package_1\", data.packageId)"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\r\n    \"id\": \"QS-STATIC-TEST-2.PKG5-1\",\r\n    \"Alias\" :\"PKG5-1\",\r\n    \"name\": \"Test static package 1\",\r\n    \"parentId\": \"QS-STATIC-TEST-2\",\r\n    \"kind\":\"package\",\r\n    \"description\": \"Package to be built\",\r\n    \"serviceName\": \"\",\r\n    \"imageUrl\": \"\",\r\n    \"restGroupingPrefix\": \"/api/{group}/\"\r\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.25.4 Publish new verision",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 202\", function () {\r",
                                            "    pm.response.to.have.status(202);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"publish_id\", data.publishId)\r",
                                            "\r",
                                            "setTimeout(() => { },500);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/publish",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "publish"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Transfer-Encoding",
                                        "value": "base64",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"clientBuild\"\r\n\r\ntrue\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"builderId\"\r\n\r\n5680525d-7c7b-47be-8ede-d502626a79dc\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"config\"\r\n\r\n{\r\n    \"version\": \"2000.1\",\r\n    \"status\": \"release\",\r\n    \"versionFolder\": \"qwerty\",\r\n    \"apiType\": \"protobuf\",\r\n    \"metadata\": {\"versionLabels\": [\"protoLabel\"]},\r\n    \"refs\": [],\r\n    \"files\": [{\r\n            \"fileId\": \"GSTest_gRPC.proto\",\r\n            \"publish\": true\r\n        }\r\n    ]\r\n}\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"sources\"; filename=\"petstore_yml.zip\"\r\nContent-Type: application/zip;base64\r\n\r\nUEsDBAoAAAAIAGNtjFlBKgbvPwQAAFsMAAARAAAAR1NUZXN0X2dSUEMucHJvdG+1Vttu4zYQfTfgfyDcl6RYS7m8JdiH3cabLlDvBokDBCgKLS2NJSISqZKUHXfhf+8MScmOb9m2qAFLJDWXw5nD4ZiltPzl/aDWyqrLwXW/1+/FMbtVt4rl93e/sNELr+oSaNV9mRTCMPCLDIeNgYxZxUyhFoz+OMY1r8xl5pRoMrzlFhZ8yRbCFt7BHTmdNrOo36t5+sxzaC07HKKqlbZskCuVlxDXQTqGqrbLyE0J8CExKyowFs29LZo1mluh5NuSMwFlllTcPB+U5bWIuZTKOpNmV84tpMMc5NAseJ6DjlXtZI/r5Ri4Zhqlqopzlas1KJq5iRsdVaww+s9qgYJDJzac81Jk3Cpt4m64ttDveWQsV0mbove7SHJdp8OQOg/rOsxeGTkhuSj3PPBO0gTDkIQwRCEM+AaJYZxftF9O0ev3fo8xIWfqyg8Zm4M2KH/FBufRGXlibOWe8GJBS14mmUpNJ97oEkULa2tzFcfH9uBtMZaBSbVwoFDTUbqlvoZaGYHBWgbH9DBpAUi6K/brZHL3gOur9kCNJJ+iVtoYqyo25toUvGQV2EJl0UaA2kxGlRcBnfCypO1b3dCx2LH1KKu3rTXyh+09iL8gmGIn9/BnIzSe8OmyA42Heu30dK87gzYOO9KQC2P9ifPVIFcll3lHaDZTmtkCiwjlpOXLPkfhnWya3OsTWQbBo5qxp6enZAzGIJ2/8KrdrnF+vU8VY+mwjdmfG68qUXVrk/2eAT0XKbBHHDyEceAfGmYfsoy+nNDjFCNhGy0N2abSEbUBiEZU4k5bRfqtUThJPB0RMbk7GOsf8tIiW10dmp/HWIy1GbwWmapsiSI/byyvAuVXa6y/YUgJpznpRsQHLKobyDHqwCvm9/Ov8OZwDO4xXB+X96oEF0sa/N+oYo1OjkN7rLGAgs9wN9wN2n/AVXObFjvIvtMrEtnqHyV6RYQF2VSMwtd6un0cPUzQ8VkQHI/GH0f3uHAeFj7cjD9/wfnFdTARzoMLd1dshbSXF0xkpMh+X/vfOEe+4tAxoo0OPt8M3m3Ira8jd+nuiQW6SHJM09nr5aKpuExAa6WvyCqr0A+bAuPM1WwxB1IFvFc24+KHf4RNuohQwsNGHSe2Tumk7TBYinSzkFDGUf7ywH6NzagpaevF2uFOFDfzsYnkfEd4m2WtlmvVgFoxjbwzqtFYiBaFSAu6ukqegnEltvuG9KM51S+kkjfiEupMeNevTTvXjHohxuu6FGRRvTIasU+hkn/7RDkco+w3vFVnQgoi/LvOoAFg7c2cwRxKbAG0iULE6ZL27YIqhxj5GXGe7vZYA45BphBvJecnRxoCtz93HZ6wD9fT7SP1du3bCPBXWS5Zid9djExgQcb4DNsP3Da2x10T+mMMyhIjcDNHzsxBDh3ApMrMYeHSA7oJre5+PO1Xr5Y4NYzJYSxt57yH038DUEsBAhQACgAAAAgAY22MWUEqBu8/BAAAWwwAABEAAAAAAAAAAAAAAAAAAAAAAEdTVGVzdF9nUlBDLnByb3RvUEsFBgAAAAABAAEAPwAAAG4EAAAAAA==\r\n----------------------------127308995100818139707097--",
                                    "options": {
                                        "raw": {
                                            "language": "text"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.25.5 Set package build status",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 204\", function () {\r",
                                            "    pm.response.to.have.status(204);\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/publish/{{publish_id}}/status",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "publish",
                                        "{{publish_id}}",
                                        "status"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"status\"\r\n\r\nrunning\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"builderId\"\r\n\r\n5680525d-7c7b-47be-8ede-d502626a79dc\r\n----------------------------127308995100818139707097--",
                                    "options": {
                                        "raw": {
                                            "language": "text"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.25.6 Store publish status",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 204\", function () {\r",
                                            "    pm.response.to.have.status(204);\r",
                                            "});\r",
                                            "\r",
                                            "setTimeout(() => { },100);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v3/packages/{{package_1}}/publish/{{publish_id}}/status",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v3",
                                        "packages",
                                        "{{package_1}}",
                                        "publish",
                                        "{{publish_id}}",
                                        "status"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Transfer-Encoding",
                                        "value": "base64",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"status\"\r\n\r\ncomplete\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"builderId\"\r\n\r\n5680525d-7c7b-47be-8ede-d502626a79dc\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"data\"; filename=\"protobuf.zip\"\r\nContent-Type: application/zip;base64\r\n\r\\r\n----------------------------127308995100818139707097--",
                                    "options": {
                                        "raw": {
                                            "language": "text"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.25.7 Get publish status",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "var retry = parseInt(pm.environment.get(\"com_retry_counter\") || 0);\r",
                                            "var delay = parseInt(pm.environment.get(\"com_retry_delay\") || 0);\r",
                                            "\r",
                                            "var respBody = pm.response.json();\r",
                                            "\r",
                                            "if ((respBody.status != \"complete\") && retry < 15) {\r",
                                            "    retry++;\r",
                                            "    delay = 5000 + delay;\r",
                                            "\r",
                                            "\r",
                                            "pm.test(\"Status is ok, response is json\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "    pm.response.to.be.ok;\r",
                                            "});\r",
                                            "\r",
                                            "var respBody = pm.response.json();\r",
                                            "\r",
                                            "    setTimeout(function () { }, delay);\r",
                                            "    postman.setNextRequest(request.name);\r",
                                            "    pm.environment.set(\"com_retry_counter\", retry);\r",
                                            "    pm.environment.set(\"com_retry_delay\", delay);\r",
                                            "}\r",
                                            "else {\r",
                                            "    pm.environment.set(\"com_retry_counter\", null);\r",
                                            "    pm.environment.set(\"com_retry_delay\", null);\r",
                                            "\r",
                                            "    pm.test(\"Status code is 200\", function () {\r",
                                            "        pm.response.to.have.status(200);\r",
                                            "    });\r",
                                            "\r",
                                            "}\r",
                                            "setTimeout(function(){}, [100]);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/publish/{{publish_id}}/status",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "publish",
                                        "{{publish_id}}",
                                        "status"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.25.8 Get package 1 versions",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"Packages has versions\", function () {\r",
                                            "    pm.expect(data.versions.length).to.greaterThan(0);\r",
                                            "});\r",
                                            "\r",
                                            "pm.test(\"Version has label\", function () {\r",
                                            "    pm.expect(data.versions[0].versionLabels).to.include(\"proto\");\r",
                                            "});\r",
                                            "\r",
                                            "pm.environment.set(\"version_1\", data.versions[0].version.split(\"@\")[0]);\r",
                                            "pm.environment.set(\"version_1_1\", data.versions[0].version);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "versions"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.25.9 Get version documents",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "\r",
                                            "var type = [];\r",
                                            "var format = [];\r",
                                            "\r",
                                            "for (var i = 0; i<data.documents.length; i++) {\r",
                                            "    type.push(data.documents[i].type)\r",
                                            "    format.push(data.documents[i].format)\r",
                                            "}\r",
                                            "\r",
                                            "pm.test(\"Version has document with 'protobuf-3' type\", function () {\r",
                                            "    pm.expect(type).to.include('protobuf-3');\r",
                                            "}); \r",
                                            "\r",
                                            "pm.test(\"Version has document with 'proto' format\", function () {\r",
                                            "    pm.expect(format).to.include('proto');\r",
                                            "}); \r",
                                            "\r",
                                            "pm.environment.set(\"pkg_file_slug\", \"GSTest_gRPC\")"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_1}}/documents",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "versions",
                                        "{{version_1}}",
                                        "documents"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.25.10 Get document details",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"Document has 'protobuf-3' type\", function () {\r",
                                            "    pm.expect(data.type).to.eql(\"protobuf-3\");\r",
                                            "});\r",
                                            "\r",
                                            "pm.test(\"Document has 'proto' format\", function () {\r",
                                            "    pm.expect(data.format).to.eql(\"proto\");\r",
                                            "});\r",
                                            "\r",
                                            "pm.environment.set(\"proto_operation_1\", data.operations[0].operationId)"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_1}}/documents/{{pkg_file_slug}}",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "versions",
                                        "{{version_1}}",
                                        "documents",
                                        "{{pkg_file_slug}}"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.25.11 Get file data",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_1}}/files/{{pkg_file_slug}}/raw",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "versions",
                                        "{{version_1}}",
                                        "files",
                                        "{{pkg_file_slug}}",
                                        "raw"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.25.12 Get 'protobuf' operations",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"Operation has 'protobuf type\", function () {\r",
                                            "    pm.expect(data.operations[0].apiType).to.eql(\"protobuf\");\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_1}}/protobuf/operations",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "versions",
                                        "{{version_1}}",
                                        "protobuf",
                                        "operations"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.25.13 Export operations to xlsx file",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_1}}/protobuf/export/operations",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "versions",
                                        "{{version_1}}",
                                        "protobuf",
                                        "export",
                                        "operations"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.25.14 Get operation detail",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"Operation has 'protobuf type\", function () {\r",
                                            "    pm.expect(data.apiType).to.eql(\"protobuf\");\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_1}}/protobuf/operations/{{proto_operation_1}}",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "versions",
                                        "{{version_1}}",
                                        "protobuf",
                                        "operations",
                                        "{{proto_operation_1}}"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        }
                    ]
                },
                {
                    "name": "8.26 APIHUB-10104 [BE] API: support declarative changes",
                    "item": [
                        {
                            "name": "8.26.1 Publish new version",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 202\", function () {\r",
                                            "    pm.response.to.have.status(202);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"publish_id\", data.publishId)\r",
                                            "\r",
                                            "setTimeout(() => { },500);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/publish",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "publish"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Transfer-Encoding",
                                        "value": "base64",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"clientBuild\"\r\n\r\nfalse\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"builderId\"\r\n\r\n5680525d-7c7b-47be-8ede-d502626a79dc\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"config\"\r\n\r\n{\r\n    \"version\": \"2001.1\",\r\n    \"status\": \"release\",\r\n    \"versionFolder\": \"qwerty\",\r\n    \"refs\": [],\r\n    \"files\": [{\r\n            \"fileId\": \"petstore.json\",\r\n            \"publish\": true\r\n        }\r\n    ]\r\n}\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"sources\"; filename=\"petstore.zip\"\r\nContent-Type: application/zip;base64\r\n\r\n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\r\n----------------------------127308995100818139707097--",
                                    "options": {
                                        "raw": {
                                            "language": "text"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.26.2 Get publish status",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "var retry = parseInt(pm.environment.get(\"com_retry_counter\") || 0);\r",
                                            "var delay = parseInt(pm.environment.get(\"com_retry_delay\") || 0);\r",
                                            "\r",
                                            "var respBody = pm.response.json();\r",
                                            "\r",
                                            "if ((respBody.status != \"complete\") && retry < 15) {\r",
                                            "    retry++;\r",
                                            "    delay = 5000 + delay;\r",
                                            "\r",
                                            "\r",
                                            "pm.test(\"Status is ok, response is json\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "    pm.response.to.be.ok;\r",
                                            "});\r",
                                            "\r",
                                            "var respBody = pm.response.json();\r",
                                            "\r",
                                            "    setTimeout(function () { }, delay);\r",
                                            "    postman.setNextRequest(request.name);\r",
                                            "    pm.environment.set(\"com_retry_counter\", retry);\r",
                                            "    pm.environment.set(\"com_retry_delay\", delay);\r",
                                            "}\r",
                                            "else {\r",
                                            "    pm.environment.set(\"com_retry_counter\", null);\r",
                                            "    pm.environment.set(\"com_retry_delay\", null);\r",
                                            "\r",
                                            "    pm.test(\"Status code is 200\", function () {\r",
                                            "        pm.response.to.have.status(200);\r",
                                            "    });\r",
                                            "\r",
                                            "}\r",
                                            "setTimeout(function(){}, [100]);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/publish/{{publish_id}}/status",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "publish",
                                        "{{publish_id}}",
                                        "status"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.26.3 Publish new version",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 202\", function () {\r",
                                            "    pm.response.to.have.status(202);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"publish_id\", data.publishId)\r",
                                            "\r",
                                            "setTimeout(() => { },500);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/publish",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "publish"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Transfer-Encoding",
                                        "value": "base64",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"clientBuild\"\r\n\r\nfalse\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"builderId\"\r\n\r\n5680525d-7c7b-47be-8ede-d502626a79dc\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"config\"\r\n\r\n{\r\n    \"version\": \"2001.2\",\r\n    \"previousVersion\": \"2001.1\",\r\n    \"status\": \"release\",\r\n    \"versionFolder\": \"qwerty\",\r\n    \"refs\": [],\r\n    \"files\": [{\r\n            \"fileId\": \"petstore.json\",\r\n            \"publish\": true\r\n        }\r\n    ]\r\n}\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"sources\"; filename=\"petstore.zip\"\r\nContent-Type: application/zip;base64\r\n\r\n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\r\n----------------------------127308995100818139707097--",
                                    "options": {
                                        "raw": {
                                            "language": "text"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.26.4 Get publish status",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "var retry = parseInt(pm.environment.get(\"com_retry_counter\") || 0);\r",
                                            "var delay = parseInt(pm.environment.get(\"com_retry_delay\") || 0);\r",
                                            "\r",
                                            "var respBody = pm.response.json();\r",
                                            "\r",
                                            "if ((respBody.status != \"complete\") && retry < 15) {\r",
                                            "    retry++;\r",
                                            "    delay = 5000 + delay;\r",
                                            "\r",
                                            "\r",
                                            "pm.test(\"Status is ok, response is json\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "    pm.response.to.be.ok;\r",
                                            "});\r",
                                            "\r",
                                            "var respBody = pm.response.json();\r",
                                            "\r",
                                            "    setTimeout(function () { }, delay);\r",
                                            "    postman.setNextRequest(request.name);\r",
                                            "    pm.environment.set(\"com_retry_counter\", retry);\r",
                                            "    pm.environment.set(\"com_retry_delay\", delay);\r",
                                            "}\r",
                                            "else {\r",
                                            "    pm.environment.set(\"com_retry_counter\", null);\r",
                                            "    pm.environment.set(\"com_retry_delay\", null);\r",
                                            "\r",
                                            "    pm.test(\"Status code is 200\", function () {\r",
                                            "        pm.response.to.have.status(200);\r",
                                            "    });\r",
                                            "\r",
                                            "}\r",
                                            "setTimeout(function(){}, [100]);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/publish/{{publish_id}}/status",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "publish",
                                        "{{publish_id}}",
                                        "status"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.26.5 Get package 1 versions",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"Packages has versions\", function () {\r",
                                            "    pm.expect(data.versions.length).to.greaterThan(0);\r",
                                            "});\r",
                                            "\r",
                                            "pm.environment.set(\"version_1\", data.versions[0].version.split(\"@\")[0]);\r",
                                            "pm.environment.set(\"version_1_1\", data.versions[0].version);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "versions"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.26.6 Get changes summary",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"Changes summary is correct\", function () {\r",
                                            "    pm.expect(data.operationTypes[0].changesSummary.breaking).to.eql(3);\r",
                                            "    pm.expect(data.operationTypes[0].changesSummary[\"semi-breaking\"]).to.eql(1);\r",
                                            "    pm.expect(data.operationTypes[0].changesSummary.deprecated).to.eql(2);\r",
                                            "    pm.expect(data.operationTypes[0].changesSummary[\"non-breaking\"]).to.eql(2);\r",
                                            "    pm.expect(data.operationTypes[0].changesSummary.annotation).to.eql(1);\r",
                                            "    pm.expect(data.operationTypes[0].changesSummary.unclassified).to.eql(1);\r",
                                            "});\r",
                                            "\r",
                                            "pm.test(\"Summary of impacted operations is correct\", function () {\r",
                                            "    pm.expect(data.operationTypes[0].numberOfImpactedOperations.breaking).to.eql(2);\r",
                                            "    pm.expect(data.operationTypes[0].numberOfImpactedOperations[\"semi-breaking\"]).to.eql(1);\r",
                                            "    pm.expect(data.operationTypes[0].numberOfImpactedOperations.deprecated).to.eql(2);\r",
                                            "    pm.expect(data.operationTypes[0].numberOfImpactedOperations[\"non-breaking\"]).to.eql(2);\r",
                                            "    pm.expect(data.operationTypes[0].numberOfImpactedOperations.annotation).to.eql(1);\r",
                                            "    pm.expect(data.operationTypes[0].numberOfImpactedOperations.unclassified).to.eql(1);\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_1}}/changes/summary",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "versions",
                                        "{{version_1}}",
                                        "changes",
                                        "summary"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.26.7 Publish new version",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 202\", function () {\r",
                                            "    pm.response.to.have.status(202);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"publish_id\", data.publishId)\r",
                                            "\r",
                                            "setTimeout(() => { },500);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/publish",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "publish"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Transfer-Encoding",
                                        "value": "base64",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"clientBuild\"\r\n\r\nfalse\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"builderId\"\r\n\r\n5680525d-7c7b-47be-8ede-d502626a79dc\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"config\"\r\n\r\n{\r\n    \"version\": \"2001.3\",\r\n    \"previousVersion\": \"2001.2\",\r\n    \"status\": \"release\",\r\n    \"versionFolder\": \"qwerty\",\r\n    \"refs\": [],\r\n    \"files\": [{\r\n            \"fileId\": \"petstore.json\",\r\n            \"publish\": true\r\n        }\r\n    ]\r\n}\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"sources\"; filename=\"petstore.zip\"\r\nContent-Type: application/zip;base64\r\n\r\n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\r\n----------------------------127308995100818139707097--",
                                    "options": {
                                        "raw": {
                                            "language": "text"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.26.8 Get publish status",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "var retry = parseInt(pm.environment.get(\"com_retry_counter\") || 0);\r",
                                            "var delay = parseInt(pm.environment.get(\"com_retry_delay\") || 0);\r",
                                            "\r",
                                            "var respBody = pm.response.json();\r",
                                            "\r",
                                            "if ((respBody.status != \"complete\") && retry < 15) {\r",
                                            "    retry++;\r",
                                            "    delay = 5000 + delay;\r",
                                            "\r",
                                            "\r",
                                            "pm.test(\"Status is ok, response is json\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "    pm.response.to.be.ok;\r",
                                            "});\r",
                                            "\r",
                                            "var respBody = pm.response.json();\r",
                                            "\r",
                                            "    setTimeout(function () { }, delay);\r",
                                            "    postman.setNextRequest(request.name);\r",
                                            "    pm.environment.set(\"com_retry_counter\", retry);\r",
                                            "    pm.environment.set(\"com_retry_delay\", delay);\r",
                                            "}\r",
                                            "else {\r",
                                            "    pm.environment.set(\"com_retry_counter\", null);\r",
                                            "    pm.environment.set(\"com_retry_delay\", null);\r",
                                            "\r",
                                            "    pm.test(\"Status code is 200\", function () {\r",
                                            "        pm.response.to.have.status(200);\r",
                                            "    });\r",
                                            "\r",
                                            "}\r",
                                            "setTimeout(function(){}, [100]);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/publish/{{publish_id}}/status",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "publish",
                                        "{{publish_id}}",
                                        "status"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.26.9 Get package 1 versions",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"Packages has versions\", function () {\r",
                                            "    pm.expect(data.versions.length).to.greaterThan(0);\r",
                                            "});\r",
                                            "\r",
                                            "pm.environment.set(\"version_1\", data.versions[0].version.split(\"@\")[0]);\r",
                                            "pm.environment.set(\"version_1_1\", data.versions[0].version);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "versions"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.26.10 Get changes summary",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"Changes summary is correct\", function () {\r",
                                            "    pm.expect(data.operationTypes[0].changesSummary.breaking).to.eql(1);\r",
                                            "    pm.expect(data.operationTypes[0].changesSummary[\"semi-breaking\"]).to.eql(0);\r",
                                            "    pm.expect(data.operationTypes[0].changesSummary.deprecated).to.eql(0);\r",
                                            "    pm.expect(data.operationTypes[0].changesSummary[\"non-breaking\"]).to.eql(1);\r",
                                            "    pm.expect(data.operationTypes[0].changesSummary.annotation).to.eql(0);\r",
                                            "    pm.expect(data.operationTypes[0].changesSummary.unclassified).to.eql(0);\r",
                                            "});\r",
                                            "\r",
                                            "pm.test(\"Summary of impacted operations is correct\", function () {\r",
                                            "    pm.expect(data.operationTypes[0].numberOfImpactedOperations.breaking).to.eql(2);\r",
                                            "    pm.expect(data.operationTypes[0].numberOfImpactedOperations[\"semi-breaking\"]).to.eql(0);\r",
                                            "    pm.expect(data.operationTypes[0].numberOfImpactedOperations.deprecated).to.eql(0);\r",
                                            "    pm.expect(data.operationTypes[0].numberOfImpactedOperations[\"non-breaking\"]).to.eql(1);\r",
                                            "    pm.expect(data.operationTypes[0].numberOfImpactedOperations.annotation).to.eql(0);\r",
                                            "    pm.expect(data.operationTypes[0].numberOfImpactedOperations.unclassified).to.eql(0);\r",
                                            "});\r",
                                            "\r",
                                            "pm.test(\"Tag is correct\", function () {\r",
                                            "    pm.expect(data.operationTypes[0].tags).to.include(\"store\");\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_1}}/changes/summary",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "versions",
                                        "{{version_1}}",
                                        "changes",
                                        "summary"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        }
                    ]
                },
                {
                    "name": "8.27 APIHUB-11223 [BE] Publish package version based on operation group",
                    "event": [
                        {
                            "listen": "prerequest",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    ""
                                ]
                            }
                        },
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    ""
                                ]
                            }
                        }
                    ],
                    "item": [
                        {
                            "name": "8.27.1 Create operation group ",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 201\", function () {\r",
                                            "    pm.response.to.have.status(201);\r",
                                            "});\r",
                                            "\r",
                                            "pm.environment.set(\"operation_group_1\", \"GroupX\");"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v3/packages/{{package_1}}/versions/{{version_1}}/rest/groups",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v3",
                                        "packages",
                                        "{{package_1}}",
                                        "versions",
                                        "{{version_1}}",
                                        "rest",
                                        "groups"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "key": "groupName",
                                            "type": "default",
                                            "value": "GroupX"
                                        },
                                        {
                                            "key": "description",
                                            "type": "default",
                                            "value": "Group that will become a package"
                                        }
                                    ]
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.27.2 Get list of operations",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "// Parse the response body\r",
                                            "let response = pm.response.json();\r",
                                            "\r",
                                            "// Ensure the operations array exists\r",
                                            "if (response.operations && Array.isArray(response.operations)) {\r",
                                            "    // Loop through each operation\r",
                                            "    response.operations.forEach((operation, index) => {\r",
                                            "        if (operation.operationId) {\r",
                                            "            // Dynamically set each operationId as an environment variable\r",
                                            "            pm.environment.set(`operationId_${index + 1}`, operation.operationId);\r",
                                            "        }\r",
                                            "    });    \r",
                                            "} \r",
                                            ""
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_1}}/rest/operations",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "versions",
                                        "{{version_1}}",
                                        "rest",
                                        "operations"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.27.3 Put operations in group",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 204\", function () {\r",
                                            "    pm.response.to.have.status(204);\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v3/packages/{{package_1}}/versions/{{version_1}}/rest/groups/{{operation_group_1}}",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v3",
                                        "packages",
                                        "{{package_1}}",
                                        "versions",
                                        "{{version_1}}",
                                        "rest",
                                        "groups",
                                        "{{operation_group_1}}"
                                    ]
                                },
                                "method": "PATCH",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "formdata",
                                    "formdata": [
                                        {
                                            "key": "groupName",
                                            "type": "default",
                                            "value": "{{operation_group_1}}"
                                        },
                                        {
                                            "key": "operations",
                                            "type": "default",
                                            "value": "[\n\t{\n\t\t\"operationId\": \"{{operationId_1}}\"\n\t},\n\t{\n\t\t\"operationId\": \"{{operationId_2}}\"\n\t},\n\t{\n\t\t\"operationId\": \"{{operationId_3}}\"\n\t},\n\t{\n\t\t\"operationId\": \"{{operationId_4}}\"\n\t},\n\t{\n\t\t\"operationId\": \"{{operationId_5}}\"\n\t},\n\t{\n\t\t\"operationId\": \"{{operationId_6}}\"\n\t},\n\t{\n\t\t\"operationId\": \"{{operationId_7}}\"\n\t},\n\t{\n\t\t\"operationId\": \"{{operationId_8}}\"\n\t},\n\t{\n\t\t\"operationId\": \"{{operationId_9}}\"\n\t},\n\t{\n\t\t\"operationId\": \"{{operationId_10}}\"\n\t},\n\t{\n\t\t\"operationId\": \"{{operationId_11}}\"\n\t},\n\t{\n\t\t\"operationId\": \"{{operationId_12}}\"\n\t},\n\t{\n\t\t\"operationId\": \"{{operationId_13}}\"\n\t},\n\t{\n\t\t\"operationId\": \"{{operationId_14}}\"\n\t},\n\t{\n\t\t\"operationId\": \"{{operationId_15}}\"\n\t},\n\t{\n\t\t\"operationId\": \"{{operationId_16}}\"\n\t},\n\t{\n\t\t\"operationId\": \"{{operationId_17}}\"\n\t},\n\t{\n\t\t\"operationId\": \"{{operationId_18}}\"\n\t},\n\t{\n\t\t\"operationId\": \"{{operationId_19}}\"\n\t}\n]"
                                        }
                                    ]
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.27.4 Start operation group publication",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 202\", function () {",
                                            "    pm.response.to.have.status(202);",
                                            "});",
                                            "",
                                            "var data = pm.response.json();",
                                            "",
                                            "pm.environment.set(\"operPublishId\", data.publishId);",
                                            "",
                                            "pm.environment.set(\"version_3\", \"2001.4@1\");",
                                            ""
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v3/packages/{{package_1}}/versions/{{version_1}}/rest/groups/{{operation_group_1}}/publish",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v3",
                                        "packages",
                                        "{{package_1}}",
                                        "versions",
                                        "{{version_1}}",
                                        "rest",
                                        "groups",
                                        "{{operation_group_1}}",
                                        "publish"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    },
                                    {
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\r\n  \"packageId\": \"{{package_1}}\",\r\n  \"version\": \"2001.4\",\r\n  \"previousVersion\": \"{{version_1}}\",\r\n  \"status\": \"release\",\r\n  \"versionLabels\": [\r\n    \"versionFromGroup\"\r\n  ]\r\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "auth": {
                                    "type": "noauth"
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.27.5 Get operation group publication status",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {",
                                            "    pm.response.to.have.status(200);",
                                            "});",
                                            "",
                                            "setTimeout(function(){}, 20000)",
                                            "",
                                            "pm.test(\"Status is running or complete, but not error\", function () {",
                                            "    var status = pm.response.json().status;",
                                            "    pm.expect(status).to.be.oneOf([\"running\", \"complete\"]);",
                                            "    pm.expect(status).to.not.equal(\"error\");",
                                            "});",
                                            ""
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v3/packages/{{package_1}}/versions/{{version_1}}/rest/groups/{{operation_group_1}}/publish/{{operPublishId}}/status",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v3",
                                        "packages",
                                        "{{package_1}}",
                                        "versions",
                                        "{{version_1}}",
                                        "rest",
                                        "groups",
                                        "{{operation_group_1}}",
                                        "publish",
                                        "{{operPublishId}}",
                                        "status"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    },
                                    {
                                        "type": "default"
                                    }
                                ],
                                "auth": {
                                    "type": "noauth"
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.27.6 Get new package versions ",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "const newVersion = pm.environment.get(\"version_3\");\r",
                                            "\r",
                                            "pm.test(\"Packages has versions\", function () {\r",
                                            "    pm.expect(data.versions[0].version).to.eql(newVersion); \r",
                                            "});\r",
                                            ""
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "versions"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.27.7 Get changes summary",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"Changes summary is correct\", function () {\r",
                                            "    pm.expect(data.operationTypes[0].changesSummary.breaking).to.eql(0);\r",
                                            "    pm.expect(data.operationTypes[0].changesSummary[\"semi-breaking\"]).to.eql(0);\r",
                                            "    pm.expect(data.operationTypes[0].changesSummary.deprecated).to.eql(0);\r",
                                            "    pm.expect(data.operationTypes[0].changesSummary[\"non-breaking\"]).to.eql(0);\r",
                                            "    pm.expect(data.operationTypes[0].changesSummary.annotation).to.eql(0);\r",
                                            "    pm.expect(data.operationTypes[0].changesSummary.unclassified).to.eql(0);\r",
                                            "});\r",
                                            "\r",
                                            "pm.test(\"Summary of impacted operations is correct\", function () {\r",
                                            "    pm.expect(data.operationTypes[0].numberOfImpactedOperations.breaking).to.eql(0);\r",
                                            "    pm.expect(data.operationTypes[0].numberOfImpactedOperations[\"semi-breaking\"]).to.eql(0);\r",
                                            "    pm.expect(data.operationTypes[0].numberOfImpactedOperations.deprecated).to.eql(0);\r",
                                            "    pm.expect(data.operationTypes[0].numberOfImpactedOperations[\"non-breaking\"]).to.eql(0);\r",
                                            "    pm.expect(data.operationTypes[0].numberOfImpactedOperations.annotation).to.eql(0);\r",
                                            "    pm.expect(data.operationTypes[0].numberOfImpactedOperations.unclassified).to.eql(0);\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_3}}/changes/summary",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "versions",
                                        "{{version_3}}",
                                        "changes",
                                        "summary"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        }
                    ]
                },
                {
                    "name": "8.28 APIHUB-11283 [BE] Create dashboard version and operation group from CSV file",
                    "event": [
                        {
                            "listen": "prerequest",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    ""
                                ]
                            }
                        },
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    ""
                                ]
                            }
                        }
                    ],
                    "item": [
                        {
                            "name": "8.28.1 Delete static test data from DB",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 204\", function () {\r",
                                            "    pm.response.to.have.status(204);\r",
                                            "});\r",
                                            ""
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/internal/clear/STATIC-TEST-D",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "internal",
                                        "clear",
                                        "STATIC-TEST-D"
                                    ]
                                },
                                "method": "DELETE",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.28.2 Create Workspace",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 201\", function () {\r",
                                            "    pm.response.to.have.status(201);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"static_root_group_1\", data.groupId)"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v1/groups",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v1",
                                        "groups"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\r\n    \"name\": \"Test Workspace D\",\r\n    \"Alias\" :\"QS-STATIC-TEST-D\",\r\n    \"parentId\": \"\",\r\n    \"description\": \"Required for to upload hardcoded packages\",\r\n    \"imageUrl\": \"\"\r\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.28..3 Create source package",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 201\", function () {\r",
                                            "    pm.response.to.have.status(201);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"source_package\", data.packageId)\r",
                                            "\r",
                                            "setTimeout(() => { }, 300);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\r\n    \"id\": \"QS-STATIC-TEST-D.PKG1\",\r\n    \"Alias\" :\"PKG1\",\r\n    \"name\": \"Source package\",\r\n    \"parentId\": \"QS-STATIC-TEST-D\",\r\n    \"kind\":\"package\",\r\n    \"serviceName\": \"backend\"\r\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.28.4 Publish version for source package",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 202\", function () {\r",
                                            "    pm.response.to.have.status(202);\r",
                                            "});\r",
                                            "\r",
                                            "setTimeout(function(){}, 20000)"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{source_package}}/publish",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{source_package}}",
                                        "publish"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Transfer-Encoding",
                                        "value": "base64",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"clientBuild\"\r\n\r\nfalse\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"config\"\r\n\r\n{\r\n    \"packageId\": \"{{source_package}}\",\r\n    \"version\": \"2024.3\",\r\n    \"status\": \"release\",\r\n    \"refs\": [],\r\n    \"files\": [{\r\n            \"fileId\": \"{{Pack_version1_fileId}}\",\r\n            \"publish\": true\r\n        }\r\n    ]\r\n}\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"sources\"; filename=\"petstore_yml.zip\"\r\nContent-Type: application/zip;base64\r\n\r\n{{Pack_version1_data}}\r\n----------------------------127308995100818139707097--",
                                    "options": {
                                        "raw": {
                                            "language": "text"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.28.5 Create Dashboard",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 201\", function () {\r",
                                            "    pm.response.to.have.status(201);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"static_root_dash_1\", data.id)\r",
                                            "pm.environment.set(\"dashboard_1\", data.packageId)"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\r\n    \"id\": \"QS-STATIC-TEST-D.Dash1\",\r\n    \"Alias\" :\"Dash1\",\r\n    \"name\": \"Dashboard for CSV\",\r\n    \"parentId\": \"QS-STATIC-TEST-D\",\r\n    \"kind\":\"dashboard\"\r\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.28.6 Start dashboard publish process",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 202\", function () {",
                                            "    pm.response.to.have.status(202);",
                                            "});",
                                            "",
                                            "var data = pm.response.json();",
                                            "pm.environment.set(\"csvDashPublishId\", data.publishId);",
                                            "",
                                            "let requestBody = pm.request.body.raw;",
                                            "",
                                            "// Updated regex to match multiline form-data value",
                                            "let versionMatch = requestBody.match(/name=\"version\"\\s*\\r?\\n\\r?\\n(.*?)\\r?\\n/);",
                                            "",
                                            "if (versionMatch && versionMatch[1]) {",
                                            "    let versionValue = versionMatch[1].trim();",
                                            "    pm.environment.set(\"version\", versionValue);",
                                            "    console.log(\"Extracted version:\", versionValue);",
                                            "} else {",
                                            "    console.log(\"Version not found in the request body\");",
                                            "}",
                                            "",
                                            "setTimeout(function(){}, 10000);",
                                            ""
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v1/packages/{{dashboard_1}}/publish/withOperationsGroup",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v1",
                                        "packages",
                                        "{{dashboard_1}}",
                                        "publish",
                                        "withOperationsGroup"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Transfer-Encoding",
                                        "value": "base64",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"version\"\r\n\r\n0001.1\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"status\"\r\n\r\nrelease\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"servicesWorkspaceId\"\r\n\r\nQS-STATIC-TEST-D\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"csvFile\"; filename=\"csv_for_publish - api-hub.csv\"\r\n\r\nbackend,2024.3,POST,/api/v1/store/order\r\n----------------------------127308995100818139707097--",
                                    "options": {
                                        "raw": {
                                            "language": "text"
                                        }
                                    }
                                },
                                "auth": {
                                    "type": "noauth"
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.28.7 Get status",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {",
                                            "    pm.response.to.have.status(200);",
                                            "});",
                                            "",
                                            "pm.test(\"Status = complete\", function () {",
                                            "    let jsonData = pm.response.json();",
                                            "    pm.expect(jsonData.status).to.eql(\"complete\");",
                                            "});",
                                            ""
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v1/packages/{{dashboard_1}}/publish/{{csvDashPublishId}}/withOperationsGroup/status",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v1",
                                        "packages",
                                        "{{dashboard_1}}",
                                        "publish",
                                        "{{csvDashPublishId}}",
                                        "withOperationsGroup",
                                        "status"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ],
                                "auth": {
                                    "type": "noauth"
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.28.8 Get report",
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v1/packages/{{dashboardId}}/publish/{{csvDashPublishId}}/withOperationsGroup/report",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v1",
                                        "packages",
                                        "{{dashboardId}}",
                                        "publish",
                                        "{{csvDashPublishId}}",
                                        "withOperationsGroup",
                                        "report"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ],
                                "auth": {
                                    "type": "noauth"
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.28.9  Get Group from dashboard",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "    let jsonData = pm.response.json();",
                                            "    ",
                                            "    // Extract the first groupName",
                                            "    let groupName = jsonData.operationGroups[0].groupName;",
                                            "",
                                            "    // Set it as an environment variable",
                                            "    pm.environment.set(\"groupName\", groupName);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v3/packages/{{dashboard_1}}/versions/{{version}}?includeGroups=true",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v3",
                                        "packages",
                                        "{{dashboard_1}}",
                                        "versions",
                                        "{{version}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "includeGroups",
                                            "value": "true"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ],
                                "auth": {
                                    "type": "noauth"
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "8.28.10 Get list of operations for operation group",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {",
                                            "    pm.response.to.have.status(200);",
                                            "});",
                                            "",
                                            "var data = pm.response.json();",
                                            "",
                                            "pm.test(\"Only one operation in group\", function () {",
                                            "    const operations = data.operations;",
                                            "    pm.expect(operations.length).to.eql(1);",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/versions/{{version}}/rest/groups/{{groupName}}",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{dashboard_1}}",
                                        "versions",
                                        "{{version}}",
                                        "rest",
                                        "groups",
                                        "{{groupName}}"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ],
                                "auth": {
                                    "type": "noauth"
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        }
                    ]
                }
            ]
        },
        {
            "name": "9. Bugs regression",
            "item": [
                {
                    "name": "9.1 APIHUB-3987 [BE] includeOperations flag for get version only includes latest operations",
                    "item": [
                        {
                            "name": "9.1.0 Package version publish",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 202\", function () {\r",
                                            "    pm.response.to.have.status(202);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"publish_id\", data.publishId)\r",
                                            "\r",
                                            "setTimeout(() => { },10000);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/publish",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "publish"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Transfer-Encoding",
                                        "value": "base64",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"clientBuild\"\r\n\r\nfalse\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"config\"\r\n\r\n{\r\n    \"version\": \"2001.3\",\r\n    \"status\": \"release\",\r\n    \"versionFolder\": \"qwerty\",\r\n    \"refs\": [],\r\n    \"files\": [{\r\n            \"fileId\": \"petstore.yaml\",\r\n            \"publish\": true\r\n        }\r\n    ]\r\n}\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"sources\"; filename=\"petstore_yml.zip\"\r\nContent-Type: application/zip;base64\r\n\r\nUEsDBBQAAAAIABFkaFUQiX2ZpQIAAIkKAAANAAAAcGV0c3RvcmUueWFtbNVWwW7bMAy9F+g/EN2AbofGaTvs4Ns2FFiAbSiw/oBm04k621IpOk0w7N9HyYrtZEmadgOK6hDEIkU+Pj3SNhZrZXUKJ5ej8Wh8cnyk68Kkx0cAcySnTZ3CuVjO/Q5rLjGF7/dqOkWCa2THhtCbSp1h7dAflFWrSvy+Tm6OjxySDxQMZ9BQmcKM2aZJYuPxkWvjjbRJ5pLHKp61/sElhpwi+39huaaqFC1T+KIdgypL8I4rq5REigX5JE+hFI/rgZHVNESM62ztpFUkwDnA7V1CNT5SpVm2u6WFmrsGaTnczNFlpC0H4j6be6hUvQTNWDlgA4TcUA2KwdQofFYIbyq1gPPx+O0gjPjdNZpQCihU6XBoctkMK9UBjGUtLaaCiFGIXDcVhirFwXh5IaYY31kj9zUs9PRiPD5NdxbzQeiZYg6KSC3BFCvmujVDla+o69firMbF6up2hi51/dPzwzME7x9ySZIOaMz0AA09FY5J19OhNTPCTr2JRFkr0g1ySW6dByPr4FyvCQtpnVdJZiqBKeFd0jq7xKtO2qkvuFBNybv5baRuixkLxUhk6AnY/wvuK588ArfGbem6T4SKEZRXwNamy4LDwW33BDF+a8qyO/eiSQ4zLvklv5P8975ZN5G57JtZeHdSgi50tvMC3MzcC/0fl5P8oBvYO/gCtM3B54f09oHF1OBO/m+kv3Uuje073UeOQ5E0zg+dcm1r/4N4rqIEurMehIK5KrXfk5nu+LmEIbf2kodGbwoBojkGu46y7q/S/LgV8O1er6E1Dep8U5GDZ6/qTsPkW4D1mhK0D3bAa3Lwknz/rjO0DdA//q3Arrce8PKzcL329j0at8IHgnc4hOteIoH1x1OamXyNxAqdk9ftPiLDmUdT2X9vQEyym80/UEsBAj8AFAAAAAgAEWRoVRCJfZmlAgAAiQoAAA0AJAAAAAAAAAAgAAAAAAAAAHBldHN0b3JlLnlhbWwKACAAAAAAAAEAGAAKKSMHVfPYARJQIwdV89gBOjCy/c3y2AFQSwUGAAAAAAEAAQBfAAAA0AIAAAAA\r\n----------------------------127308995100818139707097--",
                                    "options": {
                                        "raw": {
                                            "language": "text"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "9.1.1 Get publish status",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "var retry = parseInt(pm.environment.get(\"com_retry_counter\") || 0);\r",
                                            "var delay = parseInt(pm.environment.get(\"com_retry_delay\") || 0);\r",
                                            "\r",
                                            "var respBody = pm.response.json();\r",
                                            "\r",
                                            "if ((respBody.status != \"complete\") && retry < 15) {\r",
                                            "    retry++;\r",
                                            "    delay = 5000 + delay;\r",
                                            "\r",
                                            "\r",
                                            "pm.test(\"Status is ok, response is json\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "    pm.response.to.be.ok;\r",
                                            "});\r",
                                            "\r",
                                            "var respBody = pm.response.json();\r",
                                            "\r",
                                            "    setTimeout(function () { }, delay);\r",
                                            "    postman.setNextRequest(request.name);\r",
                                            "    pm.environment.set(\"com_retry_counter\", retry);\r",
                                            "    pm.environment.set(\"com_retry_delay\", delay);\r",
                                            "}\r",
                                            "else {\r",
                                            "    pm.environment.set(\"com_retry_counter\", null);\r",
                                            "    pm.environment.set(\"com_retry_delay\", null);\r",
                                            "\r",
                                            "    pm.test(\"Status code is 200\", function () {\r",
                                            "        pm.response.to.have.status(200);\r",
                                            "    });\r",
                                            "\r",
                                            "}\r",
                                            "setTimeout(function(){}, [100]);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/publish/{{publish_id}}/status",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "publish",
                                        "{{publish_id}}",
                                        "status"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "9.1.2 Get package versions",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"Packages has versions\", function () {\r",
                                            "    pm.expect(data.versions.length).to.greaterThan(0);\r",
                                            "});\r",
                                            "\r",
                                            "pm.environment.set(\"version_1\", data.versions[1].version.split(\"@\")[0]);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "versions"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "9.1.3 Check that operations displayed from last revision",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"Operations displayed\", function () {\r",
                                            "    pm.expect(data.operationTypes[0].operations.length).not.to.eq(0);\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_1}}?includeOperations=true",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "versions",
                                        "{{version_1}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "includeOperations",
                                            "value": "true"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "9.1.4 Check that operations displayed from specified revision",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"'notLatestRevision' displayed\", function () {\r",
                                            "    pm.expect(data.notLatestRevision).to.eq(true);\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_1}}@1?includeOperations=true",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{package_1}}",
                                        "versions",
                                        "{{version_1}}@1"
                                    ],
                                    "query": [
                                        {
                                            "key": "includeOperations",
                                            "value": "true"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        }
                    ]
                },
                {
                    "name": "9.2 Validation of special symbols in package's version name",
                    "item": [
                        {
                            "name": "9.2.1 Delete static test data from DB",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 204\", function () {\r",
                                            "    pm.response.to.have.status(204);\r",
                                            "});\r",
                                            ""
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/internal/clear/STATIC-TEST-3",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "internal",
                                        "clear",
                                        "STATIC-TEST-3"
                                    ]
                                },
                                "method": "DELETE",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "9.2.2 Add static test group",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 201\", function () {\r",
                                            "    pm.response.to.have.status(201);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"static_root_group_1\", data.groupId)"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v1/groups",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v1",
                                        "groups"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\r\n    \"name\": \"Test Workspace\",\r\n    \"Alias\" :\"QS-STATIC-TEST-3\",\r\n    \"parentId\": \"\",\r\n    \"description\": \"Required for to upload hardcoded packages\",\r\n    \"imageUrl\": \"\"\r\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "9.2.3 Add static package",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 201\", function () {\r",
                                            "    pm.response.to.have.status(201);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"special_package_1\", data.packageId)"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\r\n    \"id\": \"QS-STATIC-TEST-3.PKG1\",\r\n    \"Alias\" :\"PKG1\",\r\n    \"name\": \"Test static package 1\",\r\n    \"parentId\": \"QS-STATIC-TEST-3\",\r\n    \"kind\":\"package\",\r\n    \"description\": \"Package to be built\",\r\n    \"serviceName\": \"\",\r\n    \"imageUrl\": \"\"\r\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "9.2.4 Get no build task",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is OK\", function () {\r",
                                            "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/builders/5680525d-7c7b-47be-8ede-d502626a79dc/tasks",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "builders",
                                        "5680525d-7c7b-47be-8ede-d502626a79dc",
                                        "tasks"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
                                        "type": "default",
                                        "disabled": true
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "9.2.5 Publish verion with '?????' name",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 202\", function () {\r",
                                            "    pm.response.to.have.status(202);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"publish_id_1\", data.publishId)\r",
                                            "\r",
                                            "setTimeout(() => { },10000);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/QS-STATIC-TEST-3.PKG1/publish",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "QS-STATIC-TEST-3.PKG1",
                                        "publish"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Transfer-Encoding",
                                        "value": "base64",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"clientBuild\"\r\n\r\nfalse\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"config\"\r\n\r\n{\r\n    \"packageId\": \"QS-STATIC-TEST-3.PKG1\",\r\n    \"version\": \"?????\",\r\n    \"status\": \"draft\",\r\n    \"versionFolder\": \"qwerty\",\r\n    \"refs\": [],\r\n    \"files\": [{\r\n            \"fileId\": \"petstore.yaml\",\r\n            \"publish\": true\r\n        }\r\n    ]\r\n}\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"sources\"; filename=\"petstore_yml.zip\"\r\nContent-Type: application/zip;base64\r\n\r\nUEsDBBQAAAAIABFkaFUQiX2ZpQIAAIkKAAANAAAAcGV0c3RvcmUueWFtbNVWwW7bMAy9F+g/EN2AbofGaTvs4Ns2FFiAbSiw/oBm04k621IpOk0w7N9HyYrtZEmadgOK6hDEIkU+Pj3SNhZrZXUKJ5ej8Wh8cnyk68Kkx0cAcySnTZ3CuVjO/Q5rLjGF7/dqOkWCa2THhtCbSp1h7dAflFWrSvy+Tm6OjxySDxQMZ9BQmcKM2aZJYuPxkWvjjbRJ5pLHKp61/sElhpwi+39huaaqFC1T+KIdgypL8I4rq5REigX5JE+hFI/rgZHVNESM62ztpFUkwDnA7V1CNT5SpVm2u6WFmrsGaTnczNFlpC0H4j6be6hUvQTNWDlgA4TcUA2KwdQofFYIbyq1gPPx+O0gjPjdNZpQCihU6XBoctkMK9UBjGUtLaaCiFGIXDcVhirFwXh5IaYY31kj9zUs9PRiPD5NdxbzQeiZYg6KSC3BFCvmujVDla+o69firMbF6up2hi51/dPzwzME7x9ySZIOaMz0AA09FY5J19OhNTPCTr2JRFkr0g1ySW6dByPr4FyvCQtpnVdJZiqBKeFd0jq7xKtO2qkvuFBNybv5baRuixkLxUhk6AnY/wvuK588ArfGbem6T4SKEZRXwNamy4LDwW33BDF+a8qyO/eiSQ4zLvklv5P8975ZN5G57JtZeHdSgi50tvMC3MzcC/0fl5P8oBvYO/gCtM3B54f09oHF1OBO/m+kv3Uuje073UeOQ5E0zg+dcm1r/4N4rqIEurMehIK5KrXfk5nu+LmEIbf2kodGbwoBojkGu46y7q/S/LgV8O1er6E1Dep8U5GDZ6/qTsPkW4D1mhK0D3bAa3Lwknz/rjO0DdA//q3Arrce8PKzcL329j0at8IHgnc4hOteIoH1x1OamXyNxAqdk9ftPiLDmUdT2X9vQEyym80/UEsBAj8AFAAAAAgAEWRoVRCJfZmlAgAAiQoAAA0AJAAAAAAAAAAgAAAAAAAAAHBldHN0b3JlLnlhbWwKACAAAAAAAAEAGAAKKSMHVfPYARJQIwdV89gBOjCy/c3y2AFQSwUGAAAAAAEAAQBfAAAA0AIAAAAA\r\n----------------------------127308995100818139707097--",
                                    "options": {
                                        "raw": {
                                            "language": "text"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "9.2.6 Publish verion with '/////' name",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 202\", function () {\r",
                                            "    pm.response.to.have.status(202);\r",
                                            "});\r",
                                            "\r",
                                            "var data = JSON.parse(responseBody);\r",
                                            "pm.environment.set(\"publish_id_2\", data.publishId)\r",
                                            "\r",
                                            "setTimeout(() => { },20000);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/QS-STATIC-TEST-3.PKG1/publish",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "QS-STATIC-TEST-3.PKG1",
                                        "publish"
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
                                        "type": "default"
                                    },
                                    {
                                        "key": "Content-Transfer-Encoding",
                                        "value": "base64",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"clientBuild\"\r\n\r\nfalse\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"config\"\r\n\r\n{\r\n    \"packageId\": \"QS-STATIC-TEST-3.PKG1\",\r\n    \"version\": \"/////\",\r\n    \"status\": \"draft\",\r\n    \"versionFolder\": \"qwerty\",\r\n    \"refs\": [],\r\n    \"files\": [{\r\n            \"fileId\": \"petstore.yaml\",\r\n            \"publish\": true\r\n        }\r\n    ]\r\n}\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"sources\"; filename=\"petstore_yml.zip\"\r\nContent-Type: application/zip;base64\r\n\r\nUEsDBBQAAAAIABFkaFUQiX2ZpQIAAIkKAAANAAAAcGV0c3RvcmUueWFtbNVWwW7bMAy9F+g/EN2AbofGaTvs4Ns2FFiAbSiw/oBm04k621IpOk0w7N9HyYrtZEmadgOK6hDEIkU+Pj3SNhZrZXUKJ5ej8Wh8cnyk68Kkx0cAcySnTZ3CuVjO/Q5rLjGF7/dqOkWCa2THhtCbSp1h7dAflFWrSvy+Tm6OjxySDxQMZ9BQmcKM2aZJYuPxkWvjjbRJ5pLHKp61/sElhpwi+39huaaqFC1T+KIdgypL8I4rq5REigX5JE+hFI/rgZHVNESM62ztpFUkwDnA7V1CNT5SpVm2u6WFmrsGaTnczNFlpC0H4j6be6hUvQTNWDlgA4TcUA2KwdQofFYIbyq1gPPx+O0gjPjdNZpQCihU6XBoctkMK9UBjGUtLaaCiFGIXDcVhirFwXh5IaYY31kj9zUs9PRiPD5NdxbzQeiZYg6KSC3BFCvmujVDla+o69firMbF6up2hi51/dPzwzME7x9ySZIOaMz0AA09FY5J19OhNTPCTr2JRFkr0g1ySW6dByPr4FyvCQtpnVdJZiqBKeFd0jq7xKtO2qkvuFBNybv5baRuixkLxUhk6AnY/wvuK588ArfGbem6T4SKEZRXwNamy4LDwW33BDF+a8qyO/eiSQ4zLvklv5P8975ZN5G57JtZeHdSgi50tvMC3MzcC/0fl5P8oBvYO/gCtM3B54f09oHF1OBO/m+kv3Uuje073UeOQ5E0zg+dcm1r/4N4rqIEurMehIK5KrXfk5nu+LmEIbf2kodGbwoBojkGu46y7q/S/LgV8O1er6E1Dep8U5GDZ6/qTsPkW4D1mhK0D3bAa3Lwknz/rjO0DdA//q3Arrce8PKzcL329j0at8IHgnc4hOteIoH1x1OamXyNxAqdk9ftPiLDmUdT2X9vQEyym80/UEsBAj8AFAAAAAgAEWRoVRCJfZmlAgAAiQoAAA0AJAAAAAAAAAAgAAAAAAAAAHBldHN0b3JlLnlhbWwKACAAAAAAAAEAGAAKKSMHVfPYARJQIwdV89gBOjCy/c3y2AFQSwUGAAAAAAEAAQBfAAAA0AIAAAAA\r\n----------------------------127308995100818139707097--",
                                    "options": {
                                        "raw": {
                                            "language": "text"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "9.2.7 Get package build 1 status",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "var retry = parseInt(pm.environment.get(\"com_retry_counter\") || 0);\r",
                                            "var delay = parseInt(pm.environment.get(\"com_retry_delay\") || 0);\r",
                                            "\r",
                                            "var respBody = pm.response.json();\r",
                                            "\r",
                                            "if ((respBody.status != \"complete\") && retry < 5) {\r",
                                            "    retry++;\r",
                                            "    delay = 5000 + delay;\r",
                                            "\r",
                                            "\r",
                                            "pm.test(\"Status is ok, response is json\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "    pm.response.to.be.ok;\r",
                                            "});\r",
                                            "\r",
                                            "var respBody = pm.response.json();\r",
                                            "\r",
                                            "    setTimeout(function () { }, delay);\r",
                                            "    postman.setNextRequest(request.name);\r",
                                            "    pm.environment.set(\"com_retry_counter\", retry);\r",
                                            "    pm.environment.set(\"com_retry_delay\", delay);\r",
                                            "}\r",
                                            "else {\r",
                                            "    pm.environment.set(\"com_retry_counter\", null);\r",
                                            "    pm.environment.set(\"com_retry_delay\", null);\r",
                                            "\r",
                                            "    pm.test(\"Status code is 200\", function () {\r",
                                            "        pm.response.to.have.status(200);\r",
                                            "    });\r",
                                            "\r",
                                            "}\r",
                                            "setTimeout(function(){}, [100]);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/QS-STATIC-TEST-3.PKG1/publish/{{publish_id_1}}/status",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "QS-STATIC-TEST-3.PKG1",
                                        "publish",
                                        "{{publish_id_1}}",
                                        "status"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "9.2.8 Get package build 2 status",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "var retry = parseInt(pm.environment.get(\"com_retry_counter\") || 0);\r",
                                            "var delay = parseInt(pm.environment.get(\"com_retry_delay\") || 0);\r",
                                            "\r",
                                            "var respBody = pm.response.json();\r",
                                            "\r",
                                            "if ((respBody.status != \"complete\") && retry < 5) {\r",
                                            "    retry++;\r",
                                            "    delay = 5000 + delay;\r",
                                            "\r",
                                            "\r",
                                            "pm.test(\"Status is ok, response is json\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "    pm.response.to.be.ok;\r",
                                            "});\r",
                                            "\r",
                                            "var respBody = pm.response.json();\r",
                                            "\r",
                                            "    setTimeout(function () { }, delay);\r",
                                            "    postman.setNextRequest(request.name);\r",
                                            "    pm.environment.set(\"com_retry_counter\", retry);\r",
                                            "    pm.environment.set(\"com_retry_delay\", delay);\r",
                                            "}\r",
                                            "else {\r",
                                            "    pm.environment.set(\"com_retry_counter\", null);\r",
                                            "    pm.environment.set(\"com_retry_delay\", null);\r",
                                            "\r",
                                            "    pm.test(\"Status code is 200\", function () {\r",
                                            "        pm.response.to.have.status(200);\r",
                                            "    });\r",
                                            "\r",
                                            "}\r",
                                            "setTimeout(function(){}, [100]);"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/QS-STATIC-TEST-3.PKG1/publish/{{publish_id_2}}/status",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "QS-STATIC-TEST-3.PKG1",
                                        "publish",
                                        "{{publish_id_2}}",
                                        "status"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "9.2.9 Get package versions",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"Packages has versions\", function () {\r",
                                            "    pm.expect(data.versions.length).to.greaterThan(0);\r",
                                            "});\r",
                                            "\r",
                                            "pm.environment.set(\"special_version_1\", '%2F%2F%2F%2F%2F');\r",
                                            "pm.environment.set(\"special_version_2\", '%3F%3F%3F%3F%3F')"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{special_package_1}}/versions",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{special_package_1}}",
                                        "versions"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "9.2.10 Get content  of version with '/////' name",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"Packages has versions\", function () {\r",
                                            "    pm.expect(data.status).to.eql('draft');\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{special_package_1}}/versions/{{special_version_1}}",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{special_package_1}}",
                                        "versions",
                                        "{{special_version_1}}"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "9.2.11 Get content  of version with '?????' name",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"Packages has versions\", function () {\r",
                                            "    pm.expect(data.status).to.eql('draft');\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{special_package_1}}/versions/{{special_version_2}}",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{special_package_1}}",
                                        "versions",
                                        "{{special_version_2}}"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "9.2.12 Update version with '/////' name",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"Expected label is present\", () => {\r",
                                            "    pm.expect(data.versionLabels).to.include(\"API_Smoke\")\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{special_package_1}}/versions/{{special_version_1}}",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{special_package_1}}",
                                        "versions",
                                        "{{special_version_1}}"
                                    ]
                                },
                                "method": "PATCH",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": " {\r\n     \"versionLabels\": [\r\n         \"API_Smoke\"\r\n        ]\r\n }",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "9.2.13 Update version with '?????' name",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"Expected label is present\", () => {\r",
                                            "    pm.expect(data.versionLabels).to.include(\"API_Smoke\")\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{special_package_1}}/versions/{{special_version_2}}",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{special_package_1}}",
                                        "versions",
                                        "{{special_version_2}}"
                                    ]
                                },
                                "method": "PATCH",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": " {\r\n     \"versionLabels\": [\r\n         \"API_Smoke\"\r\n        ]\r\n }",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "9.2.14 Delete version with '/////' name",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 204\", function () {\r",
                                            "    pm.response.to.have.status(204);\r",
                                            "});\r",
                                            ""
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{special_package_1}}/versions/{{special_version_1}}",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{special_package_1}}",
                                        "versions",
                                        "{{special_version_1}}"
                                    ]
                                },
                                "method": "DELETE",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "9.2.15 Delete version with '?????' name",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 204\", function () {\r",
                                            "    pm.response.to.have.status(204);\r",
                                            "});\r",
                                            ""
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{special_package_1}}/versions/{{special_version_2}}",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{special_package_1}}",
                                        "versions",
                                        "{{special_version_2}}"
                                    ]
                                },
                                "method": "DELETE",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        },
                        {
                            "name": "9.2.16 Get package versions",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {\r",
                                            "    pm.response.to.have.status(200);\r",
                                            "});\r",
                                            "\r",
                                            "var data = pm.response.json();\r",
                                            "\r",
                                            "pm.test(\"Package has no versions\", () => {\r",
                                            "    pm.expect(data.versions.length).to.eql(0);\r",
                                            "});"
                                        ]
                                    }
                                },
                                {
                                    "listen": "prerequest",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "url": {
                                    "raw": "{{SERVER_HOST}}/api/v2/packages/{{special_package_1}}/versions",
                                    "host": [
                                        "{{SERVER_HOST}}"
                                    ],
                                    "path": [
                                        "api",
                                        "v2",
                                        "packages",
                                        "{{special_package_1}}",
                                        "versions"
                                    ]
                                },
                                "method": "GET",
                                "header": [
                                    {
                                        "key": "api-key",
                                        "value": "{{at-api-key}}",
                                        "type": "default"
                                    }
                                ]
                            },
                            "response": [],
                            "protocolProfileBehavior": {}
                        }
                    ]
                }
            ]
        },
        {
            "name": "10. Cleanup",
            "auth": {
                "type": "bearer",
                "bearer": [
                    {
                        "key": "token",
                        "value": "",
                        "type": "string"
                    }
                ]
            },
            "item": [
                {
                    "name": "10.3 Delete test data from DB",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(\"Status code is 204\", function () {\r",
                                    "    pm.response.to.have.status(204);\r",
                                    "});\r",
                                    ""
                                ]
                            }
                        },
                        {
                            "listen": "prerequest",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "url": {
                            "raw": "{{SERVER_HOST}}/api/internal/clear/{{test_id}}",
                            "host": [
                                "{{SERVER_HOST}}"
                            ],
                            "path": [
                                "api",
                                "internal",
                                "clear",
                                "{{test_id}}"
                            ]
                        },
                        "method": "DELETE",
                        "header": [
                            {
                                "key": "api-key",
                                "value": "{{at-api-key}}",
                                "type": "default"
                            }
                        ]
                    },
                    "response": [],
                    "protocolProfileBehavior": {}
                },
                {
                    "name": "10.4 Delete static_test_1 data from DB",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(\"Status code is 204\", function () {\r",
                                    "    pm.response.to.have.status(204);\r",
                                    "});\r",
                                    ""
                                ]
                            }
                        },
                        {
                            "listen": "prerequest",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "url": {
                            "raw": "{{SERVER_HOST}}/api/internal/clear/STATIC-TEST-1",
                            "host": [
                                "{{SERVER_HOST}}"
                            ],
                            "path": [
                                "api",
                                "internal",
                                "clear",
                                "STATIC-TEST-1"
                            ]
                        },
                        "method": "DELETE",
                        "header": [
                            {
                                "key": "api-key",
                                "value": "{{at-api-key}}",
                                "type": "default"
                            }
                        ]
                    },
                    "response": [],
                    "protocolProfileBehavior": {}
                },
                {
                    "name": "10.5 Delete static_test_2 data from DB",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(\"Status code is 204\", function () {\r",
                                    "    pm.response.to.have.status(204);\r",
                                    "});\r",
                                    ""
                                ]
                            }
                        },
                        {
                            "listen": "prerequest",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "url": {
                            "raw": "{{SERVER_HOST}}/api/internal/clear/STATIC-TEST-2",
                            "host": [
                                "{{SERVER_HOST}}"
                            ],
                            "path": [
                                "api",
                                "internal",
                                "clear",
                                "STATIC-TEST-2"
                            ]
                        },
                        "method": "DELETE",
                        "header": [
                            {
                                "key": "api-key",
                                "value": "{{at-api-key}}",
                                "type": "default"
                            }
                        ]
                    },
                    "response": [],
                    "protocolProfileBehavior": {}
                },
                {
                    "name": "10.6 Delete static_test_3 data from DB",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(\"Status code is 204\", function () {\r",
                                    "    pm.response.to.have.status(204);\r",
                                    "});\r",
                                    ""
                                ]
                            }
                        },
                        {
                            "listen": "prerequest",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "url": {
                            "raw": "{{SERVER_HOST}}/api/internal/clear/STATIC-TEST-3",
                            "host": [
                                "{{SERVER_HOST}}"
                            ],
                            "path": [
                                "api",
                                "internal",
                                "clear",
                                "STATIC-TEST-3"
                            ]
                        },
                        "method": "DELETE",
                        "header": [
                            {
                                "key": "api-key",
                                "value": "{{at-api-key}}",
                                "type": "default"
                            }
                        ]
                    },
                    "response": [],
                    "protocolProfileBehavior": {}
                }
            ]
        }
    ],
    "event": [
        {
            "listen": "prerequest",
            "script": {
                "type": "text/javascript",
                "exec": [
                    ""
                ]
            }
        },
        {
            "listen": "test",
            "script": {
                "type": "text/javascript",
                "exec": [
                    ""
                ]
            }
        }
    ],
    "variable": []
}