{
    "info": {
        "name": "1_2_Smoke_Agent",
        "_postman_id": "8f0dbfc4-8183-4adb-9bb2-3d39742440e7",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
        {
            "name": "1.0 Get list of Agents",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text/javascript",
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "",
                            "var data = pm.response.json();",
                            "",
                            "pm.test(\"Al least one Agent is available\", function () {",
                            "    pm.expect(data.length).to.greaterThan(0);",
                            "});",
                            "",
                            "var serverHost = pm.environment.get('SERVER_HOST');",
                            "",
                            "// Iterate through agents to find a match based on SERVER_HOST",
                            "var agentId = null;",
                            "for (var i = 0; i < data.length; i++) {",
                            "    if (serverHost.includes(data[i].agentDeploymentNamespace) && serverHost.includes(data[i].agentDeploymentCloud)) {",
                            "        agentId = data[i].agentId;",
                            "        break;",
                            "    }",
                            "}",
                            "",
                            "// Set agentId to a new environment variable",
                            "pm.environment.set('agentId', agentId);",
                            ""
                        ]
                    }
                },
                {
                    "listen": "prerequest",
                    "script": {
                        "type": "text/javascript",
                        "exec": [
                            ""
                        ]
                    }
                }
            ],
            "request": {
                "url": {
                    "raw": "{{SERVER_HOST}}/agents-backend/api/v2/agents",
                    "host": [
                        "{{SERVER_HOST}}"
                    ],
                    "path": [
                        "agents-backend",
                        "api",
                        "v2",
                        "agents"
                    ]
                },
                "method": "GET",
                "header": [
                    {
                        "key": "api-key",
                        "value": "{{at-api-key}}",
                        "type": "default"
                    }
                ],
                "auth": {
                    "type": "noauth"
                }
            },
            "response": [],
            "protocolProfileBehavior": {}
        },
        {
            "name": "1.1 Check Namespace list",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text/javascript",
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {\r",
                            "    pm.response.to.have.status(200);\r",
                            "});\r",
                            "\r",
                            "const response = pm.response.json();\r",
                            "const namespaces = response.namespaces;\r",
                            "const agentId = pm.environment.get(\"agentId\");\r",
                            "const partialNamespace = agentId.split('_')[1];\r",
                            "\r",
                            "if (partialNamespace && namespaces.includes(partialNamespace)) {\r",
                            "    pm.environment.set(\"namespace\", partialNamespace);\r",
                            "} else {\r",
                            "    pm.environment.unset(\"namespace\");\r",
                            "}\r",
                            "\r",
                            "pm.test(\"Partial namespace matched successfully\", function () {\r",
                            "    pm.expect(namespaces).to.include(partialNamespace, `Expected partial namespace '${partialNamespace}' to match a namespace`);\r",
                            "});\r",
                            ""
                        ]
                    }
                },
                {
                    "listen": "prerequest",
                    "script": {
                        "type": "text/javascript",
                        "exec": [
                            ""
                        ]
                    }
                }
            ],
            "request": {
                "url": {
                    "raw": "{{SERVER_HOST}}/agents-backend/api/v1/agents/{{agentId}}/namespaces",
                    "host": [
                        "{{SERVER_HOST}}"
                    ],
                    "path": [
                        "agents-backend",
                        "api",
                        "v1",
                        "agents",
                        "{{agentId}}",
                        "namespaces"
                    ]
                },
                "method": "GET",
                "header": [
                    {
                        "key": "api-key",
                        "value": "{{at-api-key}}",
                        "type": "default"
                    }
                ]
            },
            "response": [],
            "protocolProfileBehavior": {}
        },
        {
            "name": "1.2 Start discovery process",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text/javascript",
                        "exec": [
                            "pm.test(\"Status code is 202\", function () {\r",
                            "    pm.response.to.have.status(202);\r",
                            "});\r",
                            "\r",
                            "setTimeout(() => { }, 50000);"
                        ]
                    }
                },
                {
                    "listen": "prerequest",
                    "script": {
                        "type": "text/javascript",
                        "exec": [
                            ""
                        ]
                    }
                }
            ],
            "request": {
                "url": {
                    "raw": "{{SERVER_HOST}}/agents-backend/api/v2/agents/{{agentId}}/namespaces/{{namespace}}/workspaces/NC/discover",
                    "host": [
                        "{{SERVER_HOST}}"
                    ],
                    "path": [
                        "agents-backend",
                        "api",
                        "v2",
                        "agents",
                        "{{agentId}}",
                        "namespaces",
                        "{{namespace}}",
                        "workspaces",
                        "NC",
                        "discover"
                    ]
                },
                "method": "POST",
                "header": [
                    {
                        "key": "api-key",
                        "value": "{{at-api-key}}",
                        "type": "default"
                    }
                ],
                "body": {
                    "mode": "raw",
                    "raw": "",
                    "options": {
                        "raw": {
                            "language": "json"
                        }
                    }
                }
            },
            "response": [],
            "protocolProfileBehavior": {}
        },
        {
            "name": "1.3 Get list of services",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text/javascript",
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {\r",
                            "    pm.response.to.have.status(200);\r",
                            "});\r",
                            "\r",
                            "var data = JSON.parse(responseBody);\r",
                            "\r",
                            "var serviceName = [];\r",
                            "\r",
                            "for (var i = 0; i<data.services.length; i++) {\r",
                            "    serviceName.push(data.services[i].serviceName)\r",
                            "}\r",
                            "\r",
                            "pm.test(\"'apihub-backend' service is present in the list\", () => {\r",
                            "    pm.expect(serviceName).to.include(\"apihub-backend\")\r",
                            "});\r",
                            "\r",
                            "for (var i = 0; i<data.services.length; i++) {\r",
                            "    if (data.services[i].serviceName === \"apihub-backend\"){\r",
                            "        pm.environment.set(\"service_name\", data.services[i].id),\r",
                            "        pm.environment.set(\"spec_id\", data.services[i].specs[0].fileId)\r",
                            "    }\r",
                            "}"
                        ]
                    }
                },
                {
                    "listen": "prerequest",
                    "script": {
                        "type": "text/javascript",
                        "exec": [
                            ""
                        ]
                    }
                }
            ],
            "request": {
                "url": {
                    "raw": "{{SERVER_HOST}}/agents-backend/api/v2/agents/{{agentId}}/namespaces/{{namespace}}/workspaces/NC/services",
                    "host": [
                        "{{SERVER_HOST}}"
                    ],
                    "path": [
                        "agents-backend",
                        "api",
                        "v2",
                        "agents",
                        "{{agentId}}",
                        "namespaces",
                        "{{namespace}}",
                        "workspaces",
                        "NC",
                        "services"
                    ]
                },
                "method": "GET",
                "header": [
                    {
                        "key": "api-key",
                        "value": "{{at-api-key}}",
                        "type": "default"
                    }
                ]
            },
            "response": [],
            "protocolProfileBehavior": {}
        },
        {
            "name": "1.4 Get service specification",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text/javascript",
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {\r",
                            "    pm.response.to.have.status(200);\r",
                            "});"
                        ]
                    }
                },
                {
                    "listen": "prerequest",
                    "script": {
                        "type": "text/javascript",
                        "exec": [
                            ""
                        ]
                    }
                }
            ],
            "request": {
                "url": {
                    "raw": "{{SERVER_HOST}}/agents-backend/api/v2/agents/{{agentId}}/namespaces/{{namespace}}/workspaces/NC/services/{{service_name}}/specs/{{spec_id}}",
                    "host": [
                        "{{SERVER_HOST}}"
                    ],
                    "path": [
                        "agents-backend",
                        "api",
                        "v2",
                        "agents",
                        "{{agentId}}",
                        "namespaces",
                        "{{namespace}}",
                        "workspaces",
                        "NC",
                        "services",
                        "{{service_name}}",
                        "specs",
                        "{{spec_id}}"
                    ]
                },
                "method": "GET",
                "header": [
                    {
                        "key": "api-key",
                        "value": "{{at-api-key}}",
                        "type": "default"
                    }
                ]
            },
            "response": [],
            "protocolProfileBehavior": {}
        },
        {
            "name": "1.5 Check non existing service specification",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text/javascript",
                        "exec": [
                            "pm.test(\"Status code is 404\", function () {\r",
                            "    pm.response.to.have.status(404);\r",
                            "});"
                        ]
                    }
                },
                {
                    "listen": "prerequest",
                    "script": {
                        "type": "text/javascript",
                        "exec": [
                            ""
                        ]
                    }
                }
            ],
            "request": {
                "url": {
                    "raw": "{{SERVER_HOST}}/agents-backend/api/v2/agents/{{agentId}}/namespaces/{{namespace}}/workspaces/NC/services/{{service_name}}/specs/nothing123",
                    "host": [
                        "{{SERVER_HOST}}"
                    ],
                    "path": [
                        "agents-backend",
                        "api",
                        "v2",
                        "agents",
                        "{{agentId}}",
                        "namespaces",
                        "{{namespace}}",
                        "workspaces",
                        "NC",
                        "services",
                        "{{service_name}}",
                        "specs",
                        "nothing123"
                    ]
                },
                "method": "GET",
                "header": [
                    {
                        "key": "api-key",
                        "value": "{{at-api-key}}",
                        "type": "default"
                    }
                ]
            },
            "response": [],
            "protocolProfileBehavior": {}
        }
    ],
    "event": [
        {
            "listen": "prerequest",
            "script": {
                "type": "text/javascript",
                "exec": [
                    ""
                ]
            }
        },
        {
            "listen": "test",
            "script": {
                "type": "text/javascript",
                "exec": [
                    ""
                ]
            }
        }
    ],
    "variable": []
}