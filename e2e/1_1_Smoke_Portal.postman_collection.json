{
	"info": {
		"_postman_id": "5a2c0398-65d8-4d22-804d-d2a1f5d91616",
		"name": "1_1_Smoke_Portal",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "42125880"
	},
	"item": [
		{
			"name": "0. Init",
			"item": [
				{
					"name": "0.1 Login",
					"item": [
						{
							"name": "0.1.1 Create x_APIHUB user (if no exists)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"User exists\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201, 400]);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"email\": \"x_apihub\",\r\n  \"name\": \"x_APIHUB\",\r\n  \"password\": \"Tmf@c23s\",\r\n  \"privateWorkspaceId\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/internal/users",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"internal",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "0.1.2 Local Auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var data = JSON.parse(responseBody);",
											"",
											"pm.environment.set(\"token\", data.token)"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{Username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{Password}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/auth/local",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"auth",
										"local"
									]
								}
							},
							"response": []
						},
						{
							"name": "0.1.3 Add role to user",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is OK\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \r\n    \"role\": \"System administrator\" \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/internal/users/{{Username}}/systemRole",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"internal",
										"users",
										"{{Username}}",
										"systemRole"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "0.2 Prerequisites",
					"item": [
						{
							"name": "0.2.5 Set env",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var data = JSON.parse(responseBody);\r",
											"pm.test(\"Production mode is false\", function () {\r",
											"    if (data.productionMode === true){\r",
											"        pm.environment.unset(\"token\")\r",
											"        throw new Error('You are trying to run tests on production!')\r",
											"    }\r",
											"});\r",
											"if (data.productionMode === true){\r",
											"    return\r",
											"}\r",
											"\r",
											"pm.environment.set(\"test_id\", pm.variables.replaceIn('{{$timestamp}}'))\r",
											"\r",
											"pm.environment.set(\"Pack_version1_data\", \"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\");\r",
											"pm.environment.set(\"Pack_version1_fileId\", \"atui_petstore30 - 0000.yaml\");\r",
											"pm.environment.set(\"Pack_version2_data\", \"UEsDBBQACAAIAEpaOFoAAAAAAAAAAAAAAAA6ACAAYXR1aV9wZXRzdG9yZTMwIC0gMDAwMF9TZW1pQnJlYWtpbmdfaW5fYWxsX29wZXJhdGlvbnMueWFtbHV4CwABBAAAAAAEAAAAAFVUDQAH3FqTZx5bk2feulJn7Vptb9s2EP4eIP+B6wZ4BSorb90HfRiatingYUgCONkwFMNAS7TFRiI1kori/frdUe+yZCtJvQ1DjBZwxHu/e45HyjJhgibcI6fTo+np4QEXS+kdHhBiuImYR85vbmfkmhltpGJIhGsB077iieFSeORHBx8RcskyYpg2xCE3IdcE/lGiaZxEDAWQuZUwZ+qeKbKgmgVECmJCRq7AhvPrWSmdEJ0wny+5T1HDlJDfZEp8KsiSC2BKDYlRFF3A18ODnGWe0dUKBFNDPofGJNpzXZ0/m3L5+/ebz15PySzXb0KuAsINU1ZhLlAu7VoCllvf35CMTe4Z0Rk3fgjGG2kJIBZ8haYpcJ0miZLUD78pzSotFzIjIYsSkkJgYiC6Z5Yb3c5CBl8VGDDRZLEmMb3jYkX8kIoV04WeXFzAIAQcjQRqzaIlkao0xJcBm5Z6b0IIREbXYDU3ISQztg5YW7r6uSArJsD56A2hEGD2kEgNjsqYQRRyeUgrIMFLRk2qwCpgujqfn1qFRQaQPtVsmUYk4uJOe+WKQz7fhI0iyJ8qBmo4/L2us7MCY9PF1JdxmSgHirP6nhR1+LojWctU+bkzjQgtMTa53sJC5H20MncRyYUbUw314Wrlw1cuXIiBVapdmSNouqZx9Noih6lYXy2x0rkPEEJ9rcpzLYWLtL4UhvrGyw1kIDryoIqgFmn8rubA5QiECc0KUkFjRGcCxcbISQmcVEWVvizLptSuT6VauQW7dn+efbi4nF84wDQNTRwhJ0BSWzAfw0OQxR7AREGjj9LX3gbiP23CsMQf0jaNaLqgLfRzeU5NhakoY306bUQJk3F/fHhg6Kpkyr1OyoS2rLoA4WuAMkAnN2kNCbKtqwhu16cNCS2/Soohb2pzdF3TLXHnPpSHxW/VP6UKIAJPsqdwCn1qKBxjH2BS9ZgHXTfvd7oQndMl1IS5PZiVwrAkNZWJVTryj1OnAxp3GsdUrT1o8zF33ivWbGXYMxRLNV3AjqChLmNKXkFoXmHTe0DsOXfoMSgo5dVPPWihziLz6xWInxNIBKOtiI/2a28cb5OAGgiggJhzbdAibOugdRaUDLKMxgxUpZbhuvZLsT9T2Nrey2DdcH2bEiaMVcLzLaaVshz2QNGQRXDviIotz/2iQWRzkRQB6zwk5DvFlh6ZfOtCG0ukAKHazUm1Cw5MhjQ8xNGeFTjQgBzowbEDJcoEbk/B11aJeeEK5BKjUlZnSwMb9LqG5MnJ0dGkpamVvXlqwYp7V1UJTeK+hO1M2aCDj4vqrsR9FTWTs63xmYl7GvGAzD4CxtEaFrR4z7bw4r4vpIH9OBVtrrdbuH5BfdZlAJTPkmZGNPNTxc2624Ysyv6gqQk7sXBIBvTMS6rdoF6BJhU0FmAo2Vevu4UGa5tdwBLFIJ8wRYKIu96mdR4EMD/jzIVtpJjxWm1kRwtsdTQaBI9rZx/AH2xnlQX/ZiPDwO23k23XsJ9W1tH5v+xlG3HdUzPr6NnRW8puxkWS1njeW1PBQQr/zwI3TSJJg1lMV+Ug//h+MxNwvGL9bWdwkmr5P6lC1Rl70LhPPGq0mCfOX/0d5gndYrAcivuJeUyj6Grxhflmk2SdAIXsX4QzMPhueAtZjU8MEKqztPHJZWujIPgDJOzBXn7AaAjFSXzbUANIY4nOaN3LiN1lQGuulEMQV+VIP6j05Oi4l2LBg5lh8Xa/BmKWf3ZFDj+XLLumCo4fcMYZpuqUZXltdHnxK0lK7i3MI8JRKFnSNDJwut1CFHPB4zQGokGSAe6qcQ9Jd1rheEZn1/vp7MMtdwzKdtbM7nrZgbVRaHsy3rYibmSR7UTdTtyNQt447I1H3zPxNx6BIzH4HBSOwOEQEve48+c3iPbaZ9R+3xqvx+74Y44TTxPRGg+SiPrsCl15GQKasl+GgF6KlyGg9XkZAl6GgJch4L84BNTXCZapuFIoBGAZ1dt1T3Z6FDqEV/ecvbnibfMGA4hXTtTYpR/OmgtVqR0f1Y/tK+hLfOWzKXwTNZWIn2TY6B8RfZIM4GhMQvl7zEdJ+AJWvLN8+EK2Jkmo1hnMT4+TNjk+OT1727gQSkLI8DNl4PuxuaEm1eOy1349hO0o5x7I8OlJf4arYat1V9Z9tXdDV1vLdB91KMbUSZ/Z1b3UNav3qV4gQd6MvFWR/qd9G8BYZU+PcKoUbe0um7ebmYJ9uHvFa62FXaHbzYf3u75r0+LVeGFfvdo5YuzL2G2Xs1CbDRjpIQhtetpCUP5LHOQdeBcBKRNpd291CL2HpoLvYboLCRPBRmjhCCajYFvxFley5aFxjk5Wldd/aiyKFp9VIF9GMmvVa4wDGu+ci4BDKv6Xndtud/5iwmpwS6aWw9oHjHSTVp9iPRLLgC/X1gGMr/3xBPV9mYrOIFIdcD37NafEv/8GUEsHCIB1Nf0aBwAASyYAAFBLAQIUAxQACAAIAEpaOFqAdTX9GgcAAEsmAAA6ABgAAAAAAAAAAAC2gQAAAABhdHVpX3BldHN0b3JlMzAgLSAwMDAwX1NlbWlCcmVha2luZ19pbl9hbGxfb3BlcmF0aW9ucy55YW1sdXgLAAEEAAAAAAQAAAAAVVQFAAHcWpNnUEsFBgAAAAABAAEAgAAAAKIHAAAAAA==\");\r",
											"pm.environment.set(\"Pack_version2_fileId\", \"atui_petstore30 - 0000_SemiBreaking_in_all_operations.yaml\");"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v1/system/info",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v1",
										"system",
										"info"
									]
								}
							},
							"response": []
						},
						{
							"name": "0.2.6 Delete static test-1 data from DB",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/internal/clear/STATIC-TEST-1",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"internal",
										"clear",
										"STATIC-TEST-1"
									]
								}
							},
							"response": []
						},
						{
							"name": "0.2.7 Delete static test-2 data from DB",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/internal/clear/STATIC-TEST-2",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"internal",
										"clear",
										"STATIC-TEST-2"
									]
								}
							},
							"response": []
						},
						{
							"name": "0.2.8 Delete static test-3 data from DB",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/internal/clear/STATIC-TEST-3",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"internal",
										"clear",
										"STATIC-TEST-3"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "0.4 Users Search",
					"item": [
						{
							"name": "0.4.1 Get avatar of non existing user",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"var data = pm.response.json();\r",
											"\r",
											"pm.test(\"Avatar not found\", function () {\r",
											"    pm.expect(data.message).to.eql('User avatar not found for userid: $userid');\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/users/nothing123/profile/avatar",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"users",
										"nothing123",
										"profile",
										"avatar"
									]
								}
							},
							"response": []
						},
						{
							"name": "0.4.2 Get users list",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = pm.response.json();\r",
											"\r",
											"for (var i = 0; i<data.users.length; i++) {\r",
											"    if (data.users[i].id === pm.variables.replaceIn(\"{{Username}}\")){\r",
											"        pm.environment.set(\"User_name\", data.users[i].name),\r",
											"        pm.environment.set(\"User_id\", data.users[i].id),\r",
											"        pm.environment.set(\"User_email\", data.users[i].email)\r",
											"    }\r",
											"}"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/users?filter={{Username}}&page=0",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"users"
									],
									"query": [
										{
											"key": "filter",
											"value": "{{Username}}"
										},
										{
											"key": "page",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "0.4.2-1 Get users list",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"let response = pm.response.json();\r",
											"\r",
											"let userWithAvatar = response.users.find(user => user.avatarUrl && user.avatarUrl.trim() !== \"\");\r",
											"\r",
											"if (userWithAvatar) {\r",
											"    // Set the `id` as an environment variable\r",
											"    pm.environment.set(\"USER_ID_WITH_AVATAR\", userWithAvatar.id);\r",
											"} else {\r",
											"    pm.environment.unset(\"USER_ID_WITH_AVATAR\");\r",
											"}\r",
											"\r",
											"// Test to ensure the variable is set correctly\r",
											"pm.test(\"User ID with avatarUrl is set\", function () {\r",
											"    if (userWithAvatar) {\r",
											"        pm.expect(pm.environment.get(\"USER_ID_WITH_AVATAR\")).to.eql(userWithAvatar.id);\r",
											"    } else {\r",
											"        pm.expect(pm.environment.get(\"USER_ID_WITH_AVATAR\")).to.be.undefined;\r",
											"    }\r",
											"});\r",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/users?page=0",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"users"
									],
									"query": [
										{
											"key": "filter",
											"value": "{{Username}}",
											"disabled": true
										},
										{
											"key": "page",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "0.4.3 Get user avatar",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-type is image/png\", function () {\r",
											"    pm.response.to.have.header('Content-Type');\r",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.include('image/png');\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/users/{{USER_ID_WITH_AVATAR}}/profile/avatar",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"users",
										"{{USER_ID_WITH_AVATAR}}",
										"profile",
										"avatar"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "1. Groups, projects, packages, dashboards",
			"item": [
				{
					"name": "1.3 Packages",
					"item": [
						{
							"name": "1.3.1 Delete static test-1 data from DB",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/internal/clear/STATIC-TEST-1",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"internal",
										"clear",
										"STATIC-TEST-1"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.3.2 Add static test-1 group",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"pm.environment.set(\"static_root_group_2\", data.groupId)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"QS-STATIC-TEST-1\",\r\n    \"Alias\" :\"QS-STATIC-TEST-1\",\r\n    \"name\": \"Test Workspace\",\r\n    \"parentId\": null,\r\n    \"kind\":\"workspace\",\r\n    \"description\": \"Required for to upload hardcoded packages\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.3.3 Create package 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"pm.environment.set(\"package_1\", data.packageId)\r",
											"\r",
											"setTimeout(() => { }, 300);"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"QS-STATIC-TEST-1.PKG\",\r\n    \"Alias\" :\"PKG\",\r\n    \"name\": \"Test static package\",\r\n    \"parentId\": \"QS-STATIC-TEST-1\",\r\n    \"kind\":\"package\",\r\n    \"description\": \"Package to be built\",\r\n    \"serviceName\": \"\",\r\n    \"imageUrl\": \"\",\r\n    \"releaseVersionPattern\": \"static-test-1\",\r\n    \"excludeFromSearch\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.3.3-1 Check 'create_package' event for new package",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"var event = [];\r",
											"\r",
											"for (var i = 0; i<data.events.length; i++) {\r",
											"    event.push(data.events[i].eventType)\r",
											"}\r",
											"\r",
											"pm.test(\"'create_package' event displayed\", function(){\r",
											"    for (var i = 0; i<data.events.length; i++) {\r",
											"        pm.expect(event).to.include('create_package')\r",
											"    }\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v4/packages/{{package_1}}/activity?includeRefs=true",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v4",
										"packages",
										"{{package_1}}",
										"activity"
									],
									"query": [
										{
											"key": "includeRefs",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "1.3.4 Publish first version for package 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 202\", function () {\r",
											"    pm.response.to.have.status(202);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"pm.environment.set(\"publish_id\", data.publishId)\r",
											"setTimeout(function(){}, 20000)"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
										"type": "default"
									},
									{
										"key": "Content-Transfer-Encoding",
										"value": "base64",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"clientBuild\"\r\n\r\nfalse\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"config\"\r\n\r\n{\r\n    \"packageId\": \"QS-STATIC-TEST-1.PKG\",\r\n    \"version\": \"1.0\",\r\n    \"status\": \"draft\",\r\n    \"versionFolder\": \"qwerty\",\r\n    \"refs\": [],\r\n    \"files\": [{\r\n            \"fileId\": \"{{Pack_version1_fileId}}\",\r\n            \"publish\": true\r\n        }\r\n    ]\r\n}\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"sources\"; filename=\"petstore_yml.zip\"\r\nContent-Type: application/zip;base64\r\n\r\n{{Pack_version1_data}}\r\n----------------------------127308995100818139707097--",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/publish",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"publish"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.3.4-0 Get package build status ",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var data = JSON.parse(responseBody);\r",
											"pm.test(\"Status is running\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.expect(data.status).to.eql(\"complete\");\r",
											"});\r",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/publish/{{publish_id}}/status",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"publish",
										"{{publish_id}}",
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.3.4-1 Check 'publish_new_version' event for new package",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"'publish_new_version' event displayed\", function () {\r",
											"    pm.expect(data.events[0].eventType).to.eql('publish_new_version');\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v4/packages/{{package_1}}/activity",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v4",
										"packages",
										"{{package_1}}",
										"activity"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.3.5 Publish second version for package 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 202\", function () {\r",
											"    pm.response.to.have.status(202);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"pm.environment.set(\"publish_id\", data.publishId)\r",
											"setTimeout(function(){}, 10000)"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
										"type": "default"
									},
									{
										"key": "Content-Transfer-Encoding",
										"value": "base64",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"clientBuild\"\r\n\r\nfalse\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"config\"\r\n\r\n{\r\n    \"packageId\": \"QS-STATIC-TEST-1.PKG\",\r\n    \"version\": \"2.0\",\r\n    \"status\": \"draft\",\r\n    \"versionFolder\": \"qwerty\",\r\n    \"refs\": [],\r\n    \"files\": [{\r\n            \"fileId\": \"{{Pack_version2_fileId}}\",\r\n            \"publish\": true\r\n        }\r\n    ]\r\n}\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"sources\"; filename=\"petstore_yml.zip\"\r\nContent-Type: application/zip;base64\r\n\r\n{{Pack_version2_data}}\r\n----------------------------127308995100818139707097--",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/publish",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"publish"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.3.6 Create package 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"pm.environment.set(\"package_2\", data.packageId)"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"QS-STATIC-TEST-1.PKG2\",\r\n    \"Alias\" :\"PKG2\",\r\n    \"name\": \"Test static package 2\",\r\n    \"parentId\": \"QS-STATIC-TEST-1\",\r\n    \"kind\":\"package\",\r\n    \"description\": \"Package to be built\",\r\n    \"serviceName\": \"\",\r\n    \"imageUrl\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.3.7 Get packages list by text filter",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Contains created package\", function () {\r",
											"    pm.expect(data.packages[0].packageId).to.eql(pm.variables.replaceIn('{{package_1}}'));\r",
											"});\r",
											"\r",
											"var kind = [];\r",
											"\r",
											"for (var i = 0; i<data.packages.length; i++) {\r",
											"    kind.push(data.packages[i].kind)\r",
											"}\r",
											"\r",
											"pm.test(\"All found packages have 'package' kind\", () => {\r",
											"    pm.expect(kind).to.include('package')\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages?textFilter={{package_1}}&kind=package",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages"
									],
									"query": [
										{
											"key": "textFilter",
											"value": "{{package_1}}"
										},
										{
											"key": "kind",
											"value": "package"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "1.3.8 Get packages list by limit",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Response array size = limit\", function () {\r",
											"    pm.expect(data.packages.length).to.eql(1);\r",
											"});\r",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages?limit=1&page=1",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages"
									],
									"query": [
										{
											"key": "limit",
											"value": "1"
										},
										{
											"key": "page",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "1.3.9 Delete package 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"\r",
											"setTimeout(() => { }, 200);"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_2}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.3.10 Get status deleted package",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Project has deleted status\", function () {\r",
											"    pm.expect(data.status).to.eql(\"deleted\");\r",
											"});\r",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_2}}/status",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_2}}",
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.3.11 Favor package 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/favor",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"favor"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.3.12 Disfavor package 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/disfavor",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"disfavor"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.3.13 Disfavor package that is not favorite",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/disfavor",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"disfavor"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.3.14 Update package 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Check new description\", function () {\r",
											"    pm.expect(data.description).to.eql('Test package new description');\r",
											"});\r",
											"\r",
											"pm.test(\"'releaseVersionPattern' updated\", function () {\r",
											"    pm.expect(data.releaseVersionPattern).to.eql('static-test-2');\r",
											"});\r",
											"\r",
											"setTimeout(() => { }, 300);"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"Test package new description\",\r\n    \"releaseVersionPattern\": \"static-test-2\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.3.14-1 Check 'patch_package_meta' event for new package",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"'patch_package_meta' event displayed\", function () {\r",
											"    pm.expect(data.events[0].eventType).to.eql('patch_package_meta');\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v4/packages/{{package_1}}/activity",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v4",
										"packages",
										"{{package_1}}",
										"activity"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.3.15 Get status package 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Project has exists status\", function () {\r",
											"    pm.expect(data.status).to.eql(\"exists\");\r",
											"});\r",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/status",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.3.16 Get package by Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Check package group\", function () {\r",
											"    pm.expect(data.parentId).to.eql(pm.variables.replaceIn('{{static_root_group_2}}'));\r",
											"});\r",
											"\r",
											"pm.test(\"'Parent' of package is hidden\", function () {\r",
											"    pm.expect(data.parents).to.eql([]);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.3.17 Add user to list of package members",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"const respBody = pm.response.json();\r",
											"\r",
											"pm.test(\"User has specified role\", () => {\r",
											"\tpm.expect(respBody.members[0].user.id).to.eql(pm.variables.replaceIn('{{User_id}}'));\r",
											"\tpm.expect(respBody.members[0].user.name).to.eql(pm.variables.replaceIn('{{User_name}}'));\r",
											"    pm.expect(respBody.members[0].roles[0].role).to.eql(\"Editor\");\r",
											"});\r",
											"\r",
											"setTimeout(() => { }, 500);"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"users\": [\"{{Username}}\"],\r\n    \"RoleIds\": [\"editor\"],\r\n    \"Emails\": [\"{{User_email}}\"]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/members",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"members"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.3.17-1 Check 'grant_role' event for new package",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"'grant_role' event displayed\", function () {\r",
											"    pm.expect(data.events[0].eventType).to.eql('grant_role');\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v4/packages/{{package_1}}/activity",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v4",
										"packages",
										"{{package_1}}",
										"activity"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.3.18 Check list of package members",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = pm.response.json();\r",
											"\r",
											"pm.test(\"Validation of added user\", function(){\r",
											"    for (var i = 0; i<data.members.length; i++) {\r",
											"        if (data.members[i].user.id === pm.variables.replaceIn(\"{{User_id}}\")){\r",
											"            pm.expect(data.members[i].user.name).to.eql(pm.variables.replaceIn('{{User_name}}'));\r",
											"            pm.expect(data.members[i].roles[0].role).to.eql(\"Editor\");\r",
											"        }\r",
											"    }\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/members",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"members"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.3.19 Update user's member role",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"\r",
											"setTimeout(() => { }, 300);"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"RoleId\": \"admin\",\r\n    \"Action\": \"add\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/members/{{Username}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"members",
										"{{Username}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.3.19-1 Check 'update_role' event for new package",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"'update_role' event displayed\", function () {\r",
											"    pm.expect(data.events[0].eventType).to.eql('update_role');\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v4/packages/{{package_1}}/activity",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v4",
										"packages",
										"{{package_1}}",
										"activity"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.3.20 Check update of user member's role",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Check members role\", function () {\r",
											"    pm.expect(data.members[0].roles[0].role).to.eql(\"Admin\");\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/members",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"members"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.3.21 Remove user from list of members",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"\r",
											"setTimeout(() => { }, 300);"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/members/{{Username}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"members",
										"{{Username}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.3.21-1 Check 'delete_role' event for new package",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"'delete_role' event displayed\", function () {\r",
											"    pm.expect(data.events[0].eventType).to.eql('delete_role');\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v4/packages/{{package_1}}/activity",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v4",
										"packages",
										"{{package_1}}",
										"activity"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.3.22 Check that list of members is empty",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Members list is empty\", function () {\r",
											"    pm.expect(data.members.length).to.eql(0);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/members",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"members"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.3.23 'showParents' of package validation",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"'Parent' of package is displayed\", function () {\r",
											"    pm.expect(data.parents[0].packageId).to.eql(pm.variables.replaceIn('{{static_root_group_2}}'));\r",
											"});\r",
											"\r",
											"pm.test(\"'hasReadPermission' parameter for parent package is displayed\", function () {\r",
											"    pm.expect(data.parents[0].hasReadPermission).to.eql(true);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}?showParents=true",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}"
									],
									"query": [
										{
											"key": "showParents",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "1.3.24 List of packages filtered by 'serviceName'",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Only packages with 'serviceName=access-control' displayed\", function(){\r",
											"    for (var i = 0; i<data.packages.length; i++) {\r",
											"        pm.expect(data.packages[i].serviceName).to.eq('access-control')\r",
											"    }\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages?kind=package&serviceName=access-control",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages"
									],
									"query": [
										{
											"key": "kind",
											"value": "package"
										},
										{
											"key": "serviceName",
											"value": "access-control"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "1.3.24-1 Favor package 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/favor",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"favor"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.3.25 Get packages list by alias text filter with parent check",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"var alias = [];\r",
											"var packageId = [];\r",
											"\r",
											"for (var i = 0; i<data.packages.length; i++) {\r",
											"    alias.push(data.packages[i].alias),\r",
											"    packageId.push(data.packages[i].packageId)\r",
											"}\r",
											"\r",
											"pm.test(\"Found package have specified alias\", () => {\r",
											"    pm.expect(alias).to.include('PKG')\r",
											"});\r",
											"\r",
											"pm.test(\"Contains created package\", function () {\r",
											"    pm.expect(packageId).to.include(pm.variables.replaceIn('{{package_1}}'));\r",
											"});\r",
											"\r",
											"pm.test(\"'Parent' of package is displayed\", function(){\r",
											"    for (var i = 0; i<data.packages.length; i++) {\r",
											"        if (data.packages[i].packageId === pm.variables.replaceIn(\"{{package_1}}\")){\r",
											"            pm.expect(data.packages[i].parentId).to.eql(pm.variables.replaceIn('{{static_root_group_2}}'));\r",
											"        }\r",
											"    }\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages?textFilter=PKG&kind=package&showParents=true&onlyFavorite=true",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages"
									],
									"query": [
										{
											"key": "textFilter",
											"value": "PKG"
										},
										{
											"key": "kind",
											"value": "package"
										},
										{
											"key": "showParents",
											"value": "true"
										},
										{
											"key": "onlyFavorite",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "1.3.26 Get shared packages list",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"var packageId = [];\r",
											"\r",
											"for (var i = 0; i<data.packages.length; i++) {\r",
											"    packageId.push(data.packages[i].packageId)\r",
											"}\r",
											"\r",
											"pm.test(\"Created package isn't displayed in 'Shared' list\", () => {\r",
											"    pm.expect(packageId).to.not.include(pm.variables.replaceIn('{{package_1}}'))\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "default"
									},
									{
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages?kind=package&onlyShared=true",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages"
									],
									"query": [
										{
											"key": "kind",
											"value": "package"
										},
										{
											"key": "onlyShared",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "1.3.27 Check that all descedants are hidden with \"'showAllDescendants'=false'\" query parameter",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = pm.response.json();\r",
											"\r",
											"pm.test(\"All parent descendants are hidden\", () => {\r",
											"    pm.expect(data.packages.length).to.eql(0);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages?parentId=NC&kind=package&showAllDescendants=false",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages"
									],
									"query": [
										{
											"key": "parentId",
											"value": "NC"
										},
										{
											"key": "kind",
											"value": "package"
										},
										{
											"key": "showAllDescendants",
											"value": "false"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "1.3.28 Check all events for packages",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v4/activity?onlyFavorite=false",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v4",
										"activity"
									],
									"query": [
										{
											"key": "onlyFavorite",
											"value": "false"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "1.3.29 Favor package 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/favor",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"favor"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.3.30 Check events for favorite packages",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"var packageId = [];\r",
											"var packageName = [];\r",
											"\r",
											"for (var i = 0; i<data.events.length; i++) {\r",
											"    packageId.push(data.events[i].packageId)\r",
											"    packageName.push(data.events[i].packageName)\r",
											"}\r",
											"pm.test(\"Contains created package\", function () {\r",
											"    pm.expect(packageId).to.include(pm.variables.replaceIn('{{package_1}}'));\r",
											"});\r",
											"\r",
											"pm.test(\"'delete_role' event displayed\", function () {\r",
											"    pm.expect(data.events[0].eventType).to.eql('delete_role');\r",
											"});\r",
											"\r",
											"pm.test(\"Not favored packages are missing\", function () {\r",
											"    pm.expect(packageName).to.not.include('ap-pm-qa1');\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v4/activity?onlyFavorite=true",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v4",
										"activity"
									],
									"query": [
										{
											"key": "onlyFavorite",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "1.3.31 Check events for favorite packages filtered by userName",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"All events made by specified user\", function() {\r",
											"    for (var i = 0; i < data.events.length; i++) {\r",
											"        pm.expect(data.events[i].userId).to.be.oneOf(['x_apihub', 'x_APIHUB']);\r",
											"    }\r",
											"});\r",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v4/activity?textFilter=x_apihub",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v4",
										"activity"
									],
									"query": [
										{
											"key": "textFilter",
											"value": "x_apihub"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "1.3.32 Check events for favorite packages filtered by 'types' query parameter",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Only 'publish_new_version' displayed\", function(){\r",
											"    for (var i = 0; i<data.events.length; i++) {\r",
											"        pm.expect(data.events[i].eventType).to.eq('publish_new_version')\r",
											"    }\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v4/activity?types=new_version",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v4",
										"activity"
									],
									"query": [
										{
											"key": "types",
											"value": "new_version"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "1.3.33 Paging validation for activity",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"All events made by specified user\", function(){\r",
											"    pm.expect(data.events.length).to.eq(3)\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v4/activity?limit=3&page=1",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v4",
										"activity"
									],
									"query": [
										{
											"key": "limit",
											"value": "3"
										},
										{
											"key": "page",
											"value": "1"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "1.4 Dashboards",
					"item": [
						{
							"name": "1.4.1 Create dashboard 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"pm.environment.set(\"dashboard_1\", data.packageId)"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"QS-STATIC-TEST-1.PKG3\",\r\n    \"Alias\" :\"PKG3\",\r\n    \"name\": \"Test static dashboard 1\",\r\n    \"parentId\": \"QS-STATIC-TEST-1\",\r\n    \"kind\":\"dashboard\",\r\n    \"description\": \"New dashboard\",\r\n    \"serviceName\": \"\",\r\n    \"imageUrl\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.4.2 Publish first version for dashboard 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 202\", function () {\r",
											"    pm.response.to.have.status(202);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"pm.environment.set(\"dash_publish_id\", data.publishId)\r",
											"setTimeout(function(){}, 10000)"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
										"type": "default"
									},
									{
										"key": "Content-Transfer-Encoding",
										"value": "base64",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"clientBuild\"\r\n\r\nfalse\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"config\"\r\n\r\n{\r\n    \"version\": \"1.0\",\r\n    \"status\": \"draft\",\r\n    \"versionFolder\": \"qwerty\",\r\n    \"refs\": [{\r\n            \"refId\":\"QS-STATIC-TEST-1.PKG\",\r\n            \"version\":\"1.0@1\"}],\r\n    \"files\": []\r\n}\r\n\r\n----------------------------127308995100818139707097--",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/publish",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{dashboard_1}}",
										"publish"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.4.3 Publish second version for dashboard 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 202\", function () {\r",
											"    pm.response.to.have.status(202);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"pm.environment.set(\"dash_publish_id\", data.publishId)\r",
											"setTimeout(function(){}, 10000)"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
										"type": "default"
									},
									{
										"key": "Content-Transfer-Encoding",
										"value": "base64",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"clientBuild\"\r\n\r\nfalse\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"config\"\r\n\r\n{\r\n    \"version\": \"2.0\",\r\n    \"status\": \"draft\",\r\n    \"versionFolder\": \"qwerty\",\r\n    \"refs\": [{\r\n            \"refId\":\"QS-STATIC-TEST-1.PKG\",\r\n            \"version\":\"1.0@1\"}],\r\n    \"files\": []\r\n}\r\n----------------------------127308995100818139707097--",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/publish",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{dashboard_1}}",
										"publish"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.4.4 Create dashboard 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"pm.environment.set(\"dashboard_2\", data.packageId)"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"QS-STATIC-TEST-1.PKG2\",\r\n    \"Alias\" :\"PKG4\",\r\n    \"name\": \"Test static dashboard 2\",\r\n    \"parentId\": \"QS-STATIC-TEST-1\",\r\n    \"kind\":\"dashboard\",\r\n    \"description\": \"New dashboard\",\r\n    \"serviceName\": \"\",\r\n    \"imageUrl\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.4.5 Get dashboards list by text filter",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Contains created projects\", function () {\r",
											"    pm.expect(data.packages[0].packageId).to.eql(pm.variables.replaceIn('{{dashboard_1}}'));\r",
											"});\r",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages?textFilter={{dashboard_1}}&kind=dashboard&parentId=QS-STATIC-TEST-1",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages"
									],
									"query": [
										{
											"key": "textFilter",
											"value": "{{dashboard_1}}"
										},
										{
											"key": "kind",
											"value": "dashboard"
										},
										{
											"key": "parentId",
											"value": "QS-STATIC-TEST-1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "1.4.6 Delete dashboard 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"\r",
											"setTimeout(() => { }, 200);"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_2}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{dashboard_2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.4.7 Get status deleted dashboard",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Project has deleted status\", function () {\r",
											"    pm.expect(data.status).to.eql(\"deleted\");\r",
											"});\r",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_2}}/status",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{dashboard_2}}",
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.4.8 Favor dashboard 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/favor",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{dashboard_1}}",
										"favor"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.4.9 Get favorite dashboards list",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Contains created projects\", function () {\r",
											"    pm.expect(data.packages[0].packageId).to.eql(pm.variables.replaceIn('{{dashboard_1}}'));\r",
											"});\r",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages?textFilter={{dashboard_1}}&kind=dashboard&onlyFavorite=true",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages"
									],
									"query": [
										{
											"key": "textFilter",
											"value": "{{dashboard_1}}"
										},
										{
											"key": "kind",
											"value": "dashboard"
										},
										{
											"key": "onlyFavorite",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "1.4.10 Update dashboard 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Check new description\", function () {\r",
											"    pm.expect(data.description).to.eql('Dashboard new description');\r",
											"});\r",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"Dashboard new description\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{dashboard_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.4.11 Get status dashboard 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Project has exists status\", function () {\r",
											"    pm.expect(data.status).to.eql(\"exists\");\r",
											"});\r",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/status",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{dashboard_1}}",
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.4.12 Get dashboard by Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Check package group\", function () {\r",
											"    pm.expect(data.parentId).to.eql(pm.variables.replaceIn('{{static_root_group_2}}'));\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{dashboard_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.4.13 Add user to list of dashboard members",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"const respBody = pm.response.json();\r",
											"\r",
											"pm.test(\"User has specified role\", () => {\r",
											"\tpm.expect(respBody.members[0].user.id).to.eql(pm.variables.replaceIn('{{User_id}}'));\r",
											"\tpm.expect(respBody.members[0].user.name).to.eql(pm.variables.replaceIn('{{User_name}}'));\r",
											"    pm.expect(respBody.members[0].roles[0].role).to.eql(\"Editor\");\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"users\": [\"{{Username}}\"],\r\n    \"RoleIds\": [\"editor\"],\r\n    \"Emails\": [\"{{User_email}}\"]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/members",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{dashboard_1}}",
										"members"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.4.14 Check list of dashboard members",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = pm.response.json();\r",
											"\r",
											"pm.test(\"Validation of added user\", function(){\r",
											"    for (var i = 0; i<data.members.length; i++) {\r",
											"        if (data.members[i].user.id === pm.variables.replaceIn(\"{{User_id}}\")){\r",
											"            pm.expect(data.members[i].user.name).to.eql(pm.variables.replaceIn('{{User_name}}'));\r",
											"            pm.expect(data.members[i].roles[0].role).to.eql(\"Editor\");\r",
											"        }\r",
											"    }\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/members",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{dashboard_1}}",
										"members"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.4.15 Update user's member role under dashboard",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"RoleId\": \"admin\",\r\n    \"Action\": \"add\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/members/{{Username}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{dashboard_1}}",
										"members",
										"{{Username}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.4.16 Check update of user member's role under dashboard",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Check members role\", function () {\r",
											"    pm.expect(data.members[0].roles[0].role).to.eql(\"Admin\");\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/members",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{dashboard_1}}",
										"members"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.4.17 Remove user from list of dashboard members",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/members/{{Username}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{dashboard_1}}",
										"members",
										"{{Username}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.4.18 Check that dashboard list of members is empty",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Members list is empty\", function () {\r",
											"    pm.expect(data.members.length).to.eql(0);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/members",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{dashboard_1}}",
										"members"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.4.19 Disfavor dashboard 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/disfavor",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{dashboard_1}}",
										"disfavor"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.4.20 Delete static test-1 data from DB",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/internal/clear/STATIC-TEST-1",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"internal",
										"clear",
										"STATIC-TEST-1"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "",
						"type": "string"
					}
				]
			}
		},
		{
			"name": "4. Package: publish, apikeys, versions",
			"item": [
				{
					"name": "4.2 Publish (v2)",
					"item": [
						{
							"name": "4.2.1 Delete static test data from DB",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/internal/clear/STATIC-TEST-2",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"internal",
										"clear",
										"STATIC-TEST-2"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.2.2 Add static test group",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"pm.environment.set(\"static_root_group_1\", data.groupId)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"QS-STATIC-TEST-2\",\r\n    \"Alias\" :\"QS-STATIC-TEST-2\",\r\n    \"name\": \"Test Workspace 2\",\r\n    \"parentId\": null,\r\n    \"kind\":\"workspace\",\r\n    \"description\": \"Required for to upload hardcoded packages\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.2.3 Add static package",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"pm.environment.set(\"static_root_pkg_1\", data.id)\r",
											"pm.environment.set(\"package_1\", data.packageId)"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"QS-STATIC-TEST-2.PKG5\",\r\n    \"Alias\" :\"PKG5\",\r\n    \"name\": \"Test static package 1\",\r\n    \"parentId\": \"QS-STATIC-TEST-2\",\r\n    \"kind\":\"package\",\r\n    \"description\": \"Package to be built\",\r\n    \"serviceName\": \"\",\r\n    \"imageUrl\": \"\",\r\n    \"restGroupingPrefix\": \"/api/{group}/\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.2.5 Package server publish",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 202\", function () {\r",
											"    pm.response.to.have.status(202);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"pm.environment.set(\"publish_id\", data.publishId)\r",
											"\r",
											"setTimeout(function(){}, 30000)"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
										"type": "default"
									},
									{
										"key": "Content-Transfer-Encoding",
										"value": "base64",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"clientBuild\"\r\n\r\nfalse\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"builderId\"\r\n\r\n5680525d-7c7b-47be-8ede-d502626a79dc\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"config\"\r\n\r\n{\r\n    \"version\": \"0001.1\",\r\n    \"status\": \"release\",\r\n    \"versionFolder\": \"qwerty\",\r\n    \"refs\": [],\r\n    \"files\": [{\r\n            \"fileId\": \"{{Pack_version1_fileId}}\",\r\n            \"publish\": true\r\n        }\r\n    ]\r\n}\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"sources\"; filename=\"petstore_yml.zip\"\r\nContent-Type: application/zip;base64\r\n\r\n{{Pack_version1_data}}\r\n----------------------------127308995100818139707097--",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/publish",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"publish"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.2.11 Get package build status",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var data = JSON.parse(responseBody);\r",
											"pm.test(\"Status is running\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.expect(data.status).to.eql(\"complete\");\r",
											"});\r",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/publish/{{publish_id}}/status",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"publish",
										"{{publish_id}}",
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.2.15 Package server publish additional version",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 202\", function () {\r",
											"    pm.response.to.have.status(202);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"pm.environment.set(\"publish_id\", data.publishId)\r",
											"\r",
											"setTimeout(function(){}, 20000)"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
										"type": "default"
									},
									{
										"key": "Content-Transfer-Encoding",
										"value": "base64",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"clientBuild\"\r\n\r\nfalse\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"config\"\r\n\r\n{\r\n    \"version\": \"0001.2\",\r\n    \"previousVersion\": \"0001.1\",\r\n    \"status\": \"release\",\r\n    \"versionFolder\": \"qwerty\",\r\n    \"refs\": [],\r\n    \"files\": [{\r\n            \"fileId\": \"{{Pack_version2_fileId}}\",\r\n            \"publish\": true\r\n        }\r\n    ]\r\n}\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"sources\"; filename=\"petstore_yml.zip\"\r\nContent-Type: application/zip;base64\r\n\r\n{{Pack_version2_data}}\r\n----------------------------127308995100818139707097--",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/publish",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"publish"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.2.16 Group depend publish",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 202\", function () {\r",
											"    pm.response.to.have.status(202);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"pm.environment.set(\"group_publish_id\", data.publishId)"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"clientBuild\"\r\n\r\nfalse\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"dependencies\"\r\n\r\n[\"{{publish_id}}\"]\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"config\"\r\n\r\n{\r\n    \"packageId\": \"QS-STATIC-TEST-2\",\r\n    \"version\": \"0001.1\",\r\n    \"status\": \"release\",\r\n    \"versionFolder\": \"qwerty\",\r\n    \"refs\": [{\"refId\": \"QS-STATIC-TEST-2.PKG5\", \"version\": \"0001.1\"}],\r\n    \"files\": []\r\n}\r\n----------------------------127308995100818139707097--",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/QS-STATIC-TEST-2/publish",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"QS-STATIC-TEST-2",
										"publish"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.2.17 Get package build status",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var data = JSON.parse(responseBody);\r",
											"pm.test(\"Status is running\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"setTimeout(function(){}, 20000)\r",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/publish/{{publish_id}}/status",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"publish",
										"{{publish_id}}",
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.2.18 Get package build status complete",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var data = JSON.parse(responseBody);\r",
											"pm.test(\"Status is running\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.expect(data.status).to.eql(\"complete\");\r",
											"});\r",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/publish/{{publish_id}}/status",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"publish",
										"{{publish_id}}",
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.2.19 Get group build status 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var data = JSON.parse(responseBody);\r",
											"pm.test(\"Status is complete\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"setTimeout(function(){}, 6000)"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/QS-STATIC-TEST-2/publish/{{group_publish_id}}/status",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"QS-STATIC-TEST-2",
										"publish",
										"{{group_publish_id}}",
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.2.20 Get group build status complete",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var data = JSON.parse(responseBody);\r",
											"pm.test(\"Status is complete\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.expect(data.status).to.eql(\"complete\");\r",
											"});\r",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/QS-STATIC-TEST-2/publish/{{group_publish_id}}/status",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"QS-STATIC-TEST-2",
										"publish",
										"{{group_publish_id}}",
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.2.21 Get a list of available publish statuses for the package",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"List of available statuses is correct\", function () {\r",
											"    pm.expect(data.statuses[0]).to.be.oneOf([\"draft\",\"release\"]);\r",
											"    pm.expect(data.statuses[1]).to.be.oneOf([\"draft\",\"release\"]);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/publish/availableStatuses",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"publish",
										"availableStatuses"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.2.22 Get list of available package publish statuses for the user",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"List of available statuses is correct\", function () {\r",
											"    pm.expect(responseBody).to.include(\"draft\");\r",
											"    pm.expect(responseBody).to.include(\"release\");\r",
											"    pm.expect(responseBody).to.include(\"archived\");\r",
											"});\r",
											"\r",
											"setTimeout(() => { }, 300);"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"packages\": [\"{{package_1}}\"]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/users/{{Username}}/availablePackagePromoteStatuses",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"users",
										"{{Username}}",
										"availablePackagePromoteStatuses"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.2.23-1 Check 'publish_new_version' event for package",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"'publish_new_version' event displayed\", function () {\r",
											"    pm.expect(data.events[0].eventType).to.eql('publish_new_version');\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v4/packages/{{package_1}}/activity",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v4",
										"packages",
										"{{package_1}}",
										"activity"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "4.3 Apikeys (v2)",
					"item": [
						{
							"name": "4.3.1 Create a package API Key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = pm.response.json();\r",
											"\r",
											"pm.test(\"Api key is not empty\", function () {\r",
											"    pm.expect(data.apiKey).to.not.eql(undefined)\r",
											"    pm.expect(data.apiKey).to.not.eql(\"\")\r",
											"});\r",
											"\r",
											"pm.environment.set(\"apihub_api_key\", data.apiKey)\r",
											"pm.environment.set(\"apihub_api_key_id\", data.id)\r",
											"pm.environment.set(\"apihub_api_key_name\", data.name)\r",
											"\r",
											"\r",
											"setTimeout(() => { },1000);"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\":\"M2M\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v4/packages/{{package_1}}/apiKeys",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v4",
										"packages",
										"{{package_1}}",
										"apiKeys"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.3.1-1 Check 'generate_api_key' event for package",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"'generate_api_key' event displayed\", function () {\r",
											"    pm.expect(data.events[0].eventType).to.eql('generate_api_key');\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v4/packages/{{package_1}}/activity",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v4",
										"packages",
										"{{package_1}}",
										"activity"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.3.2 Delete package API Key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"\r",
											"setTimeout(() => { },1000);"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/apiKeys/{{apihub_api_key_id}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"apiKeys",
										"{{apihub_api_key_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.3.2-1 Check 'revoke_api_key' event for package",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"'revoke_api_key' event displayed\", function () {\r",
											"    pm.expect(data.events[0].eventType).to.eql('revoke_api_key');\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v4/packages/{{package_1}}/activity",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v4",
										"packages",
										"{{package_1}}",
										"activity"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.3.3 Package API Keys list retrieve",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = pm.response.json();\r",
											"var ids = []\r",
											"for (var i = 0; i<data.apiKeys.length; i++) {\r",
											"    ids.push(data.apiKeys[i].id)\r",
											"}\r",
											"\r",
											"pm.test(\"Revoked ApiKey is not present\", function () {\r",
											"    pm.expect(ids).to.not.include.members([pm.variables.replaceIn('{{apihub_api_key_id}}')])\r",
											"});\r",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\":\"M2M\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v4/packages/{{package_1}}/apiKeys",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v4",
										"packages",
										"{{package_1}}",
										"apiKeys"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.3.4 Create a admin API Key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = pm.response.json();\r",
											"\r",
											"pm.test(\"Api key is not empty\", function () {\r",
											"    pm.expect(data.apiKey).to.not.eql(undefined)\r",
											"    pm.expect(data.apiKey).to.not.eql(\"\")\r",
											"});\r",
											"\r",
											"pm.environment.set(\"apihub_api_key\", data.apiKey)\r",
											"pm.environment.set(\"apihub_api_key_id\", data.id)\r",
											"pm.environment.set(\"apihub_api_key_name\", data.name)"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\":\"M2M\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v4/packages/*/apiKeys",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v4",
										"packages",
										"*",
										"apiKeys"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.3.21 Delete admin API Key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/*/apiKeys/{{apihub_api_key_id}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"*",
										"apiKeys",
										"{{apihub_api_key_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.3.22 Get admin API Keys list",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = pm.response.json();\r",
											"var ids = []\r",
											"for (var i = 0; i<data.apiKeys.length; i++) {\r",
											"    ids.push(data.apiKeys[i].id)\r",
											"}\r",
											"\r",
											"pm.test(\"Revoked ApiKey is not present\", function () {\r",
											"    pm.expect(ids).to.not.include.members([pm.variables.replaceIn('{{apihub_api_key_id}}')])\r",
											"});\r",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\":\"M2M\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v4/packages/*/apiKeys",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v4",
										"packages",
										"*",
										"apiKeys"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "4.4 Versions (v2)",
					"item": [
						{
							"name": "4.4.0 Get package versions",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = pm.response.json();\r",
											"\r",
											"pm.test(\"Packages has versions\", function () {\r",
											"    pm.expect(data.versions.length).to.greaterThan(0);\r",
											"});\r",
											"\r",
											"\r",
											"pm.environment.set(\"version_2\", data.versions[0].version);\r",
											"pm.environment.set(\"version_2_2\", data.versions[0].version.split(\"@\")[0]);\r",
											"pm.environment.set(\"previous_version_1\", data.versions[0].previousVersion);\r",
											"pm.environment.set(\"version_1\", data.versions[1].version);\r",
											"pm.environment.set(\"version_1_2\", data.versions[1].version.split(\"@\")[0]);"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v3/packages/{{package_1}}/versions",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v3",
										"packages",
										"{{package_1}}",
										"versions"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.4.1 Get package versions with limit",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = pm.response.json();\r",
											"\r",
											"pm.test(\"Only one version displayed\", function () {\r",
											"    pm.expect(data.versions.length).to.eq(1);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v3/packages/{{package_1}}/versions?limit=1&page=1&checkRevisions=true",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v3",
										"packages",
										"{{package_1}}",
										"versions"
									],
									"query": [
										{
											"key": "limit",
											"value": "1"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "checkRevisions",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "4.4.2 Get package version content",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = pm.response.json();\r",
											"\r"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v3/packages/{{package_1}}/versions/{{version_2}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v3",
										"packages",
										"{{package_1}}",
										"versions",
										"{{version_2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.4.3 Get version documents",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = pm.response.json();\r",
											"\r",
											"pm.test(\"Only 1 document displayed\", function () {\r",
											"    pm.expect(data.documents.length).to.eq(1);\r",
											"});\r",
											"\r",
											"pm.environment.set(\"pkg_file_slug\", data.documents[0].slug)"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_1}}/documents?limit=1&page=0&apiType=rest",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"versions",
										"{{version_1}}",
										"documents"
									],
									"query": [
										{
											"key": "limit",
											"value": "1"
										},
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "apiType",
											"value": "rest"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "4.4.4 Get document details",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var data = pm.response.json();\r",
											"\r",
											"pm.environment.set(\"file_name\", data.fileId.replace(/^.*[\\\\\\/]/, ''))\r",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v3/packages/{{package_1}}/versions/{{version_1}}/documents/{{pkg_file_slug}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v3",
										"packages",
										"{{package_1}}",
										"versions",
										"{{version_1}}",
										"documents",
										"{{pkg_file_slug}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.4.5 Get version content raw(get file data(published))",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-type is text/plain\", function () {\r",
											"    pm.response.to.have.header('Content-Type');\r",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.include('text/plain');\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_1}}/files/{{pkg_file_slug}}/raw",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"versions",
										"{{version_1}}",
										"files",
										"{{pkg_file_slug}}",
										"raw"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.4.6 Share file",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.environment.set(\"sharedFileId\", pm.response.json().sharedFileId)"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"packageId\": \"{{package_1}}\",\r\n    \"version\" : \"{{version_1_2}}\",\r\n    \"slug\": \"{{pkg_file_slug}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/sharedFiles",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"sharedFiles"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.4.7 Get shared file",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-type is text/plain\", function () {\r",
											"    pm.response.to.have.header('Content-Type');\r",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.include('text/plain');\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/sharedFiles/{{sharedFileId}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"sharedFiles",
										"{{sharedFileId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.4.8 Export sources of package version",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Content-type is application/octet-stream\", function () {\r",
											"    pm.response.to.have.header('Content-Type');\r",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/octet-stream');\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_1}}/sources",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"versions",
										"{{version_1}}",
										"sources"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.4.9 Version changelog async calculation with response in 'json' format ",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is OK\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 202]);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"packageId\": \"{{package_1}}\",\r\n    \"version\": \"{{version_2_2}}\",\r\n    \"previousVersion\": \"{{version_1_2}}\",\r\n    \"previousVersionPackageId\": \"{{package_1}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/compare",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"compare"
									],
									"query": [
										{
											"key": "responseFormat",
											"value": "json",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "4.4.10 Export offline API documentation by selected versions",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Content-type is application/octet-stream\", function () {\r",
											"    pm.response.to.have.header('Content-Type');\r",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/octet-stream');\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_1}}/doc",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"versions",
										"{{version_1}}",
										"doc"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.4.11 Export offline API documentation by selected file",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Content-type is application/octet-stream\", function () {\r",
											"    pm.response.to.have.header('Content-Type');\r",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/octet-stream');\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_1}}/files/{{pkg_file_slug}}/doc",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"versions",
										"{{version_1}}",
										"files",
										"{{pkg_file_slug}}",
										"doc"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.4.12 Update package version",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = pm.response.json();\r",
											"\r",
											"pm.test(\"Expected label is present\", () => {\r",
											"    pm.expect(data.versionLabels).to.include(\"API_Smoke\")\r",
											"});\r",
											"\r",
											"pm.test(\"'previousVersion' wasn't changed\", () => {\r",
											"    pm.expect(data.previousVersion).to.eq(pm.variables.replaceIn('{{previous_version_1}}'))\r",
											"});\r",
											"\r",
											"setTimeout(() => { },1000);"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " {\r\n     \"previousVersion\": \"{{version_1_2}}\",\r\n     \"status\": \"release\",\r\n     \"versionLabels\": [\r\n         \"API_Smoke\"\r\n        ]\r\n }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_2}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"versions",
										"{{version_2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.4.12-1 Check 'patch_version_meta' event for package",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"'patch_version_meta' event displayed\", function () {\r",
											"    pm.expect(data.events[0].eventType).to.eql('patch_version_meta');\r",
											"});\r",
											"\r",
											"pm.test(\"'newVersionLabels' event displayed\", function () {\r",
											"    pm.expect(data.events[0].params.newVersionLabels).to.include('API_Smoke');\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v4/packages/{{package_1}}/activity",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v4",
										"packages",
										"{{package_1}}",
										"activity"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.4.13 Update package version with wrong status",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " {\r\n     \"status\": \"1\",\r\n     \"versionLabels\": [\r\n         \"API_Smoke\"\r\n        ]\r\n }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_1}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"versions",
										"{{version_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.4.14 Get list of tags",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = pm.response.json();\r",
											"\r",
											"pm.test(\"Tag exists under version\", function () {\r",
											"    pm.expect(data.tags.length).to.eql(1);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_1}}/rest/tags?limit=1",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"versions",
										"{{version_1}}",
										"rest",
										"tags"
									],
									"query": [
										{
											"key": "limit",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "4.4.15 Get list of operations",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"var methods = [];\r",
											"var apiKind = [];\r",
											"\r",
											"for (var i = 0; i<data.operations.length; i++) {\r",
											"    methods.push(data.operations[i].method)\r",
											"    apiKind.push(data.operations[i].apiKind)\r",
											"}\r",
											"\r",
											"pm.test(\"Expected methods are present\", () => {\r",
											"    pm.expect(methods).to.include.oneOf(['post'])\r",
											"});\r",
											"\r",
											"pm.test(\"Only specified kind id displayed\", () => {\r",
											"    pm.expect(apiKind).not.to.include('no-bwc','experimental')\r",
											"});\r",
											"\r",
											"pm.test(\"Operation's content data displayed\", () => {\r",
											"    pm.expect(data.operations[0].data.servers[0].url).to.eql('https://petstore3.swagger.io/api/v1')\r",
											"});\r",
											"\r",
											"pm.environment.set(\"operation_id_1\", data.operations[0].operationId)"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_1}}/rest/operations?page=0&limit=5&kind=bwc&includeData=true&tag=pet&textFilter=post",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"versions",
										"{{version_1}}",
										"rest",
										"operations"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "5"
										},
										{
											"key": "kind",
											"value": "bwc"
										},
										{
											"key": "includeData",
											"value": "true"
										},
										{
											"key": "tag",
											"value": "pet"
										},
										{
											"key": "textFilter",
											"value": "post"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "4.4.16 Get operation details",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Expected method is present\", () => {\r",
											"    pm.expect(data.method).to.be.oneOf(['get','post','delete','put','patch'])\r",
											"});\r",
											"\r",
											"pm.test(\"Custom metadata is present\", () => {\r",
											"    pm.expect(data.customTags).to.eql({\"x-ext-domain\": \"petDomain\"})\r",
											"});\r",
											"\r",
											"pm.environment.set(\"hash_1\", data.dataHash)"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_1}}/rest/operations/{{operation_id_1}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"versions",
										"{{version_1}}",
										"rest",
										"operations",
										"{{operation_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.4.17 Get package version revision",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = pm.response.json();\r",
											"var versionRevision = pm.environment.get('version_2_2');\r",
											"\r",
											"pm.test(\"Specified revision displayed\", function () {\r",
											"    pm.expect(data.version).to.eq(versionRevision+'@1');\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_2_2}}@1",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"versions",
										"{{version_2_2}}@1"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.4.18 Get details of non existing document",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v3/packages/{{package_1}}/versions/{{version_1}}/documents/nothing123",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v3",
										"packages",
										"{{package_1}}",
										"versions",
										"{{version_1}}",
										"documents",
										"nothing123"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.4.19 Get version references",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v3/packages/{{package_1}}/versions/{{version_1}}/references?limit=10&page=0",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v3",
										"packages",
										"{{package_1}}",
										"versions",
										"{{version_1}}",
										"references"
									],
									"query": [
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "4.4.20 Get details from non existing operation",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_1}}/rest/operations/nothing123",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"versions",
										"{{version_1}}",
										"rest",
										"operations",
										"nothing123"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.4.21 Operation change log",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = pm.response.json();\r",
											"\r",
											"pm.test(\"Operation has 5 changes\", function () {\r",
											"    pm.expect(data.changes.length).to.eql(4);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_2}}/rest/operations/{{operation_id_1}}/changes",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"versions",
										"{{version_2}}",
										"rest",
										"operations",
										"{{operation_id_1}}",
										"changes"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.4.22 Get package version config",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = pm.response.json();\r",
											"\r",
											"pm.test(\"Version status = 'release'\", function () {\r",
											"    pm.expect(data.status).to.eql('release');\r",
											"});\r",
											"\r",
											"pm.test(\"Version buildType = 'build'\", function () {\r",
											"    pm.expect(data.buildType).to.eql('build');\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_1}}/config",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"versions",
										"{{version_1}}",
										"config"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.4.23 Get list of operations with 'experimental' kind",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"List of operations displayed\", () => {\r",
											"    pm.expect(data.operations.length).to.eql(0);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_1}}/rest/operations?kind=experimental",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"versions",
										"{{version_1}}",
										"rest",
										"operations"
									],
									"query": [
										{
											"key": "kind",
											"value": "experimental"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "4.4.24 Get list of operations with non existing tag",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"List of operations displayed\", () => {\r",
											"    pm.expect(data.operations.length).to.eql(0);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_1}}/rest/operations?tag=pets1",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"versions",
										"{{version_1}}",
										"rest",
										"operations"
									],
									"query": [
										{
											"key": "tag",
											"value": "pets1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "4.4.25 Get list of operations filtered by hash",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Only 1 operation displayed\", () => {\r",
											"    pm.expect(data.operations.length).to.eql(1);\r",
											"});\r",
											"\r",
											"pm.test(\"There is no 'deprecated' operations\", () => {\r",
											"    pm.expect(data.packages.status).not.to.eql('deprecated');\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_1}}/rest/operations?hashList={{hash_1}}&deprecated=false&ids={{operation_id_1}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"versions",
										"{{version_1}}",
										"rest",
										"operations"
									],
									"query": [
										{
											"key": "hashList",
											"value": "{{hash_1}}"
										},
										{
											"key": "deprecated",
											"value": "false"
										},
										{
											"key": "ids",
											"value": "{{operation_id_1}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "4.4.26 Validation filter results of document versions",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = pm.response.json();\r",
											"\r",
											"pm.test(\"Document displayed\", () => {\r",
											"    pm.expect(data.documents[0].title).to.eql('ATUI Petstore 3.0');\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_1}}/documents?textFilter=petstore",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"versions",
										"{{version_1}}",
										"documents"
									],
									"query": [
										{
											"key": "textFilter",
											"value": "petstore"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "4.4.27 Get package version content with wrong 'includeOperations' query parameter",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_1}}?includeOperations=test",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"versions",
										"{{version_1}}"
									],
									"query": [
										{
											"key": "includeOperations",
											"value": "test"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "4.4.28 Get package version content with wrong 'includeSummary' query parameter",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_1}}?includeSummary=test",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"versions",
										"{{version_1}}"
									],
									"query": [
										{
											"key": "includeSummary",
											"value": "test"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "4.4.29 Operation change log",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = pm.response.json();\r",
											"\r",
											"pm.test(\"Operation has 1 'non-breaking' change\", function () {\r",
											"    pm.expect(data.changes.length).to.eql(1);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_2}}/rest/operations/{{operation_id_1}}/changes?severity=non-breaking",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"versions",
										"{{version_2}}",
										"rest",
										"operations",
										"{{operation_id_1}}",
										"changes"
									],
									"query": [
										{
											"key": "severity",
											"value": "non-breaking"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "4.4.30 Version change log",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"setTimeout(() => { },1000);\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"There is change in 1 operation\", function () {\r",
											"    pm.expect(data.operations.length).to.eql(1);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v3/packages/{{package_1}}/versions/{{version_2}}/rest/changes?textFilter=post&apiKind=bwc&tag=pet&severity=breaking",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v3",
										"packages",
										"{{package_1}}",
										"versions",
										"{{version_2}}",
										"rest",
										"changes"
									],
									"query": [
										{
											"key": "textFilter",
											"value": "post"
										},
										{
											"key": "apiKind",
											"value": "bwc"
										},
										{
											"key": "tag",
											"value": "pet"
										},
										{
											"key": "severity",
											"value": "breaking"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "4.4.31 Version changelog async calculation with response in 'json' format",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is OK\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 202]);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"packageId\": \"{{package_1}}\",\r\n    \"version\": \"{{version_2}}\",\r\n    \"previousVersion\": \"{{version_1}}\",\r\n    \"previousVersionPackageId\": \"{{package_1}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/compare",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"compare"
									],
									"query": [
										{
											"key": "responseFormat",
											"value": "json",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "4.4.32 Filter package versions by 'status' query parameter",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = pm.response.json();\r",
											"\r",
											"pm.test(\"Only 2 versions found\", function () {\r",
											"    pm.expect(data.versions.length).to.eq(2);\r",
											"});\r",
											"\r",
											"pm.test(\"Found version has 'release' status\", function () {\r",
											"    pm.expect(data.versions[0].status).to.eql('release');\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions?status=release",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"versions"
									],
									"query": [
										{
											"key": "status",
											"value": "release"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "4.4.34 Get package version content with 'includeOperations' query parameter",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = pm.response.json();\r",
											"\r",
											"pm.test(\"Tag exists under version\", function () {\r",
											"    pm.expect(data.operationTypes[0].apiType).to.eql('rest');\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_1}}?includeOperations=true",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"versions",
										"{{version_1}}"
									],
									"query": [
										{
											"key": "includeOperations",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "4.4.35 Get package version content with 'includeSummary' query parameter",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = pm.response.json();\r",
											"\r",
											"pm.test(\"Number of operation is correct\", function () {\r",
											"    pm.expect(data.operationTypes[0].operationsCount).to.eql(4);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_1}}?includeSummary=true",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"versions",
										"{{version_1}}"
									],
									"query": [
										{
											"key": "includeSummary",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "4.4.36 Filter package versions by 'versionLabel' query parameter",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = pm.response.json();\r",
											"\r",
											"pm.test(\"Found version has specified label\", function () {\r",
											"    pm.expect(data.versions[0].versionLabels).to.include('API_Smoke');\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions?versionLabel=API_Smoke",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"versions"
									],
									"query": [
										{
											"key": "versionLabel",
											"value": "API_Smoke"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "4.4.37 Filter package versions by name using 'textFilter' query parameter",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = pm.response.json();\r",
											"\r",
											"pm.test(\"Found version has specified label\", function () {\r",
											"    pm.expect(data.versions[0].version).to.include('0001.2');\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions?textFilter=0001.2",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"versions"
									],
									"query": [
										{
											"key": "textFilter",
											"value": "0001.2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "4.4.38 Filter package versions by name using 'versionLabel' query parameter",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = pm.response.json();\r",
											"\r",
											"pm.test(\"Found version has specified label\", function () {\r",
											"    pm.expect(data.versions[0].versionLabels).to.include('API_Smoke');\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions?versionLabel=API_Smoke",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"versions"
									],
									"query": [
										{
											"key": "versionLabel",
											"value": "API_Smoke"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "4.4.39 Update package version 2 with label",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = pm.response.json();\r",
											"\r",
											"pm.test(\"Expected label is present\", () => {\r",
											"    pm.expect(data.versionLabels).to.include(\"API_Smoke\")\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " {\r\n     \"versionLabels\": [\r\n         \"API_Smoke\"\r\n        ]\r\n }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_1}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"versions",
										"{{version_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.4.40 Get the version revisions list",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v3/packages/{{package_1}}/versions/{{version_2}}/revisions?textFilter=API_Smoke",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v3",
										"packages",
										"{{package_1}}",
										"versions",
										"{{version_2}}",
										"revisions"
									],
									"query": [
										{
											"key": "textFilter",
											"value": "API_Smoke"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "4.4.41 Get the version revisions list with wrogn query parameter",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v3/packages/{{package_1}}/versions/{{version_2}}/revisions?limit=a",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v3",
										"packages",
										"{{package_1}}",
										"versions",
										"{{version_2}}",
										"revisions"
									],
									"query": [
										{
											"key": "limit",
											"value": "a"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "4.4.42 Get the version revisions list filtered by user name",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v3/packages/{{package_1}}/versions/{{version_2}}/revisions?limit=1",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v3",
										"packages",
										"{{package_1}}",
										"versions",
										"{{version_2}}",
										"revisions"
									],
									"query": [
										{
											"key": "textFilter",
											"value": "{{at-api-key}}",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "4.4.43 Get list of operations with empty tags",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"List of operations displayed\", () => {\r",
											"    pm.expect(data.operations.length).to.eql(0);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_1}}/rest/operations?emptyTag=true",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"versions",
										"{{version_1}}",
										"rest",
										"operations"
									],
									"query": [
										{
											"key": "emptyTag",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "4.4.44 Get list of tags filtered by name",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = pm.response.json();\r",
											"\r",
											"pm.test(\"Specified tag wasn't found\", function () {\r",
											"    pm.expect(data.tags.length).to.eq(0);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_1}}/rest/tags?textFilter=1",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"versions",
										"{{version_1}}",
										"rest",
										"tags"
									],
									"query": [
										{
											"key": "textFilter",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "4.4.45 Version change log filtered by path",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Found chages have specified path\", () => {\r",
											"    pm.expect(data.operations[0].path).to.include('/api/v1/pet')\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v3/packages/{{package_1}}/versions/{{version_2_2}}/rest/changes?textFilter=/api/v1/pet&refPackageId={{package_1}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v3",
										"packages",
										"{{package_1}}",
										"versions",
										"{{version_2_2}}",
										"rest",
										"changes"
									],
									"query": [
										{
											"key": "textFilter",
											"value": "/api/v1/pet"
										},
										{
											"key": "refPackageId",
											"value": "{{package_1}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "4.4.46 Version change log filtered by title",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"First operation's title should contain 'Bundles'\", function () {\r",
											"    const firstOperation = data.operations[0];\r",
											"    pm.expect(firstOperation.currentOperation).to.have.property(\"title\");\r",
											"    pm.expect(firstOperation.currentOperation.title).to.include(\"Semi-Breaking\");\r",
											"});\r",
											"\r",
											"pm.test(\"2 operations displayed\", () => {\r",
											"    pm.expect(data.operations.length).to.eql(3);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v3/packages/{{package_1}}/versions/{{version_2_2}}/rest/changes?textFilter=pet",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v3",
										"packages",
										"{{package_1}}",
										"versions",
										"{{version_2_2}}",
										"rest",
										"changes"
									],
									"query": [
										{
											"key": "textFilter",
											"value": "pet"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "4.4.47 Export API changes with previos release version",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-type is application\", function () {\r",
											"    pm.response.to.have.header('Content-Type');\r",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application');\r",
											"    pm.response.to.have.header('Content-Disposition');\r",
											"    pm.expect(pm.response.headers.get('Content-Disposition')).to.include('attachment');\r",
											"    pm.expect(pm.response.headers.get('Content-Disposition')).to.include(\"filename=APIChanges_\" + pm.variables.replaceIn('{{package_1}}') + \"_\" + pm.variables.replaceIn('{{version_2_2}}' + \".xlsx\"));\r",
											"});\r",
											"\r",
											"pm.test(\"File isn't empty\", () => {\r",
											"    pm.expect(responseBody.length).to.greaterThan(0)\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_2_2}}/changes/export",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"versions",
										"{{version_2_2}}",
										"changes",
										"export"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.4.48 Version changelog async calculation with response in 'xlsx' format",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is OK\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 202]);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"packageId\": \"{{package_1}}\",\r\n    \"version\": \"{{version_2_2}}\",\r\n    \"previousVersion\": \"{{version_1_2}}\",\r\n    \"previousVersionPackageId\": \"{{package_1}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/compare",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"compare"
									],
									"query": [
										{
											"key": "responseFormat",
											"value": "excel",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "4.4.49 Version changelog async calculation with \"'clientBuild'=true\"",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is OK\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"packageId\": \"{{package_1}}\",\r\n    \"version\": \"{{version_2_2}}\",\r\n    \"previousVersion\": \"{{version_1_2}}\",\r\n    \"previousVersionPackageId\": \"{{package_1}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/compare?clientBuild=true&builderId=5680525d-7c7b-47be-8ede-d502626a79dc",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"compare"
									],
									"query": [
										{
											"key": "clientBuild",
											"value": "true"
										},
										{
											"key": "builderId",
											"value": "5680525d-7c7b-47be-8ede-d502626a79dc"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "4.4.50 Get changes summary",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"apiType is 'rest'\", function () {\r",
											"    pm.expect(data.operationTypes[0].apiType).to.eql('rest')\r",
											"});\r",
											"\r",
											"pm.test(\"There are 5 'breaking' changes\", function () {\r",
											"    pm.expect(data.operationTypes[0].changesSummary.breaking).to.eql(6)\r",
											"});\r",
											"\r",
											"pm.test(\"There are 0 'semi-breaking' changes\", function () {\r",
											"    pm.expect(data.operationTypes[0].changesSummary[\"semi-breaking\"]).to.eql(6)\r",
											"});\r",
											"\r",
											"pm.test(\"There are 1 'deprecated' change\", function () {\r",
											"    pm.expect(data.operationTypes[0].changesSummary.deprecated).to.eql(0)\r",
											"});\r",
											"\r",
											"pm.test(\"There are 1 'non-breaking' change\", function () {\r",
											"    pm.expect(data.operationTypes[0].changesSummary[\"non-breaking\"]).to.eql(12)\r",
											"});\r",
											"\r",
											"pm.test(\"There are 1 'annotation' change\", function () {\r",
											"    pm.expect(data.operationTypes[0].changesSummary.annotation).to.eql(0)\r",
											"});\r",
											"\r",
											"pm.test(\"There are 0 'unclassified' changes\", function () {\r",
											"    pm.expect(data.operationTypes[0].changesSummary.unclassified).to.eql(0)\r",
											"});\r",
											"\r",
											"pm.test(\"currentAudience = external\", function () {\r",
											"    pm.expect(data.operationTypes[0].apiAudienceTransitions[0].currentAudience).to.eql('external')\r",
											"});\r",
											"\r",
											"pm.test(\"previousAudience = internal\", function () {\r",
											"    pm.expect(data.operationTypes[0].apiAudienceTransitions[0].previousAudience).to.eql('internal')\r",
											"});\r",
											"\r",
											"pm.test(\"apiAudienceTransitions for 4 operations\", function () {\r",
											"    pm.expect(data.operationTypes[0].apiAudienceTransitions[0].operationsCount).to.eql(4)\r",
											"});\r",
											"\r",
											"pm.test(\"Tag 'pet' is present\", function () {\r",
											"    pm.expect(data.operationTypes[0].tags).to.include('pet')\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_2}}/changes/summary",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"versions",
										"{{version_2}}",
										"changes",
										"summary"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.4.53 Get list of operations filtered by 'groups' query parameter",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"List has 2 operations\", () => {\r",
											"    pm.expect(data.operations.length).to.eql(4);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_1}}/rest/operations?groups=v1",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"versions",
										"{{version_1}}",
										"rest",
										"operations"
									],
									"query": [
										{
											"key": "groups",
											"value": "v1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "4.4.54 Get list of operations with 'emptyGroup' query parameter",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"List of operations has 0 operations\", () => {\r",
											"    pm.expect(data.operations.length).to.eql(0);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_1}}/rest/operations?emptyGroup=true",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"versions",
										"{{version_1}}",
										"rest",
										"operations"
									],
									"query": [
										{
											"key": "group",
											"value": "1",
											"disabled": true
										},
										{
											"key": "emptyGroup",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "4.4.56 Export operations to xlsx file",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-type is application\", function () {\r",
											"    pm.response.to.have.header('Content-Type');\r",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application');\r",
											"    pm.response.to.have.header('Content-Disposition');\r",
											"    pm.expect(pm.response.headers.get('Content-Disposition')).to.include('attachment');\r",
											"    pm.expect(pm.response.headers.get('Content-Disposition')).to.include(\"filename=APIOperations_\" + pm.variables.replaceIn('{{package_1}}') + \"_\" + pm.variables.replaceIn('{{version_1_2}}' + \".xlsx\"));\r",
											"});\r",
											"\r",
											"pm.test(\"File isn't empty\", () => {\r",
											"    pm.expect(responseBody.length).to.greaterThan(0)\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_1}}/rest/export/operations?kind=bwc&textFilter=POST&tag=pet",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"versions",
										"{{version_1}}",
										"rest",
										"export",
										"operations"
									],
									"query": [
										{
											"key": "kind",
											"value": "bwc"
										},
										{
											"key": "textFilter",
											"value": "POST"
										},
										{
											"key": "tag",
											"value": "pet"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "4.4.57 Export operations with empty tag to xlsx file",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_1}}/rest/export/operations?emptyTag=true",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"versions",
										"{{version_1}}",
										"rest",
										"export",
										"operations"
									],
									"query": [
										{
											"key": "emptyTag",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "4.4.58 Export API changes to xlsx file",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-type is application\", function () {\r",
											"    pm.response.to.have.header('Content-Type');\r",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application');\r",
											"    pm.response.to.have.header('Content-Disposition');\r",
											"    pm.expect(pm.response.headers.get('Content-Disposition')).to.include('attachment');\r",
											"    pm.expect(pm.response.headers.get('Content-Disposition')).to.include(\"filename=APIChanges_\" + pm.variables.replaceIn('{{package_1}}') + \"_\" + pm.variables.replaceIn('{{version_2_2}}' + \".xlsx\"));\r",
											"});\r",
											"\r",
											"pm.test(\"File isn't empty\", () => {\r",
											"    pm.expect(responseBody.length).to.greaterThan(0)\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v3/packages/{{package_1}}/versions/{{version_2_2}}/rest/export/changes?apiKind=bwc&tag=pet",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v3",
										"packages",
										"{{package_1}}",
										"versions",
										"{{version_2_2}}",
										"rest",
										"export",
										"changes"
									],
									"query": [
										{
											"key": "apiKind",
											"value": "bwc"
										},
										{
											"key": "tag",
											"value": "pet"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "4.4.59 Delete Version 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"\r",
											"setTimeout(() => { },400);"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_1_2}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"versions",
										"{{version_1_2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.4.59-1 Check 'delete_version' event for package",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"'delete_version' event displayed\", function () {\r",
											"    pm.expect(data.events[0].eventType).to.eql('delete_version');\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v4/packages/{{package_1}}/activity",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v4",
										"packages",
										"{{package_1}}",
										"activity"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.4.60 Get deleted package version content",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_1}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"versions",
										"{{version_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.4.61 Check previous version is null",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = pm.response.json();\r",
											"\r",
											"pm.test(\"previousVersion is null\", function () {\r",
											"pm.expect(data).to.not.have.property('previousVersion');\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions/{{version_2}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"versions",
										"{{version_2}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "4.5 Validation of mandatory parameters in send build result",
					"item": [
						{
							"name": "4.5.1 Package client publish",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 202\", function () {\r",
											"    pm.response.to.have.status(202);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"pm.environment.set(\"publish_id\", data.publishId)"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
										"type": "default"
									},
									{
										"key": "Content-Transfer-Encoding",
										"value": "base64",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"clientBuild\"\r\n\r\ntrue\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"builderId\"\r\n\r\n5680525d-7c7b-47be-8ede-d502626a79dc\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"config\"\r\n\r\n{\r\n    \"version\": \"1.0\",\r\n    \"status\": \"draft\",\r\n    \"versionFolder\": \"qwerty\",\r\n    \"refs\": [],\r\n    \"files\": [{\r\n            \"fileId\": \"pet.json\",\r\n            \"publish\": true\r\n        }\r\n    ]\r\n}\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"sources\"; filename=\"pet.zip\"\r\nContent-Type: application/zip;base64\r\n\r\nUEsDBBQAAAAIAKVUaFVvBws0AwMAAGcQAAAIAAAAcGV0Lmpzb27tV0tu2zAQ3esURFbtwr+k6EK7tghQA21hoLkAK40tppLIkCMnRtG7d0hTpm1KthU0QBbhIgg0Hw7fvPlYKqi5Eim7GU/H00TUS5kmjK1BGyHrlM3o84w+oMASUvbzka9WoNkC0KDUQJJSZFAbICs6Na9I6/v8LjGgrRP7ecQaXaasQFTpZKK86dhsfY2FnKxnieJYOG2nsPW2AqR/3DFNVXG9Sdk3YZDxsmRWzQvpEZojxTvPU1aSwiLIkK+sN39G+2aKawoXbZRBwT3BeqkE0tf2CMLioQG92fuWg8m0UOiA+iofWcXrDRMIlWEomQZsdM04MlkDAVgBe1fxJzabTt8HL6T20AgNFPmSlwb2JCYroOJtbP45GwUpRYNA0B1IllJXHJ3s5jppfRslKTl7D7y6nk6v0r5XfCJQVpAzrjXfMLn0cO1OATz3eIXzNKrhyWeq128p6t8WFSyAWXV3Ed0QYtzZx6+PETCoRb3aE2aSMKmPouBKET0dNSb3hgIZdIcD4Vi2zW9rEhvJX/eQBebEeT40DbwTeSQIhOwWWXJ3SJS2BYGiTXv0goMYLmNXJ88+fujScQG3N1yYvd2xTxpkm8OSNyX2MrohsinKCJEatJb6ZSnjsz8k9yOKI4dOQQXGUJUkwxJs3aXJ89J71ESOj4+I3F+UHyVN3MC/aOAIjNvW0tW/Mye/rIMP7m8/mrLcWb1x6NVzyC0Dkz/0d57/7V8K5rS22HuJVYYSJZYi66OXKeQjkevzZp6f59epDcHFdLQh2CWmc7SjbqCPXXcFUEumUWhno3XrlwctYH3ZOrCF67k1ceu5vbO093O25qXI3RPA4CtkPM3LAdPSzcqBRSDy/1ACNCOHTMiDhA6Yjm+z8aKUvo6+lsmKCo3gpRhb1Hy4i113i1GLsQp1ELM/cD6GJfD7PAAxlwODT/PPXn9SZ+F+6cUrd7xox3DEgMSQxKAEWE7yhTw842eXhycAdLZXe5DO6N3a2hzIClc3cbX0vtkZDKRDqILWf2+2/wFQSwECPwAUAAAACAClVGhVbwcLNAMDAABnEAAACAAkAAAAAAAAACAAAAAAAAAAcGV0Lmpzb24KACAAAAAAAAEAGAAAVwLpRPPYATSR9S6xytkBUMLbQ6zK2QFQSwUGAAAAAAEAAQBaAAAAKQMAAAAA\r\n----------------------------127308995100818139707097--",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/publish",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"publish"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.5.2 Send build result without 'package_id' info parameter",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
										"type": "default"
									},
									{
										"key": "Content-Transfer-Encoding",
										"value": "base64",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"status\"\r\n\r\ncomplete\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"builderId\"\r\n\r\n5680525d-7c7b-47be-8ede-d502626a79dc\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"data\"; filename=\"package.zip\"\r\nContent-Type: application/zip;base64\r\n\r\n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\r\n----------------------------127308995100818139707097--",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v3/packages/{{package_1}}/publish/{{publish_id}}/status",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v3",
										"packages",
										"{{package_1}}",
										"publish",
										"{{publish_id}}",
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.5.3 Send build result without 'version' info parameter",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
										"type": "default"
									},
									{
										"key": "Content-Transfer-Encoding",
										"value": "base64",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"status\"\r\n\r\ncomplete\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"builderId\"\r\n\r\n5680525d-7c7b-47be-8ede-d502626a79dc\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"data\"; filename=\"package.zip\"\r\nContent-Type: application/zip;base64\r\n\r\\r\n----------------------------127308995100818139707097--",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v3/packages/{{package_1}}/publish/{{publish_id}}/status",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v3",
										"packages",
										"{{package_1}}",
										"publish",
										"{{publish_id}}",
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.5.4 Send build result without 'FileId' parameter in document",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
										"type": "default"
									},
									{
										"key": "Content-Transfer-Encoding",
										"value": "base64",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"status\"\r\n\r\ncomplete\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"builderId\"\r\n\r\n5680525d-7c7b-47be-8ede-d502626a79dc\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"data\"; filename=\"package.zip\"\r\nContent-Type: application/zip;base64\r\n\r\n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\r\n----------------------------127308995100818139707097--",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v3/packages/{{package_1}}/publish/{{publish_id}}/status",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v3",
										"packages",
										"{{package_1}}",
										"publish",
										"{{publish_id}}",
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.5.5 Send build result without 'Slug' parameter in document",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
										"type": "default"
									},
									{
										"key": "Content-Transfer-Encoding",
										"value": "base64",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"status\"\r\n\r\ncomplete\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"builderId\"\r\n\r\n5680525d-7c7b-47be-8ede-d502626a79dc\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"data\"; filename=\"package.zip\"\r\nContent-Type: application/zip;base64\r\n\r\n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\r\n----------------------------127308995100818139707097--",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v3/packages/{{package_1}}/publish/{{publish_id}}/status",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v3",
										"packages",
										"{{package_1}}",
										"publish",
										"{{publish_id}}",
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.5.6 Send build result without 'Type' parameter in document",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
										"type": "default"
									},
									{
										"key": "Content-Transfer-Encoding",
										"value": "base64",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"status\"\r\n\r\ncomplete\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"builderId\"\r\n\r\n5680525d-7c7b-47be-8ede-d502626a79dc\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"data\"; filename=\"package.zip\"\r\nContent-Type: application/zip;base64\r\n\r\n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\r\n----------------------------127308995100818139707097--",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v3/packages/{{package_1}}/publish/{{publish_id}}/status",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v3",
										"packages",
										"{{package_1}}",
										"publish",
										"{{publish_id}}",
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.5.7 Send build result without 'Title' parameter in document",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
										"type": "default"
									},
									{
										"key": "Content-Transfer-Encoding",
										"value": "base64",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"status\"\r\n\r\ncomplete\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"builderId\"\r\n\r\n5680525d-7c7b-47be-8ede-d502626a79dc\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"data\"; filename=\"package.zip\"\r\nContent-Type: application/zip;base64\r\n\r\n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\r\n----------------------------127308995100818139707097--",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v3/packages/{{package_1}}/publish/{{publish_id}}/status",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v3",
										"packages",
										"{{package_1}}",
										"publish",
										"{{publish_id}}",
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.5.8 Send build result without 'OperationIds' parameter in document",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
										"type": "default"
									},
									{
										"key": "Content-Transfer-Encoding",
										"value": "base64",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"status\"\r\n\r\ncomplete\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"builderId\"\r\n\r\n5680525d-7c7b-47be-8ede-d502626a79dc\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"data\"; filename=\"package.zip\"\r\nContent-Type: application/zip;base64\r\n\r\n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\r\n----------------------------127308995100818139707097--",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v3/packages/{{package_1}}/publish/{{publish_id}}/status",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v3",
										"packages",
										"{{package_1}}",
										"publish",
										"{{publish_id}}",
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.5.11 Send build result without 'OperationId' parameter in operations",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
										"type": "default"
									},
									{
										"key": "Content-Transfer-Encoding",
										"value": "base64",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"status\"\r\n\r\ncomplete\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"builderId\"\r\n\r\n5680525d-7c7b-47be-8ede-d502626a79dc\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"data\"; filename=\"package.zip\"\r\nContent-Type: application/zip;base64\r\n\r\n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\r\n----------------------------127308995100818139707097--",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v3/packages/{{package_1}}/publish/{{publish_id}}/status",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v3",
										"packages",
										"{{package_1}}",
										"publish",
										"{{publish_id}}",
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.5.12 Send build result without 'Title' parameter in operations",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
										"type": "default"
									},
									{
										"key": "Content-Transfer-Encoding",
										"value": "base64",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"status\"\r\n\r\ncomplete\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"builderId\"\r\n\r\n5680525d-7c7b-47be-8ede-d502626a79dc\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"data\"; filename=\"package.zip\"\r\nContent-Type: application/zip;base64\r\n\r\n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\r\n----------------------------127308995100818139707097--",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v3/packages/{{package_1}}/publish/{{publish_id}}/status",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v3",
										"packages",
										"{{package_1}}",
										"publish",
										"{{publish_id}}",
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.5.13 Send build result without 'ApiType' parameter in operations",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
										"type": "default"
									},
									{
										"key": "Content-Transfer-Encoding",
										"value": "base64",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"status\"\r\n\r\ncomplete\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"builderId\"\r\n\r\n5680525d-7c7b-47be-8ede-d502626a79dc\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"data\"; filename=\"package.zip\"\r\nContent-Type: application/zip;base64\r\n\r\n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\r\n----------------------------127308995100818139707097--",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v3/packages/{{package_1}}/publish/{{publish_id}}/status",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v3",
										"packages",
										"{{package_1}}",
										"publish",
										"{{publish_id}}",
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.5.14 Send build result without 'DataHash' parameter in operations",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
										"type": "default"
									},
									{
										"key": "Content-Transfer-Encoding",
										"value": "base64",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"status\"\r\n\r\ncomplete\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"builderId\"\r\n\r\n5680525d-7c7b-47be-8ede-d502626a79dc\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"data\"; filename=\"package.zip\"\r\nContent-Type: application/zip;base64\r\n\r\nUEsDBAoAAAAAANVlilVDv6ajAgAAAAIAAAAOAAAAY2hhbmdlbG9nLmpzb257fVBLAwQUAAAAAACTcQlXAAAAAAAAAAAAAAAACgAAAGRvY3VtZW50cy9QSwMEFAAAAAgAHHEJVxqS/nyYAAAALQEAAA4AAABkb2N1bWVudHMuanNvbn2QzQrCMBCEzxb6DiFnG1q8+QbeBI/iIdhtiOSPZKuI9N3dBqFipHvYw87HsDOvuuK9v44WHCa+Z+e62tCNfQ0ftIFDTyIPgOKWvOPbHySZUX2AQsNngFnzAZwMutk1bcEMPlqJM/XXHjWa7HF6SKUgsiNgQh+hIO8QkyYHYjvRim4BljD0hoWVOPnVKJF8ciUX6mSiNb0BUEsDBBQAAAAIAKVUaFVvBws0AwMAAGcQAAASAAAAZG9jdW1lbnRzL3BldC5qc29u7VdLbtswEN3rFERW7cK/pOhCu7YIUANtYaC5ACuNLaaSyJAjJ0bRu3dIU6ZtSrYVNEAW4SIINB8O37z5WCqouRIpuxlPx9NE1EuZJoytQRsh65TN6POMPqDAElL285GvVqDZAtCg1ECSUmRQGyArOjWvSOv7/C4xoK0T+3nEGl2mrEBU6WSivOnYbH2NhZysZ4niWDhtp7D1tgKkf9wxTVVxvUnZN2GQ8bJkVs0L6RGaI8U7z1NWksIiyJCvrDd/RvtmimsKF22UQcE9wXqpBNLX9gjC4qEBvdn7loPJtFDogPoqH1nF6w0TCJVhKJkGbHTNODJZAwFYAXtX8Sc2m07fBy+k9tAIDRT5kpcG9iQmK6DibWz+ORsFKUWDQNAdSJZSVxyd7OY6aX0bJSk5ew+8up5Or9K+V3wiUFaQM6413zC59HDtTgE893iF8zSq4clnqtdvKerfFhUsgFl1dxHdEGLc2cevjxEwqEW92hNmkjCpj6LgShE9HTUm94YCGXSHA+FYts1vaxIbyV/3kAXmxHk+NA28E3kkCITsFllyd0iUtgWBok179IKDGC5jVyfPPn7o0nEBtzdcmL3dsU8aZJvDkjcl9jK6IbIpygiRGrSW+mUp47M/JPcjiiOHTkEFxlCVJMMSbN2lyfPSe9REjo+PiNxflB8lTdzAv2jgCIzb1tLVvzMnv6yDD+5vP5qy3Fm9cejVc8gtA5M/9Hee/+1fCua0tth7iVWGEiWWIuujlynkI5Hr82aen+fXqQ3BxXS0IdglpnO0o26gj113BVBLplFoZ6N165cHLWB92Tqwheu5NXHrub2ztPdztualyN0TwOArZDzNywHT0s3KgUUg8v9QAjQjh0zIg4QOmI5vs/GilL6OvpbJigqN4KUYW9R8uItdd4tRi7EKdRCzP3A+hiXw+zwAMZcDg0/zz15/UmfhfunFK3e8aMdwxIDEkMSgBFhO8oU8PONnl4cnAHS2V3uQzujd2tocyApXN3G19L7ZGQykQ6iC1n9vtv8BUEsDBBQAAAAIAA9+CVfFhRfRqQAAAOcAAAAJAAAAaW5mby5qc29uRY5BC4MwDIX/iuSsMrebtyFjyEAEvQ0Pmaalm1ppo2OI/30tMnZLvvfy8laYsH2hpLyDFIosqupznWdRfanq6BiXt2sCISxkrNKjcyTxwe2WzKJaKnAgx/DRQhiAZeTZQhpAZ1CwR4aEA/cmBKF68uPqp/3ZRBw/rUt1RqHNgOxvf2Tcs/8m4M/kicaTb9DPcpe9orj3UvVGKckEJbFlbShwbeMEtmb7AlBLAwQUAAAACABugQlXFYHAl54AAAAfAQAADwAAAG9wZXJhdGlvbnMuanNvbm2PwQrCMAyGzx3sHUrPjrHr3kD0pjfxELfgCnMrbZhI6bvblEpBzSEkfz6SP76u1GrQAul1caqXl7qSOTyXJQq3HyOotq4xSK65I6ndF0qaZmToqB1JmGfJ6A8GRp9fJoEWHf2bH/SSrt2eA4+FEMoh2GE6DdEPO/Yh6w8kGIFA9an3MbNsgCbe0G5d+3EhMj+taTm/kMRQDIRrXYU3UEsBAj8ACgAAAAAA1WWKVUO/pqMCAAAAAgAAAA4AJAAAAAAAAAAgAAAAAAAAAGNoYW5nZWxvZy5qc29uCgAgAAAAAAABABgA4K9kTnwM2QFQbOHCwsrZARzktFLpydkBUEsBAj8AFAAAAAAAk3EJVwAAAAAAAAAAAAAAAAoAJAAAAAAAAAAQAAAALgAAAGRvY3VtZW50cy8KACAAAAAAAAEAGAA6ojtnssrZAa/sd/y/ytkBiQwLw/3J2QFQSwECPwAUAAAACAAccQlXGpL+fJgAAAAtAQAADgAkAAAAAAAAACAAAABWAAAAZG9jdW1lbnRzLmpzb24KACAAAAAAAAEAGADvwGbiscrZAYpp4cLCytkBgP4pKK3K2QFQSwECPwAUAAAACAClVGhVbwcLNAMDAABnEAAAEgAkAAAAAAAAACAAAAAaAQAAZG9jdW1lbnRzL3BldC5qc29uCgAgAAAAAAABABgAAFcC6UTz2AFQbOHCwsrZATPWkMb9ydkBUEsBAj8AFAAAAAgAD34JV8WFF9GpAAAA5wAAAAkAJAAAAAAAAAAgAAAATQQAAGluZm8uanNvbgoAIAAAAAAAAQAYAAUJjMu/ytkBUGzhwsLK2QGKt7ZS6cnZAVBLAQI/ABQAAAAIAG6BCVcVgcCXngAAAB8BAAAPACQAAAAAAAAAIAAAAB0FAABvcGVyYXRpb25zLmpzb24KACAAAAAAAAEAGABw1YcBw8rZAe76hwHDytkBftK0k/rJ2QFQSwUGAAAAAAYABgA8AgAA6AUAAAAA\r\n----------------------------127308995100818139707097--",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v3/packages/{{package_1}}/publish/{{publish_id}}/status",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v3",
										"packages",
										"{{package_1}}",
										"publish",
										"{{publish_id}}",
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.5.15 Send build result without 'ApiKind' parameter in operations",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
										"type": "default"
									},
									{
										"key": "Content-Transfer-Encoding",
										"value": "base64",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"status\"\r\n\r\ncomplete\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"builderId\"\r\n\r\n5680525d-7c7b-47be-8ede-d502626a79dc\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"data\"; filename=\"package.zip\"\r\nContent-Type: application/zip;base64\r\n\r\n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\r\n----------------------------127308995100818139707097--",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v3/packages/{{package_1}}/publish/{{publish_id}}/status",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v3",
										"packages",
										"{{package_1}}",
										"publish",
										"{{publish_id}}",
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.5.16 Send build result without 'SearchScopes' parameter in operations",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
										"type": "default"
									},
									{
										"key": "Content-Transfer-Encoding",
										"value": "base64",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"status\"\r\n\r\ncomplete\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"builderId\"\r\n\r\n5680525d-7c7b-47be-8ede-d502626a79dc\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"data\"; filename=\"package.zip\"\r\nContent-Type: application/zip;base64\r\n\r\n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\r\n----------------------------127308995100818139707097--",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v3/packages/{{package_1}}/publish/{{publish_id}}/status",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v3",
										"packages",
										"{{package_1}}",
										"publish",
										"{{publish_id}}",
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.5.17 Send build result without 'Metadata' parameter in operations",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
										"type": "default"
									},
									{
										"key": "Content-Transfer-Encoding",
										"value": "base64",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"status\"\r\n\r\ncomplete\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"builderId\"\r\n\r\n5680525d-7c7b-47be-8ede-d502626a79dc\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"data\"; filename=\"package.zip\"\r\nContent-Type: application/zip;base64\r\n\r\n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\r\n----------------------------127308995100818139707097--",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v3/packages/{{package_1}}/publish/{{publish_id}}/status",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v3",
										"packages",
										"{{package_1}}",
										"publish",
										"{{publish_id}}",
										"status"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "",
						"type": "string"
					}
				]
			}
		},
		{
			"name": "5. Dashboard: publish, apikeys, versions",
			"item": [
				{
					"name": "5.1 Publish",
					"item": [
						{
							"name": "5.1.1 Delete static test data from DB",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/internal/clear/STATIC-TEST-3",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"internal",
										"clear",
										"STATIC-TEST-3"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.1.2 Add static test group",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"pm.environment.set(\"static_root_group_1\", data.groupId)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"QS-STATIC-TEST-3\",\r\n    \"Alias\" :\"QS-STATIC-TEST-3\",\r\n    \"name\": \"Test Workspace 3\",\r\n    \"parentId\": null,\r\n    \"kind\":\"workspace\",\r\n    \"description\": \"Required for to upload hardcoded packages\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.1.3 Add static dashboard",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"pm.environment.set(\"static_root_dash_1\", data.id)\r",
											"pm.environment.set(\"dashboard_1\", data.packageId)"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"QS-STATIC-TEST-3.PKG5\",\r\n    \"Alias\" :\"PKG5\",\r\n    \"name\": \"Test static package 1\",\r\n    \"parentId\": \"QS-STATIC-TEST-3\",\r\n    \"kind\":\"dashboard\",\r\n    \"description\": \"Package to be built\",\r\n    \"serviceName\": \"\",\r\n    \"imageUrl\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.1.4 Get no build task",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is OK\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 204]);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
										"type": "default",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/builders/5680525d-7c7b-47be-8ede-d502626a79dc/tasks",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"builders",
										"5680525d-7c7b-47be-8ede-d502626a79dc",
										"tasks"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.1.5 Dashboard server publish version#1",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 202\", function () {\r",
											"    pm.response.to.have.status(202);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"pm.environment.set(\"publish_id\", data.publishId);\r",
											"\r",
											"setTimeout(function(){}, 10000)\r",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
										"type": "default"
									},
									{
										"key": "Content-Transfer-Encoding",
										"value": "base64",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"clientBuild\"\r\n\r\nfalse\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"builderId\"\r\n\r\n5680525d-7c7b-47be-8ede-d502626a79dc\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"config\"\r\n\r\n{\r\n    \"version\": \"0001.1\",\r\n    \"status\": \"release\",\r\n    \"versionFolder\": \"qwerty\",\r\n    \"refs\": [{\r\n            \"refId\":\"{{package_1}}\",\r\n            \"version\":\"{{version_2}}\"}],\r\n    \"files\": []\r\n}\r\n----------------------------127308995100818139707097--",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/publish",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{dashboard_1}}",
										"publish"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.1.6 Get dashboard build status",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var data = JSON.parse(responseBody);\r",
											"pm.test(\"Status is running\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.expect(data.status).to.be.oneOf([\"running\", \"complete\"]);\r",
											"});\r",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/publish/{{publish_id}}/status",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{dashboard_1}}",
										"publish",
										"{{publish_id}}",
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.1.15 Dashboard server publish version#2",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 202\", function () {\r",
											"    pm.response.to.have.status(202);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"pm.environment.set(\"publish_id\", data.publishId)\r",
											"\r",
											"setTimeout(function(){}, 10000)"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
										"type": "default"
									},
									{
										"key": "Content-Transfer-Encoding",
										"value": "base64",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"clientBuild\"\r\n\r\nfalse\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"config\"\r\n\r\n{\r\n    \"version\": \"0001.2\",\r\n    \"previousVersion\": \"0001.1\",\r\n    \"status\": \"release\",\r\n    \"versionFolder\": \"qwerty\",\r\n    \"refs\": [{\r\n            \"refId\":\"{{package_1}}\",\r\n            \"version\":\"{{version_2}}\"}],\r\n    \"files\": []\r\n}\r\n----------------------------127308995100818139707097--",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/publish",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{dashboard_1}}",
										"publish"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.1.15-1 Dashboard server publish version#2 revision#2",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 202\", function () {\r",
											"    pm.response.to.have.status(202);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"pm.environment.set(\"publish_id\", data.publishId)\r",
											"\r",
											"setTimeout(function(){}, 10000)"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
										"type": "default"
									},
									{
										"key": "Content-Transfer-Encoding",
										"value": "base64",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"clientBuild\"\r\n\r\nfalse\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"config\"\r\n\r\n{\r\n    \"version\": \"0001.2\",\r\n    \"previousVersion\": \"0001.1\",\r\n    \"status\": \"release\",\r\n    \"versionFolder\": \"qwerty\",\r\n    \"refs\": [{\r\n            \"refId\":\"{{package_1}}\",\r\n            \"version\":\"{{version_2}}\"}],\r\n    \"files\": []\r\n}\r\n----------------------------127308995100818139707097--",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/publish",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{dashboard_1}}",
										"publish"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.1.17 Get dashboard build status",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var data = JSON.parse(responseBody);\r",
											"pm.test(\"Status is running\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"setTimeout(function(){}, 20000)\r",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/publish/{{publish_id}}/status",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{dashboard_1}}",
										"publish",
										"{{publish_id}}",
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.1.18 Get dashboard build status complete",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var data = JSON.parse(responseBody);\r",
											"pm.test(\"Status is running\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.expect(data.status).to.eql(\"complete\");\r",
											"});\r",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/publish/{{publish_id}}/status",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{dashboard_1}}",
										"publish",
										"{{publish_id}}",
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.1.19 Get group build status 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var data = JSON.parse(responseBody);\r",
											"pm.test(\"Status is complete\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"setTimeout(function(){}, 6000)"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/QS-STATIC-TEST-2/publish/{{group_publish_id}}/status",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"QS-STATIC-TEST-2",
										"publish",
										"{{group_publish_id}}",
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.1.20 Get group build status complete",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var data = JSON.parse(responseBody);\r",
											"pm.test(\"Status is complete\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.expect(data.status).to.eql(\"complete\");\r",
											"});\r",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/QS-STATIC-TEST-2/publish/{{group_publish_id}}/status",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"QS-STATIC-TEST-2",
										"publish",
										"{{group_publish_id}}",
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.1.21 Get a list of available publish statuses for the dashboard",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"List of available statuses is correct\", function () {\r",
											"    pm.expect(data.statuses[0]).to.be.oneOf([\"draft\",\"release\"]);\r",
											"    pm.expect(data.statuses[1]).to.be.oneOf([\"draft\",\"release\"]);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/publish/availableStatuses",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{dashboard_1}}",
										"publish",
										"availableStatuses"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.1.22 Get list of available package publish statuses for the user",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"List of available statuses is correct\", function () {\r",
											"    pm.expect(responseBody).to.include(\"draft\");\r",
											"    pm.expect(responseBody).to.include(\"release\");\r",
											"    pm.expect(responseBody).to.include(\"archived\");\r",
											"});\r",
											"\r",
											"setTimeout(() => { }, 300);"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"packages\": [\"{{dashboard_1}}\"]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/users/{{Username}}/availablePackagePromoteStatuses",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"users",
										"{{Username}}",
										"availablePackagePromoteStatuses"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "5.2 Apikeys",
					"item": [
						{
							"name": "5.2.1 Create a dashboard API Key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = pm.response.json();\r",
											"\r",
											"pm.test(\"Api key is not empty\", function () {\r",
											"    pm.expect(data.apiKey).to.not.eql(undefined)\r",
											"    pm.expect(data.apiKey).to.not.eql(\"\")\r",
											"});\r",
											"\r",
											"pm.environment.set(\"apihub_api_key\", data.apiKey)\r",
											"pm.environment.set(\"apihub_api_key_id\", data.id)\r",
											"pm.environment.set(\"apihub_api_key_name\", data.name)"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\":\"M2M\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v4/packages/{{dashboard_1}}/apiKeys",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v4",
										"packages",
										"{{dashboard_1}}",
										"apiKeys"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.2.2 Delete dashboard API Key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/apiKeys/{{apihub_api_key_id}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{dashboard_1}}",
										"apiKeys",
										"{{apihub_api_key_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.2.3 Dashboard API Keys list retrieve",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = pm.response.json();\r",
											"var ids = []\r",
											"for (var i = 0; i<data.apiKeys.length; i++) {\r",
											"    ids.push(data.apiKeys[i].id)\r",
											"}\r",
											"\r",
											"pm.test(\"Revoked ApiKey is not present\", function () {\r",
											"    pm.expect(ids).to.not.include.members([pm.variables.replaceIn('{{apihub_api_key_id}}')])\r",
											"});\r",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v4/packages/{{dashboard_1}}/apiKeys",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v4",
										"packages",
										"{{dashboard_1}}",
										"apiKeys"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "5.3 Versions",
					"item": [
						{
							"name": "5.3.0 Get dashboard versions",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = pm.response.json();\r",
											"\r",
											"pm.test(\"Packages has versions\", function () {\r",
											"    pm.expect(data.versions.length).to.greaterThan(0);\r",
											"});\r",
											"\r",
											"pm.environment.set(\"version_1\", data.versions[1].version);\r",
											"pm.environment.set(\"version_2\", data.versions[0].version);\r",
											"pm.environment.set(\"version_2_2\", data.versions[0].version.split(\"@\")[0]);"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v3/packages/{{dashboard_1}}/versions",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v3",
										"packages",
										"{{dashboard_1}}",
										"versions"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.3.1 Get dashboard versions with limit",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = pm.response.json();\r",
											"pm.environment.set(\"version_1\",data.versions[0].version)\r",
											"pm.test(\"Packages has versions\", function () {\r",
											"    pm.expect(data.versions.length).to.eq(2);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v3/packages/{{dashboard_1}}/versions?limit=2&status=release",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v3",
										"packages",
										"{{dashboard_1}}",
										"versions"
									],
									"query": [
										{
											"key": "limit",
											"value": "2"
										},
										{
											"key": "status",
											"value": "release"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "5.3.2 Get dashboard version content",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v3/packages/{{dashboard_1}}/versions/{{version_1}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v3",
										"packages",
										"{{dashboard_1}}",
										"versions",
										"{{version_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.3.3 Get version documents",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = pm.response.json();\r",
											"\r",
											"pm.environment.set(\"pkg_file_slug\", data.documents[0].slug);\r",
											"\r",
											"pm.test(\"Set refId and version as environment variables\", () => {\r",
											"     let response = pm.response.json();\r",
											"    // Extract the packageRef from the documents array\r",
											"    let packageRef = response.documents[0].packageRef;\r",
											"    \r",
											"    // Navigate to the corresponding package object\r",
											"    let packageDetails = response.packages[packageRef];\r",
											"    \r",
											"    // Extract refId and version\r",
											"    let refId = packageDetails.refId;\r",
											"    let version = packageDetails.version;\r",
											"    \r",
											"    // Set the values as environment variables\r",
											"    pm.environment.set(\"pack_id\", refId);\r",
											"    pm.environment.set(\"pack_version\", version);\r",
											"    \r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/versions/{{version_1}}/documents?limit=5&page=0",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{dashboard_1}}",
										"versions",
										"{{version_1}}",
										"documents"
									],
									"query": [
										{
											"key": "limit",
											"value": "5"
										},
										{
											"key": "page",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "5.3.4 Get document details",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var data = pm.response.json();\r",
											"\r",
											"pm.environment.set(\"file_name\", data.fileId.replace(/^.*[\\\\\\/]/, ''))\r",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v3/packages/{{pack_id}}/versions/{{pack_version}}/documents/{{pkg_file_slug}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v3",
										"packages",
										"{{pack_id}}",
										"versions",
										"{{pack_version}}",
										"documents",
										"{{pkg_file_slug}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.3.5 Get version content raw(get file data(published))",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-type is text/plain\", function () {\r",
											"    pm.response.to.have.header('Content-Type');\r",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.include('text/plain');\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{pack_id}}/versions/{{pack_version}}/files/{{pkg_file_slug}}/raw",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{pack_id}}",
										"versions",
										"{{pack_version}}",
										"files",
										"{{pkg_file_slug}}",
										"raw"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.3.6 Share file",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.environment.set(\"sharedFileId\", pm.response.json().sharedFileId)"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"packageId\": \"{{pack_id}}\",\r\n    \"version\" : \"{{pack_version}}\",\r\n    \"slug\": \"{{pkg_file_slug}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/sharedFiles",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"sharedFiles"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.3.7 Get shared file",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-type is text/plain\", function () {\r",
											"    pm.response.to.have.header('Content-Type');\r",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.include('text/plain');\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/sharedFiles/{{sharedFileId}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"sharedFiles",
										"{{sharedFileId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.3.10 Export offline API documentation by selected versions",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Content-type is application/octet-stream\", function () {\r",
											"    pm.response.to.have.header('Content-Type');\r",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/octet-stream');\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/versions/{{version_1}}/doc",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{dashboard_1}}",
										"versions",
										"{{version_1}}",
										"doc"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.3.11 Export offline API documentation by selected file",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Content-type is application/octet-stream\", function () {\r",
											"    pm.response.to.have.header('Content-Type');\r",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/octet-stream');\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{pack_id}}/versions/{{pack_version}}/files/{{pkg_file_slug}}/doc",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{pack_id}}",
										"versions",
										"{{pack_version}}",
										"files",
										"{{pkg_file_slug}}",
										"doc"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.3.12 Update package version",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = pm.response.json();\r",
											"\r",
											"pm.test(\"Expected label is present\", () => {\r",
											"    pm.expect(data.versionLabels).to.include(\"API_Smoke\")\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " {\r\n     \"status\": \"archived\",\r\n     \"versionLabels\": [\r\n         \"API_Smoke\"\r\n        ]\r\n }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/versions/{{version_1}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{dashboard_1}}",
										"versions",
										"{{version_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.3.13 Update package version with wrong status",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " {\r\n     \"status\": \"1\",\r\n     \"versionLabels\": [\r\n         \"API_Smoke\"\r\n        ]\r\n }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/versions/{{version_1}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{dashboard_1}}",
										"versions",
										"{{version_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.3.14 Get list of tags",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = pm.response.json();\r",
											"\r",
											"pm.test(\"Tag exists under version\", function () {\r",
											"    pm.expect(data.tags[0].length).to.greaterThan(0);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/versions/{{version_1}}/rest/tags",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{dashboard_1}}",
										"versions",
										"{{version_1}}",
										"rest",
										"tags"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.3.15 Get list of operations",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"var methods = [];\r",
											"\r",
											"for (var i = 0; i<data.operations.length; i++) {\r",
											"    methods.push(data.operations[i].method)\r",
											"}\r",
											"\r",
											"pm.test(\"Expected methods are present\", () => {\r",
											"    pm.expect(methods).to.include.oneOf(['get','post','put','patch','delete'])\r",
											"});\r",
											"\r",
											"pm.environment.set(\"operation_id_1\", data.operations[0].operationId)"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/versions/{{version_1}}/rest/operations?page=0&limit=5&kind=bwc",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{dashboard_1}}",
										"versions",
										"{{version_1}}",
										"rest",
										"operations"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "5"
										},
										{
											"key": "kind",
											"value": "bwc"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "5.3.16 Get operation details",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Expected method is present\", () => {\r",
											"    pm.expect(data.method).to.be.oneOf(['get','post','delete','put','patch'])\r",
											"});\r",
											"\r",
											"pm.environment.set(\"hash_1\", data.dataHash)"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{pack_id}}/versions/{{pack_version}}/rest/operations/{{operation_id_1}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{pack_id}}",
										"versions",
										"{{pack_version}}",
										"rest",
										"operations",
										"{{operation_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.3.17 Get dashboard version revision",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = pm.response.json();\r",
											"\r",
											"pm.test(\"Specified revision displayed\", function () {\r",
											"    pm.expect(data.revisions[1].notLatestRevision).to.eq(true);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v3/packages/{{dashboard_1}}/versions/{{version_2_2}}/revisions",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v3",
										"packages",
										"{{dashboard_1}}",
										"versions",
										"{{version_2_2}}",
										"revisions"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.3.18 Get details of non existing document",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v3/packages/{{dashboard_1}}/versions/{{version_1}}/documents/nothing123",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v3",
										"packages",
										"{{dashboard_1}}",
										"versions",
										"{{version_1}}",
										"documents",
										"nothing123"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.3.19 Get version references",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v3/packages/{{dashboard_1}}/versions/{{version_1}}/references?limit=10&page=0",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v3",
										"packages",
										"{{dashboard_1}}",
										"versions",
										"{{version_1}}",
										"references"
									],
									"query": [
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "5.3.20 Get details from non existing operation",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/versions/{{version_1}}/rest/operations/nothing123",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{dashboard_1}}",
										"versions",
										"{{version_1}}",
										"rest",
										"operations",
										"nothing123"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.3.21 Get list of operations with 'experimental' kind",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"List of operations displayed\", () => {\r",
											"    pm.expect(data.operations.length).to.eql(0);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/versions/{{version_1}}/rest/operations?kind=experimental",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{dashboard_1}}",
										"versions",
										"{{version_1}}",
										"rest",
										"operations"
									],
									"query": [
										{
											"key": "kind",
											"value": "experimental"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "5.3.22 Get list of operations with non existing tag",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"List of operations displayed\", () => {\r",
											"    pm.expect(data.operations.length).to.eql(0);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/versions/{{version_1}}/rest/operations?tag=pets1",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{dashboard_1}}",
										"versions",
										"{{version_1}}",
										"rest",
										"operations"
									],
									"query": [
										{
											"key": "tag",
											"value": "pets1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "5.3.23 Get list of operations filtered by hash",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"List of operations displayed\", () => {\r",
											"    pm.expect(data.operations.length).to.eql(1);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/versions/{{version_1}}/rest/operations?hashList={{hash_1}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{dashboard_1}}",
										"versions",
										"{{version_1}}",
										"rest",
										"operations"
									],
									"query": [
										{
											"key": "hashList",
											"value": "{{hash_1}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "5.3.24 Validation filter results of document versions",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = pm.response.json();\r",
											"\r",
											"pm.test(\"List of documents displayed\", () => {\r",
											"    pm.expect(data.documents.length).to.eql(0);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/versions/{{version_1}}/documents?limit=5&page=2",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{dashboard_1}}",
										"versions",
										"{{version_1}}",
										"documents"
									],
									"query": [
										{
											"key": "limit",
											"value": "5"
										},
										{
											"key": "page",
											"value": "2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "5.3.25 Get dashboard version content with wrong 'includeOperations' query parameter",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/versions/{{version_1}}?includeOperations=test",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{dashboard_1}}",
										"versions",
										"{{version_1}}"
									],
									"query": [
										{
											"key": "includeOperations",
											"value": "test"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "5.3.26 Get dashboard version content with wrong 'includeSummary' query parameter",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/versions/{{version_1}}?includeSummary=test",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{dashboard_1}}",
										"versions",
										"{{version_1}}"
									],
									"query": [
										{
											"key": "includeSummary",
											"value": "test"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "5.3.27 Delete Version",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/versions/{{version_2_2}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{dashboard_1}}",
										"versions",
										"{{version_2_2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.3.28 Get deleted dashboard version content",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/versions/{{version_2}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{dashboard_1}}",
										"versions",
										"{{version_2}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "5.4 Dashboard E2E",
					"item": [
						{
							"name": "5.4.0 Delete static test data from DB",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/internal/clear/STATIC-TEST-2",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"internal",
										"clear",
										"STATIC-TEST-2"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.4.1 Add static test group",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"pm.environment.set(\"static_root_group_1\", data.groupId)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"QS-STATIC-TEST-2\",\r\n    \"Alias\" :\"QS-STATIC-TEST-2\",\r\n    \"name\": \"Test Workspace 2\",\r\n    \"parentId\": null,\r\n    \"kind\":\"workspace\",\r\n    \"description\": \"Required for to upload hardcoded packages\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.4.2 Created Petstore package",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"pm.environment.set(\"package_1\", data.packageId)"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"QS-STATIC-TEST-2.PKG5\",\r\n    \"Alias\" :\"PKG5\",\r\n    \"name\": \"Test static package 1\",\r\n    \"parentId\": \"QS-STATIC-TEST-2\",\r\n    \"kind\":\"package\",\r\n    \"description\": \"Package to be built\",\r\n    \"serviceName\": \"\",\r\n    \"imageUrl\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.4.3 Publish version 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 202\", function () {\r",
											"    pm.response.to.have.status(202);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"pm.environment.set(\"publish_id\", data.publishId);\r",
											"\r",
											"setTimeout(() => { },20000);"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
										"type": "default"
									},
									{
										"key": "Content-Transfer-Encoding",
										"value": "base64",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"clientBuild\"\r\n\r\nfalse\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"config\"\r\n\r\n{\r\n    \"version\": \"{{version_1_2}}\",\r\n    \"status\": \"release\",\r\n    \"versionFolder\": \"qwerty\",\r\n    \"refs\": [],\r\n    \"files\": [{\r\n            \"fileId\": \"{{Pack_version1_fileId}}\",\r\n            \"publish\": true\r\n        }\r\n    ]\r\n}\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"sources\"; filename=\"petstore_v1.zip\"\r\nContent-Type: application/zip;base64\r\n\r\n{{Pack_version1_data}}\r\n----------------------------127308995100818139707097--",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/publish",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"publish"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.4.4 Publish version 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 202\", function () {\r",
											"    pm.response.to.have.status(202);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"pm.environment.set(\"publish_id\", data.publishId)\r",
											"\r",
											"\r",
											"setTimeout(() => { },20000);"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
										"type": "default"
									},
									{
										"key": "Content-Transfer-Encoding",
										"value": "base64",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"clientBuild\"\r\n\r\nfalse\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"config\"\r\n\r\n{\r\n    \"version\": \"{{version_2_2}}\",\r\n    \"previousVersion\": \"{{version_1_2}}\",\r\n    \"status\": \"release\",\r\n    \"versionFolder\": \"qwerty\",\r\n    \"refs\": [],\r\n    \"files\": [{\r\n            \"fileId\": \"{{Pack_version2_fileId}}\",\r\n            \"publish\": true\r\n        }\r\n    ]\r\n}\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"sources\"; filename=\"petstore_v2.zip\"\r\nContent-Type: application/zip;base64\r\n\r\n{{Pack_version2_data}}\r\n----------------------------127308995100818139707097--",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/publish",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"publish"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.4.4.-1 Get status complete",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var retry = parseInt(pm.environment.get(\"com_retry_counter\") || 0);\r",
											"var delay = parseInt(pm.environment.get(\"com_retry_delay\") || 0);\r",
											"\r",
											"var respBody = pm.response.json();\r",
											"\r",
											"if ((respBody.status != \"complete\") && retry < 15) {\r",
											"    retry++;\r",
											"    delay = 5000 + delay;\r",
											"\r",
											"\r",
											"pm.test(\"Status is ok, response is json\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.be.ok;\r",
											"});\r",
											"\r",
											"var respBody = pm.response.json();\r",
											"\r",
											"    setTimeout(function () { }, delay);\r",
											"    postman.setNextRequest(request.name);\r",
											"    pm.environment.set(\"com_retry_counter\", retry);\r",
											"    pm.environment.set(\"com_retry_delay\", delay);\r",
											"}\r",
											"else {\r",
											"    pm.environment.set(\"com_retry_counter\", null);\r",
											"    pm.environment.set(\"com_retry_delay\", null);\r",
											"\r",
											"    pm.test(\"Status code is 200\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"\r",
											"}\r",
											"setTimeout(function(){}, [100]);"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/publish/{{publish_id}}/status",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"publish",
										"{{publish_id}}",
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.4.5 Get Petstore  package versions",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = pm.response.json();\r",
											"\r",
											"pm.test(\"Packages has versions\", function () {\r",
											"    pm.expect(data.versions.length).to.greaterThan(0);\r",
											"});\r",
											"\r",
											"pm.environment.set(\"pkg_petstore_version_1\", data.versions[1].version);\r",
											"pm.environment.set(\"pkg_petstore_version_2\", data.versions[0].version)"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/versions",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_1}}",
										"versions"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.4.6 Create IoT package",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"pm.environment.set(\"package_2\", data.packageId)"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"QS-STATIC-TEST-2.PKG2\",\r\n    \"Alias\" :\"PKG2\",\r\n    \"name\": \"Test static package 2\",\r\n    \"parentId\": \"QS-STATIC-TEST-2\",\r\n    \"kind\":\"package\",\r\n    \"description\": \"Package to be built\",\r\n    \"serviceName\": \"\",\r\n    \"imageUrl\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.4.7 Publish version 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 202\", function () {\r",
											"    pm.response.to.have.status(202);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"pm.environment.set(\"publish_id\", data.publishId)"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
										"type": "default"
									},
									{
										"key": "Content-Transfer-Encoding",
										"value": "base64",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"clientBuild\"\r\n\r\nfalse\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"config\"\r\n\r\n{\r\n    \"packageId\": \"{{package_2}}\",\r\n    \"version\": \"{{version_1_2}}\",\r\n    \"status\": \"release\",\r\n    \"versionFolder\": \"qwerty\",\r\n    \"refs\": [],\r\n    \"files\": [{\r\n            \"fileId\": \"iot_v1.yaml\",\r\n            \"publish\": true\r\n        }\r\n    ]\r\n}\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"sources\"; filename=\"iot_v1.zip\"\r\nContent-Type: application/zip;base64\r\n\r\nUEsDBBQAAAAIAKd6C1ctm2XhRwIAAIoGAAALAAAAaW90X3YxLnlhbWytVFFz0zAMfs+v8BVe07gZgS1vXccdvQO2Y+UHOImaektiYytl/ffITpq2pDsKh/OSk6xPn/RJVhoaoWXKrqZ8ygMLZgvGpgFjISvA5kZqlKpJ2eNPUZZgPrUZmz8s2bxFxb6o/Fk2ZcDotKZK2QZR2zSKttJgBzW1Xdymzaa5qqPP88X91+ViMV+svj/yh2h5v4pmPrVs1srldfl9Rm8mA0qsgLBVDaFUGBJdsp6QW23As1orw5D+Pwq8FblqGMEzbdQT5BigKPvCGlET4B1sZQ5kOAHb222gBW58QFR0ltTfLQHpx58esT/hAXGEaQBb01gmqor+S2kRDBSsB+4jSAsj3P1lkbo0dydeLQzRpriTlJLAf7RgdoON9eXZZ6k745hO09YZGKbWRCZXprAM1e8BNt9ALfa5+oJ3GlLKiUCSHntc52uB3ncVX8SvkrXE1wjW4uUsyb6R/5WmAatVY+Gor5OY80n6Grl5VbkpO6g3nFxRzgZP2QitK5l7YaMnSwCDd1zBuAphjNiNfBKhHviOgywav5f9GdffGnnGCy+i1hV0e0xrPONT98Vxkl7za+4jtLKXzf/xNA8z/68tt21Onbbrtqp24wUaUGnSLN6qYjcAHSS5VJDzcrw1sE7Z5E1EjxhRJ0QbdTdt1JX9zbPqS6a3bBIcrjq0/nYHfD7E+Q4iqsw9W/vtN66fKI9a5kRMgz9Kfyz5BVLzTuph0Iq/SdHK4lwO/iG+Eck1D+P4HQ9nM3gf3kCWhJzzWCRFkiezLPgFUEsBAj8AFAAAAAgAp3oLVy2bZeFHAgAAigYAAAsAJAAAAAAAAAAgAAAAAAAAAGlvdF92MS55YW1sCgAgAAAAAAABABgAj7sUUU7M2QGItA5ST8zZATTchHROzNkBUEsFBgAAAAABAAEAXQAAAHACAAAAAA==\r\n----------------------------127308995100818139707097--",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_2}}/publish",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_2}}",
										"publish"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.4.8 Publish version 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 202\", function () {\r",
											"    pm.response.to.have.status(202);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"pm.environment.set(\"publish_id\", data.publishId)\r",
											"\r",
											"setTimeout(() => { },20000);"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
										"type": "default"
									},
									{
										"key": "Content-Transfer-Encoding",
										"value": "base64",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"clientBuild\"\r\n\r\nfalse\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"config\"\r\n\r\n{\r\n    \"packageId\": \"{{package_2}}\",\r\n    \"version\": \"{{version_2_2}}\",\r\n    \"status\": \"release\",\r\n    \"versionFolder\": \"qwerty\",\r\n    \"refs\": [],\r\n    \"files\": [{\r\n            \"fileId\": \"iot_v2.yaml\",\r\n            \"publish\": true\r\n        }\r\n    ]\r\n}\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"sources\"; filename=\"iot_v2.zip\"\r\nContent-Type: application/zip;base64\r\n\r\nUEsDBBQAAAAIAKl6C1dAFPglIgMAAFYLAAALAAAAaW90X3YyLnlhbWy9Vk1z2jAQvfMrNLRXY0NKm/iW0MyUmbbJFHrpTdhrrMSWXH2Q0F/flWRsE0MmoR/igL1avbf7dlcgKuC0YjE5G0WjaKBAbkCqeEBIQFJQiWSVZoLHZPFA12uQn8yKXN7OyaXRgnwRyT3j6wHBZWQRk1zrSsVhuGFSe6iR8udysxologw/X85uvs5ns8vZ8vsiug3nN8tw7KgZz4TltfyO0ZnRoJkuALFFCQETOsBw0boX3DIHF1UmJNH4fE31FU0EJwhPKinuINEDTdd1YpyWCPgRNiwBNOyB7eyq43nNMSHBS+D6qbvbHFRU5w47TP3h2PlVQml8cqtmr1fQsLuFVZDUws3TmEhYM6VB+j18VZXgCjqnh5MoGu5eewEpk2AEKjNFsW3AICU+NEJ5SpjOiNW7ofhpQOkrkW5bVJRPY8JdGlpVBUtcoOGdQi7ca5dKciipt7XrrYQsJsM3IVYf80BEFXpPFXoNvrkQ6/wxqKHVUUPpNDESPOIajkm5X56+nh2ohSlLKrenKivu7U5fn5cq1NXo5Sote/EP6/OPQT1dgRRG45eNSYqiALnftC2qpfbAddZ99EbmbQWY88oOjzfZUUJnzbqS/ULg5rU9R6Wk246VYRnQ7YSkf+DWcI9uoXHjH3Ii5Y4EiY/2wZMYD+rWDhjDGex2LUvrl909c1xj9O0ny7D9sPSt3d5+JdVu52xypIfd9Wg4w4FHVEyfZQzk7uJ06u5OuqD6vDiqeOe3ofHK6FuhmIU/PUrs37+Cgwk8E3NfDkoU7hTQvSVaFQ51xJ+UWbMS71laVh3bhhbmtbX3+fyvEvfh3Tkish6gz6aPyE25Oli9VJhVAcep9gvDeI/RZqrVKTl0gD1IxxkwYI/ZFiqBQjGjnlgzmkvgOTC9x5VRU2B6/d22B14Qc6MS1RDYg8/k0wKThxx4L8UHqkgJVOFzemgSlOtuLGozE63Oh3+oT52EQ11uJHuFHujdLdYjJl2A//uJ/z7H0ch+JpMoPo/Oo9dNUkNhbLx9jujD5IJOz6NgMnkXBeMxvA8uYDUNoiia0Gk6Tabj1eA3UEsBAj8AFAAAAAgAqXoLV0AU+CUiAwAAVgsAAAsAJAAAAAAAAAAgAAAAAAAAAGlvdF92Mi55YW1sCgAgAAAAAAABABgAGKHDU07M2QFoQ/lVT8zZASIbgHROzNkBUEsFBgAAAAABAAEAXQAAAEsDAAAAAA==\r\n----------------------------127308995100818139707097--",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_2}}/publish",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_2}}",
										"publish"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.4.8.-1 Get status complete",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var retry = parseInt(pm.environment.get(\"com_retry_counter\") || 0);\r",
											"var delay = parseInt(pm.environment.get(\"com_retry_delay\") || 0);\r",
											"\r",
											"var respBody = pm.response.json();\r",
											"\r",
											"if ((respBody.status != \"complete\") && retry < 15) {\r",
											"    retry++;\r",
											"    delay = 5000 + delay;\r",
											"\r",
											"\r",
											"pm.test(\"Status is ok, response is json\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.be.ok;\r",
											"});\r",
											"\r",
											"var respBody = pm.response.json();\r",
											"\r",
											"    setTimeout(function () { }, delay);\r",
											"    postman.setNextRequest(request.name);\r",
											"    pm.environment.set(\"com_retry_counter\", retry);\r",
											"    pm.environment.set(\"com_retry_delay\", delay);\r",
											"}\r",
											"else {\r",
											"    pm.environment.set(\"com_retry_counter\", null);\r",
											"    pm.environment.set(\"com_retry_delay\", null);\r",
											"\r",
											"    pm.test(\"Status code is 200\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"\r",
											"}\r",
											"setTimeout(function(){}, [100]);"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_2}}/publish/{{publish_id}}/status",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_2}}",
										"publish",
										"{{publish_id}}",
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.4.9 Get IoT package versions",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = pm.response.json();\r",
											"\r",
											"pm.test(\"Packages has versions\", function () {\r",
											"    pm.expect(data.versions.length).to.greaterThan(0);\r",
											"});\r",
											"\r",
											"pm.environment.set(\"pkg_iot_version_1\", data.versions[1].version);\r",
											"pm.environment.set(\"pkg_iot_version_2\", data.versions[0].version);\r",
											"pm.environment.set(\"pkg_iot_version_2_2\", data.versions[0].version.split(\"@\")[0]);"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_2}}/versions",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_2}}",
										"versions"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.4.10 Create dashboard",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"pm.environment.set(\"dashboard_1\", data.packageId)"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"QS-STATIC-TEST-2.DSHB\",\r\n    \"Alias\" :\"DSHB\",\r\n    \"name\": \"Test static dashboard\",\r\n    \"parentId\": \"QS-STATIC-TEST-2\",\r\n    \"kind\":\"dashboard\",\r\n    \"description\": \"Dashboard to be built\",\r\n    \"serviceName\": \"\",\r\n    \"imageUrl\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.4.11 Publish dashboard version_1",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 202\", function () {\r",
											"    pm.response.to.have.status(202);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"pm.environment.set(\"publish_id\", data.publishId)\r",
											"\r",
											"setTimeout(() => { },40000);"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
										"type": "default"
									},
									{
										"key": "Content-Transfer-Encoding",
										"value": "base64",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"clientBuild\"\r\n\r\nfalse\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"config\"\r\n\r\n{\r\n    \"packageId\": \"QS-STATIC-TEST-2.DSHB\",\r\n    \"version\": \"2023.2\",\r\n    \"status\": \"release\",\r\n    \"versionFolder\": \"qwerty\",\r\n    \"refs\": [{\r\n            \"refId\": \"{{package_1}}\",\r\n            \"version\": \"{{pkg_petstore_version_1}}\"\r\n        },\r\n        {\r\n            \"refId\": \"{{package_2}}\",\r\n            \"version\": \"{{pkg_iot_version_1}}\"\r\n        }\r\n    ],\r\n    \"files\": []\r\n}\r\n----------------------------127308995100818139707097--",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/publish",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{dashboard_1}}",
										"publish"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.4.11.-1 Get status complete",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var retry = parseInt(pm.environment.get(\"com_retry_counter\") || 0);\r",
											"var delay = parseInt(pm.environment.get(\"com_retry_delay\") || 0);\r",
											"\r",
											"var respBody = pm.response.json();\r",
											"\r",
											"if ((respBody.status != \"complete\") && retry < 15) {\r",
											"    retry++;\r",
											"    delay = 5000 + delay;\r",
											"\r",
											"\r",
											"pm.test(\"Status is ok, response is json\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.be.ok;\r",
											"});\r",
											"\r",
											"var respBody = pm.response.json();\r",
											"\r",
											"    setTimeout(function () { }, delay);\r",
											"    postman.setNextRequest(request.name);\r",
											"    pm.environment.set(\"com_retry_counter\", retry);\r",
											"    pm.environment.set(\"com_retry_delay\", delay);\r",
											"}\r",
											"else {\r",
											"    pm.environment.set(\"com_retry_counter\", null);\r",
											"    pm.environment.set(\"com_retry_delay\", null);\r",
											"\r",
											"    pm.test(\"Status code is 200\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"\r",
											"}\r",
											"setTimeout(function(){}, [100]);"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/publish/{{publish_id}}/status",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{dashboard_1}}",
										"publish",
										"{{publish_id}}",
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.4.12 Publish dashboard version_2",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 202\", function () {\r",
											"    pm.response.to.have.status(202);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"pm.environment.set(\"publish_id\", data.publishId)\r",
											"\r",
											"setTimeout(() => { },40000);"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
										"type": "default"
									},
									{
										"key": "Content-Transfer-Encoding",
										"value": "base64",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"clientBuild\"\r\n\r\nfalse\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"config\"\r\n\r\n{\r\n    \"version\": \"2023.3\",\r\n    \"previousVersion\": \"2023.2\",\r\n    \"status\": \"release\",\r\n    \"versionFolder\": \"qwerty\",\r\n    \"refs\": [{\r\n            \"refId\": \"{{package_1}}\",\r\n            \"version\": \"{{pkg_petstore_version_2}}\"\r\n        },\r\n        {\r\n            \"refId\": \"{{package_2}}\",\r\n            \"version\": \"{{pkg_iot_version_2}}\"\r\n        }\r\n    ],\r\n    \"files\": []\r\n}\r\n----------------------------127308995100818139707097--",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/publish",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{dashboard_1}}",
										"publish"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.4.12.-1 Get status complete",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var retry = parseInt(pm.environment.get(\"com_retry_counter\") || 0);\r",
											"var delay = parseInt(pm.environment.get(\"com_retry_delay\") || 0);\r",
											"\r",
											"var respBody = pm.response.json();\r",
											"\r",
											"if ((respBody.status != \"complete\") && retry < 15) {\r",
											"    retry++;\r",
											"    delay = 5000 + delay;\r",
											"\r",
											"\r",
											"pm.test(\"Status is ok, response is json\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.be.ok;\r",
											"});\r",
											"\r",
											"var respBody = pm.response.json();\r",
											"\r",
											"    setTimeout(function () { }, delay);\r",
											"    postman.setNextRequest(request.name);\r",
											"    pm.environment.set(\"com_retry_counter\", retry);\r",
											"    pm.environment.set(\"com_retry_delay\", delay);\r",
											"}\r",
											"else {\r",
											"    pm.environment.set(\"com_retry_counter\", null);\r",
											"    pm.environment.set(\"com_retry_delay\", null);\r",
											"\r",
											"    pm.test(\"Status code is 200\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"\r",
											"}\r",
											"setTimeout(function(){}, [100]);"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/publish/{{publish_id}}/status",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{dashboard_1}}",
										"publish",
										"{{publish_id}}",
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.4.13 Get dashboard versions",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = pm.response.json();\r",
											"\r",
											"pm.test(\"Packages has versions\", function () {\r",
											"    pm.expect(data.versions.length).to.greaterThan(0);\r",
											"});\r",
											"\r",
											"pm.environment.set(\"version_1\", data.versions[1].version);\r",
											"pm.environment.set(\"version_2\", data.versions[0].version)"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/versions",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{dashboard_1}}",
										"versions"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.4.14 Get dashboard version content",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = pm.response.json();\r",
											"\r",
											"pm.test(\"Version has 'Release' status\", function () {\r",
											"    pm.expect(data.status).to.eql('release');\r",
											"});\r",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/versions/{{version_1}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{dashboard_1}}",
										"versions",
										"{{version_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.4.15 Get list operations",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"There are 5 operations\", function () {\r",
											"    pm.expect(data.operations.length).to.eql(6);\r",
											"});\r",
											"\r",
											"var title = [];\r",
											"\r",
											"for (var i = 0; i<data.operations.length; i++) {\r",
											"    title.push(data.operations[i].title)\r",
											"}\r",
											"\r",
											"pm.test(\"All operations are present\", () => {\r",
											"    pm.expect(title).to.include('Inline Semi-Breaking change by x-api-kind tag'),\r",
											"    pm.expect(title).to.include('Inline Semi-Breaking change by deprecated mark'),\r",
											"    pm.expect(title).to.include('Semi-Breaking change in reusable schema \\\"User\\\" by deprecated mark'),\r",
											"    pm.expect(title).to.include('Semi-Breaking change in reusable schema \\\"Pet\\\" by x-api-kind tag'),\r",
											"    pm.expect(title).to.include('Laconiccactus0p Iot 1 0 0 Devices Get'),\r",
											"    pm.expect(title).to.include('Laconiccactus0p Iot 1 0 0 Devices Post')\r",
											"});\r",
											"\r",
											"pm.environment.set(\"operation_id_1\", data.operations[0].operationId)"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/versions/{{version_1}}/rest/operations",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{dashboard_1}}",
										"versions",
										"{{version_1}}",
										"rest",
										"operations"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.4.16 Get list of tags",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = pm.response.json();\r",
											"\r",
											"pm.test(\"There are 2 tags\", function () {\r",
											"    pm.expect(data.tags.length).to.eql(3);\r",
											"});\r",
											"\r",
											"var tags = [];\r",
											"\r",
											"for (var i = 0; i<data.tags.length; i++) {\r",
											"    tags.push(data.tags[i])\r",
											"}\r",
											"\r",
											"pm.test(\"There are 2 tags\", function () {\r",
											"    pm.expect(tags).to.include('Device');\r",
											"    pm.expect(tags).to.include('pet');\r",
											"    pm.expect(tags).to.include('store');\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/versions/{{version_1}}/rest/tags",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{dashboard_1}}",
										"versions",
										"{{version_1}}",
										"rest",
										"tags"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.4.17 Get changes summary for version_1",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = pm.response.json();\r",
											"\r",
											"pm.test(\"There are 2 tags\", function () {\r",
											"    pm.expect(data.refs[0].operationTypes[0].tags.length).to.eql(2);\r",
											"});\r",
											"\r",
											"pm.test(\"Response contains all required tags\", function () {\r",
											"\r",
											"    let requiredTags = [\"Device\", \"Environment\", \"pet\", \"store\"];\r",
											"    \r",
											"    let allTags = [];\r",
											"\r",
											"    data.refs.forEach(ref => {\r",
											"        ref.operationTypes.forEach(opType => {\r",
											"            if (opType.tags) {\r",
											"                allTags = allTags.concat(opType.tags);\r",
											"            }\r",
											"        });\r",
											"    });\r",
											"\r",
											"    requiredTags.forEach(tag => {\r",
											"        pm.expect(allTags).to.include(tag);\r",
											"    });\r",
											"});\r",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/versions/{{version_2}}/changes/summary",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{dashboard_1}}",
										"versions",
										"{{version_2}}",
										"changes",
										"summary"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.4.18 Get version documents",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"var title = [];\r",
											"\r",
											"for (var i = 0; i<data.documents.length; i++) {\r",
											"    title.push(data.documents[i].title)\r",
											"}\r",
											"\r",
											"pm.test(\"Both documents are present\", () => {\r",
											"    pm.expect(title).to.include('ATUI Petstore 3.0'),\r",
											"    pm.expect(title).to.include('home-iot-api')\r",
											"});\r",
											"\r",
											"pm.environment.set(\"pkg_file_slug\", data.documents[0].slug)"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/versions/{{version_1}}/documents",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{dashboard_1}}",
										"versions",
										"{{version_1}}",
										"documents"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.4.19 Get changes summary for version_1",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/versions/{{version_1}}/changes/summary",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{dashboard_1}}",
										"versions",
										"{{version_1}}",
										"changes",
										"summary"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.4.20 Version changelog async calculation",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is OK\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 202]);\r",
											"});\r",
											"\r",
											"setTimeout(() => { }, 5000);"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"packageId\": \"{{dashboard_1}}\",\r\n    \"version\": \"{{version_1}}\",\r\n    \"previousVersion\": \"{{version_2}}\",\r\n    \"previousVersionPackageId\": \"{{dashboard_1}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/compare",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"compare"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.4.22 Operation change log",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/versions/{{version_2}}/rest/operations/{{operation_id_1}}/changes?previousVersion={{version_1}}&previousVersionPackageId={{dashboard_1}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{dashboard_1}}",
										"versions",
										"{{version_2}}",
										"rest",
										"operations",
										"{{operation_id_1}}",
										"changes"
									],
									"query": [
										{
											"key": "previousVersion",
											"value": "{{version_1}}"
										},
										{
											"key": "previousVersionPackageId",
											"value": "{{dashboard_1}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "5.4.23 Delete version_2 from package_2",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_2}}/versions/{{pkg_iot_version_2_2}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{package_2}}",
										"versions",
										"{{pkg_iot_version_2_2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.4.24 Get dashboard versions",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = pm.response.json();\r",
											"\r",
											"pm.test(\"Packages has versions\", function () {\r",
											"    pm.expect(data.versions.length).to.eql(2);\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/versions",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{dashboard_1}}",
										"versions"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.4.25 Get dashboard version content",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = pm.response.json();\r",
											"\r",
											"pm.test(\"Version has 'Release' status\", function () {\r",
											"    pm.expect(data.status).to.eql('release');\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/versions/{{version_1}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{dashboard_1}}",
										"versions",
										"{{version_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.4.26 Get list operations",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"There are 6 operations\", function () {\r",
											"    pm.expect(data.operations.length).to.eql(6);\r",
											"});\r",
											"\r",
											"var title = [];\r",
											"\r",
											"for (var i = 0; i<data.operations.length; i++) {\r",
											"    title.push(data.operations[i].title)\r",
											"}\r",
											"\r",
											"pm.test(\"All operations are present\", () => {\r",
											"    pm.expect(title).to.include('Inline Semi-Breaking change by x-api-kind tag'),\r",
											"    pm.expect(title).to.include('Inline Semi-Breaking change by deprecated mark'),\r",
											"    pm.expect(title).to.include('Semi-Breaking change in reusable schema \\\"User\\\" by deprecated mark'),\r",
											"    pm.expect(title).to.include('Semi-Breaking change in reusable schema \\\"Pet\\\" by x-api-kind tag'),\r",
											"    pm.expect(title).to.include('Laconiccactus0p Iot 1 0 0 Devices Get'),\r",
											"    pm.expect(title).to.include('Laconiccactus0p Iot 1 0 0 Devices Post')\r",
											"});\r",
											"\r",
											"pm.environment.set(\"operation_id_1\", data.operations[0].operationId)"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/versions/{{version_1}}/rest/operations",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{dashboard_1}}",
										"versions",
										"{{version_1}}",
										"rest",
										"operations"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.4.27 Get list of tags",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = pm.response.json();\r",
											"\r",
											"pm.test(\"There are 2 tags\", function () {\r",
											"    pm.expect(data.tags.length).to.eql(3);\r",
											"});\r",
											"\r",
											"var tags = [];\r",
											"\r",
											"for (var i = 0; i<data.tags.length; i++) {\r",
											"    tags.push(data.tags[i])\r",
											"}\r",
											"\r",
											"pm.test(\"There are 2 tags\", function () {\r",
											"    pm.expect(tags).to.include('Device');\r",
											"    pm.expect(tags).to.include('pet');\r",
											"    pm.expect(tags).to.include('store');\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/versions/{{version_1}}/rest/tags",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{dashboard_1}}",
										"versions",
										"{{version_1}}",
										"rest",
										"tags"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.4.28 Version change log",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = pm.response.json();\r",
											"\r",
											"pm.test(\"Response contains all required tags\", function () {\r",
											"\r",
											"    let requiredTags = [\"Device\", \"Environment\", \"pet\", \"store\"];\r",
											"    \r",
											"    let allTags = [];\r",
											"\r",
											"    data.refs.forEach(ref => {\r",
											"        ref.operationTypes.forEach(opType => {\r",
											"            if (opType.tags) {\r",
											"                allTags = allTags.concat(opType.tags);\r",
											"            }\r",
											"        });\r",
											"    });\r",
											"\r",
											"    requiredTags.forEach(tag => {\r",
											"        pm.expect(allTags).to.include(tag);\r",
											"    });\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/versions/{{version_2}}/changes/summary",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{dashboard_1}}",
										"versions",
										"{{version_2}}",
										"changes",
										"summary"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.4.29 Get version documents",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"var title = [];\r",
											"\r",
											"for (var i = 0; i<data.documents.length; i++) {\r",
											"    title.push(data.documents[i].title)\r",
											"}\r",
											"\r",
											"pm.test(\"Both documents are present\", () => {\r",
											"    pm.expect(title).to.include('ATUI Petstore 3.0'),\r",
											"    pm.expect(title).to.include('home-iot-api')\r",
											"});\r",
											"\r",
											"pm.environment.set(\"pkg_file_slug\", data.documents[0].slug)"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/versions/{{version_1}}/documents",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{dashboard_1}}",
										"versions",
										"{{version_1}}",
										"documents"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.4.30 Get version references",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = pm.response.json();\r",
											"\r",
											"pm.test(\"There are 2 tags\", function () {\r",
											"    pm.expect(data.references[1].packageRef).to.include(pm.variables.replaceIn(\"{{package_1}}\"));\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v3/packages/{{dashboard_1}}/versions/{{version_1}}/references?limit=10&page=0",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v3",
										"packages",
										"{{dashboard_1}}",
										"versions",
										"{{version_1}}",
										"references"
									],
									"query": [
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "5.4.31 Publish dashboard version_3",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 202\", function () {\r",
											"    pm.response.to.have.status(202);\r",
											"});\r",
											"\r",
											"var data = JSON.parse(responseBody);\r",
											"pm.environment.set(\"publish_id\", data.publishId)\r",
											"\r",
											"setTimeout(() => { },10000);"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data; boundary=--------------------------127308995100818139707097",
										"type": "default"
									},
									{
										"key": "Content-Transfer-Encoding",
										"value": "base64",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"clientBuild\"\r\n\r\nfalse\r\n----------------------------127308995100818139707097\r\nContent-Disposition: form-data; name=\"config\"\r\n\r\n{\r\n    \"packageId\": \"QS-STATIC-TEST-2.DSHB\",\r\n    \"version\": \"2023.4\",\r\n    \"previousVersion\": \"2023.2\",\r\n    \"status\": \"release\",\r\n    \"versionFolder\": \"qwerty\",\r\n    \"refs\": [{\r\n            \"refId\": \"{{package_1}}\",\r\n            \"version\": \"{{pkg_petstore_version_1}}\"\r\n        },\r\n        {\r\n            \"refId\": \"{{package_1}}\",\r\n            \"version\": \"{{pkg_petstore_version_2}}\"\r\n        }\r\n    ],\r\n    \"files\": []\r\n}\r\n----------------------------127308995100818139707097--",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/publish",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{dashboard_1}}",
										"publish"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.4.32 Get dashboard versions",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = pm.response.json();\r",
											"\r",
											"pm.test(\"Packages has versions\", function () {\r",
											"    pm.expect(data.versions.length).to.greaterThan(0);\r",
											"});\r",
											"\r",
											"pm.environment.set(\"version_3\", data.versions[0].version);\r",
											"pm.environment.set(\"version_3_2\", data.versions[0].version.split(\"@\")[0]);"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/versions",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{dashboard_1}}",
										"versions"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.4.33 Export dashboard API changes",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-type is application\", function () {\r",
											"    pm.response.to.have.header('Content-Type');\r",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application');\r",
											"    pm.response.to.have.header('Content-Disposition');\r",
											"    pm.expect(pm.response.headers.get('Content-Disposition')).to.include('attachment');\r",
											"    pm.expect(pm.response.headers.get('Content-Disposition')).to.include(\"filename=APIChanges_\" + pm.variables.replaceIn('{{dashboard_1}}') + \"_\" + pm.variables.replaceIn('{{version_3_2}}' + \".xlsx\"));\r",
											"});\r",
											"\r",
											"pm.test(\"File isn't empty\", () => {\r",
											"    pm.expect(responseBody.length).to.greaterThan(0)\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/versions/{{version_3}}/changes/export",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{dashboard_1}}",
										"versions",
										"{{version_3}}",
										"changes",
										"export"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.4.34 Check dashboard summary",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var data = pm.response.json();\r",
											"\r",
											"pm.test(\"There are 4 operations\", function () {\r",
											"    pm.expect(data.operationTypes[0].operationsCount).to.eql(4);\r",
											"});\r",
											"\r",
											"pm.test(\"'operationTypes' = rest\", function () {\r",
											"    pm.expect(data.operationTypes[0].apiType).to.eql('rest');\r",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{at-api-key}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{SERVER_HOST}}/api/v2/packages/{{dashboard_1}}/versions/{{version_3}}?includeSummary=true",
									"host": [
										"{{SERVER_HOST}}"
									],
									"path": [
										"api",
										"v2",
										"packages",
										"{{dashboard_1}}",
										"versions",
										"{{version_3}}"
									],
									"query": [
										{
											"key": "includeSummary",
											"value": "true"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "",
						"type": "string"
					}
				]
			}
		},
		{
			"name": "6. Role",
			"item": [
				{
					"name": "6.1 Get list of permissions",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var data = pm.response.json();\r",
									"\r",
									"pm.test(\"All default premissions exist\", function(){\r",
									"    for (var i = 0; i<data.permissions.length; i++) {\r",
									"        pm.expect(data.permissions[i].permission).to.be.oneOf(['read','create_and_update_package','delete_package','manage_draft_version','manage_release_version','manage_archived_version','user_access_management','access_token_management'])\r",
									"    }\r",
									"});"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "api-key",
								"value": "{{at-api-key}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{SERVER_HOST}}/api/v2/permissions",
							"host": [
								"{{SERVER_HOST}}"
							],
							"path": [
								"api",
								"v2",
								"permissions"
							]
						}
					},
					"response": []
				},
				{
					"name": "6.2 Get list of system administrators",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var data = pm.response.json();\r",
									"\r",
									"var user = [];\r",
									"\r",
									"for (var i = 0; i<data.admins.length; i++) {\r",
									"    user.push(data.admins[i].name)\r",
									"}\r",
									"\r",
									"pm.test(\"Expected user is present\", () => {\r",
									"    pm.expect(user).to.include(pm.variables.replaceIn(\"{{User_name}}\"))\r",
									"});"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "api-key",
								"value": "{{at-api-key}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{SERVER_HOST}}/api/v2/admins",
							"host": [
								"{{SERVER_HOST}}"
							],
							"path": [
								"api",
								"v2",
								"admins"
							]
						}
					},
					"response": []
				},
				{
					"name": "6.3 Delete system administrator",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "api-key",
								"value": "{{at-api-key}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{SERVER_HOST}}/api/v2/admins/{{User_id}}",
							"host": [
								"{{SERVER_HOST}}"
							],
							"path": [
								"api",
								"v2",
								"admins",
								"{{User_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "6.4 Check that user deleted from 'system administrators' group",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var data = pm.response.json();\r",
									"\r",
									"var user = [];\r",
									"\r",
									"for (var i = 0; i<data.admins.length; i++) {\r",
									"    user.push(data.admins[i].id)\r",
									"}\r",
									"\r",
									"pm.test(\"Expected user is missing\", () => {\r",
									"    pm.expect(user).to.not.include(pm.variables.replaceIn(\"{{User_id}}\"))\r",
									"});"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "api-key",
								"value": "{{at-api-key}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{SERVER_HOST}}/api/v2/admins",
							"host": [
								"{{SERVER_HOST}}"
							],
							"path": [
								"api",
								"v2",
								"admins"
							]
						}
					},
					"response": []
				},
				{
					"name": "6.5 Add user to 'system administrators' group",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var data = pm.response.json();\r",
									"\r",
									"var user = [];\r",
									"\r",
									"for (var i = 0; i<data.admins.length; i++) {\r",
									"    user.push(data.admins[i].name)\r",
									"}\r",
									"\r",
									"pm.test(\"Expected user is present\", () => {\r",
									"    pm.expect(user).to.include(pm.variables.replaceIn(\"{{User_name}}\"))\r",
									"});"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "api-key",
								"value": "{{at-api-key}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": \"{{Username}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER_HOST}}/api/v2/admins",
							"host": [
								"{{SERVER_HOST}}"
							],
							"path": [
								"api",
								"v2",
								"admins"
							]
						}
					},
					"response": []
				},
				{
					"name": "6.6 Check list of roles",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var data = pm.response.json();\r",
									"\r",
									"var role = [];\r",
									"\r",
									"for (var i = 0; i<data.roles.length; i++) {\r",
									"    role.push(data.roles[i].role)\r",
									"}\r",
									"\r",
									"pm.test(\"Expected role is missing\", () => {\r",
									"    pm.expect(role).to.not.include('test-role-01')\r",
									"});"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "api-key",
								"value": "{{at-api-key}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{SERVER_HOST}}/api/v2/roles",
							"host": [
								"{{SERVER_HOST}}"
							],
							"path": [
								"api",
								"v2",
								"roles"
							]
						}
					},
					"response": []
				},
				{
					"name": "6.7 Create a new role",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"var data = JSON.parse(responseBody);\r",
									"\r",
									"pm.test(\"Role created\", function () {\r",
									"    pm.expect(data.roleId).to.eql('test-role-01');\r",
									"});\r",
									"pm.environment.set(\"role_id\", data.roleId);\r",
									"pm.environment.set(\"role_rank\", data.rank);"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "api-key",
								"value": "{{at-api-key}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"role\": \"test-role-01\",\r\n    \"permissions\": [\"user_access_management\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER_HOST}}/api/v2/roles",
							"host": [
								"{{SERVER_HOST}}"
							],
							"path": [
								"api",
								"v2",
								"roles"
							]
						}
					},
					"response": []
				},
				{
					"name": "6.8 Check newly created role",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var data = pm.response.json();\r",
									"\r",
									"var role = [];\r",
									"\r",
									"for (var i = 0; i<data.roles.length; i++) {\r",
									"    role.push(data.roles[i].role)\r",
									"}\r",
									"\r",
									"pm.test(\"Expected role exists\", () => {\r",
									"    pm.expect(role).to.include(pm.variables.replaceIn(\"{{role_id}}\"));\r",
									"    for (var i = 0; i<data.roles.length; i++) {\r",
									"        if (data.roles[i].roleId === pm.variables.replaceIn(\"{{role_id}}\")){\r",
									"            pm.expect(data.roles[i].rank).to.eq(2);\r",
									"            pm.expect(data.roles[i].permissions).to.include('user_access_management');\r",
									"        }\r",
									"    }\r",
									"});"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "api-key",
								"value": "{{at-api-key}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{SERVER_HOST}}/api/v2/roles",
							"host": [
								"{{SERVER_HOST}}"
							],
							"path": [
								"api",
								"v2",
								"roles"
							]
						}
					},
					"response": []
				},
				{
					"name": "6.9 Update created role",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "api-key",
								"value": "{{at-api-key}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"permissions\": [\"create_and_update_package\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER_HOST}}/api/v2/roles/{{role_id}}",
							"host": [
								"{{SERVER_HOST}}"
							],
							"path": [
								"api",
								"v2",
								"roles",
								"{{role_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "6.10 Check update of created role",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var data = pm.response.json();\r",
									"\r",
									"pm.test(\"Role has changed parameters\", () => {\r",
									"    for (var i = 0; i<data.roles.length; i++) {\r",
									"        if (data.roles[i].roleId === pm.variables.replaceIn(\"{{role_id}}\")){\r",
									"            pm.expect(data.roles[i].rank).to.eq(2);\r",
									"            pm.expect(data.roles[i].permissions).to.include('create_and_update_package');\r",
									"        }\r",
									"    }\r",
									"});"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "api-key",
								"value": "{{at-api-key}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{SERVER_HOST}}/api/v2/roles",
							"host": [
								"{{SERVER_HOST}}"
							],
							"path": [
								"api",
								"v2",
								"roles"
							]
						}
					},
					"response": []
				},
				{
					"name": "6.11 Get list of available roles for package",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var data = pm.response.json();\r",
									"\r",
									"var role = [];\r",
									"\r",
									"for (var i = 0; i<data.roles.length; i++) {\r",
									"    role.push(data.roles[i].role)\r",
									"}\r",
									"\r",
									"pm.test(\"Created role available for package\", () => {\r",
									"    pm.expect(role).to.include(pm.variables.replaceIn(\"{{role_id}}\"))\r",
									"});"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "api-key",
								"value": "{{at-api-key}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{SERVER_HOST}}/api/v2/packages/{{package_1}}/availableRoles?id={{User_id}}",
							"host": [
								"{{SERVER_HOST}}"
							],
							"path": [
								"api",
								"v2",
								"packages",
								"{{package_1}}",
								"availableRoles"
							],
							"query": [
								{
									"key": "id",
									"value": "{{User_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "6.12 Update the roles order",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "api-key",
								"value": "{{at-api-key}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"roles\": [\r\n  \"admin\",\r\n  \"owner\",\r\n  \"release-manager\",\r\n  \"{{role_id}}\",\r\n  \"editor\",\r\n  \"viewer\",\r\n  \"none\"\r\n]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER_HOST}}/api/v2/roles/changeOrder",
							"host": [
								"{{SERVER_HOST}}"
							],
							"path": [
								"api",
								"v2",
								"roles",
								"changeOrder"
							]
						}
					},
					"response": []
				},
				{
					"name": "6.13 Check order update of created role",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var data = pm.response.json();\r",
									"\r",
									"pm.test(\"Role order has been changed\", () => {\r",
									"    for (var i = 0; i<data.roles.length; i++) {\r",
									"        if (data.roles[i].roleId === pm.variables.replaceIn(\"{{role_id}}\")){\r",
									"            pm.expect(data.roles[i].rank).to.eq(3);\r",
									"        }\r",
									"    }\r",
									"});"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "api-key",
								"value": "{{at-api-key}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{SERVER_HOST}}/api/v2/roles",
							"host": [
								"{{SERVER_HOST}}"
							],
							"path": [
								"api",
								"v2",
								"roles"
							]
						}
					},
					"response": []
				},
				{
					"name": "6.14 Check 'system administrators' group",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var data = pm.response.json();\r",
									"\r",
									"var user = [];\r",
									"\r",
									"for (var i = 0; i<data.admins.length; i++) {\r",
									"    user.push(data.admins[i].name)\r",
									"}\r",
									"\r",
									"pm.test(\"Expected user is present\", () => {\r",
									"    pm.expect(user).to.include(pm.variables.replaceIn(\"{{User_name}}\"))\r",
									"});"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "api-key",
								"value": "{{at-api-key}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{SERVER_HOST}}/api/v2/admins",
							"host": [
								"{{SERVER_HOST}}"
							],
							"path": [
								"api",
								"v2",
								"admins"
							]
						}
					},
					"response": []
				},
				{
					"name": "6.15 Delete created role",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "api-key",
								"value": "{{at-api-key}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"role\": \"\",\r\n    \"permissions\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER_HOST}}/api/v2/roles/{{role_id}}",
							"host": [
								"{{SERVER_HOST}}"
							],
							"path": [
								"api",
								"v2",
								"roles",
								"{{role_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "6.16 Check that role deleted",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var data = pm.response.json();\r",
									"\r",
									"var role = [];\r",
									"\r",
									"for (var i = 0; i<data.roles.length; i++) {\r",
									"    role.push(data.roles[i].role)\r",
									"}\r",
									"\r",
									"pm.test(\"Role was deleted\", () => {\r",
									"    pm.expect(role).to.not.include(pm.variables.replaceIn(\"{{role_id}}\"));\r",
									"});"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "api-key",
								"value": "{{at-api-key}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{SERVER_HOST}}/api/v2/roles",
							"host": [
								"{{SERVER_HOST}}"
							],
							"path": [
								"api",
								"v2",
								"roles"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "",
						"type": "string"
					}
				]
			}
		},
		{
			"name": "7. Global Search",
			"item": [
				{
					"name": "7.1 Operations search",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var data = JSON.parse(responseBody);\r",
									"\r",
									"var title = [];\r",
									"\r",
									"for (var i = 0; i<data.operations.length; i++) {\r",
									"    title.push(data.operations[i].title)\r",
									"}\r",
									"\r",
									"\r",
									"pm.test(\"'Version' parameter is not empty\", () => {\r",
									"    pm.expect(data.operations[0].version).not.to.empty\r",
									"});"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "api-key",
								"value": "{{at-api-key}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"searchString\" : \"pet\",\r\n    \"packageIds\": [\"{{package_1}}\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER_HOST}}/api/v3/search/operations?limit=20",
							"host": [
								"{{SERVER_HOST}}"
							],
							"path": [
								"api",
								"v3",
								"search",
								"operations"
							],
							"query": [
								{
									"key": "limit",
									"value": "20"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "7.2 Operations search with 0 results",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var data = pm.response.json();\r",
									"\r",
									"pm.test(\"Operations list is empty\", function () {\r",
									"    pm.expect(data.operations.length).to.eq(0);\r",
									"});"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "api-key",
								"value": "{{at-api-key}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\r\n    \"searchString\" : \"pet\",\r\n    \"packageIds\": [\"{{package_1}}\"],\r\n    \"statuses\": [\"archived\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER_HOST}}/api/v3/search/operations?limit=20",
							"host": [
								"{{SERVER_HOST}}"
							],
							"path": [
								"api",
								"v3",
								"search",
								"operations"
							],
							"query": [
								{
									"key": "limit",
									"value": "20"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "7.4 Search documents",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var data = JSON.parse(responseBody);\r",
									"\r",
									"pm.test(\"Validate 'documents' is an array\", function () {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(data).to.have.property('documents'); // Check if 'documents' exists\r",
									"    pm.expect(data.documents).to.be.an('array');   // Check if 'documents' is an array\r",
									"});"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "api-key",
								"value": "{{at-api-key}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\r\n    \"searchString\": \"123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER_HOST}}/api/v3/search/documents?limit=7&page=0",
							"host": [
								"{{SERVER_HOST}}"
							],
							"path": [
								"api",
								"v3",
								"search",
								"documents"
							],
							"query": [
								{
									"key": "limit",
									"value": "7"
								},
								{
									"key": "page",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "7.5 Search documents with release status",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var data = JSON.parse(responseBody);\r",
									"\r",
									"pm.test(\"Search result isn't empty\", function () {\r",
									"    pm.expect(data.documents.length).to.greaterThan(0);\r",
									"});\r",
									"\r",
									"var status = [];\r",
									"\r",
									"for (var i = 0; i<data.documents.length; i++) {\r",
									"    status.push(data.documents[i].status)\r",
									"}\r",
									"\r",
									"pm.test(\"Status = 'Release'\", () => {\r",
									"    pm.expect(status).to.include('release')\r",
									"});"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "api-key",
								"value": "{{at-api-key}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"searchString\" : \"api\",\r\n    \"statuses\": [\"release\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER_HOST}}/api/v3/search/documents",
							"host": [
								"{{SERVER_HOST}}"
							],
							"path": [
								"api",
								"v3",
								"search",
								"documents"
							]
						}
					},
					"response": []
				},
				{
					"name": "7.6 Search packages",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var data = JSON.parse(responseBody);\r",
									"\r",
									"pm.test(\"Search has only 1 result\", function () {\r",
									"    pm.expect(data.packages.length).to.eq(1)\r",
									"});"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "api-key",
								"value": "{{at-api-key}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"searchString\": \"Test Service\",\r\n    \"packageIds\": [\"NC.CP.AH.TS\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER_HOST}}/api/v3/search/packages?limit=10",
							"host": [
								"{{SERVER_HOST}}"
							],
							"path": [
								"api",
								"v3",
								"search",
								"packages"
							],
							"query": [
								{
									"key": "limit",
									"value": "10"
								}
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "10. Cleanup",
			"item": [
				{
					"name": "10.3 Delete test data from DB",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "api-key",
								"value": "{{at-api-key}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{SERVER_HOST}}/api/internal/clear/{{test_id}}",
							"host": [
								"{{SERVER_HOST}}"
							],
							"path": [
								"api",
								"internal",
								"clear",
								"{{test_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "10.4 Delete static_test_1 data from DB",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "api-key",
								"value": "{{at-api-key}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{SERVER_HOST}}/api/internal/clear/STATIC-TEST-1",
							"host": [
								"{{SERVER_HOST}}"
							],
							"path": [
								"api",
								"internal",
								"clear",
								"STATIC-TEST-1"
							]
						}
					},
					"response": []
				},
				{
					"name": "10.5 Delete static_test_2 data from DB",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "api-key",
								"value": "{{at-api-key}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{SERVER_HOST}}/api/internal/clear/STATIC-TEST-2",
							"host": [
								"{{SERVER_HOST}}"
							],
							"path": [
								"api",
								"internal",
								"clear",
								"STATIC-TEST-2"
							]
						}
					},
					"response": []
				},
				{
					"name": "10.6 Delete static_test_3 data from DB",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "api-key",
								"value": "{{at-api-key}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{SERVER_HOST}}/api/internal/clear/STATIC-TEST-3",
							"host": [
								"{{SERVER_HOST}}"
							],
							"path": [
								"api",
								"internal",
								"clear",
								"STATIC-TEST-3"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "",
						"type": "string"
					}
				]
			}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}